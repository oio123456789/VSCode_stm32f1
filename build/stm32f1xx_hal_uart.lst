ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._ZL18UART_EndTxTransferP18UART_HandleTypeDef,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	_ZL18UART_EndTxTransferP18UART_HandleTypeDef:
  23              		.fnstart
  24              	.LFB108:
  25              		.file 1 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c"
   1:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
   2:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   ******************************************************************************
   3:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @file    stm32f1xx_hal_uart.c
   4:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @author  MCD Application Team
   5:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           + IO operation functions
  10:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           + Peripheral Control functions
  11:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   @verbatim
  13:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   ==============================================================================
  14:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****                         ##### How to use this driver #####
  15:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   ==============================================================================
  16:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   [..]
  17:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  18:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
  19:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  20:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  21:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  22:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (##) UART pins configuration:
  23:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  24:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             (+++) Configure the UART pins (TX as alternate function pull-up, RX as alternate functi
  25:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  26:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  27:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  28:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  29:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  30:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  31:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  32:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  33:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 2


  34:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****                   Tx/Rx parameters.                
  35:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  36:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  37:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  38:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  39:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  40:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  41:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
  42:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  43:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  44:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
  45:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
  48:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  49:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
  51:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
  53:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  54:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
  56:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      [..] 
  57:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  58:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  60:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             and receive process.
  61:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
  62:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      [..] 
  63:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  64:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
  67:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      [..]
  68:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         Three operation modes are available within this driver:
  69:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
  70:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      *** Polling mode IO operation ***
  71:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      =================================
  72:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      [..]
  73:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  74:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  75:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
  76:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  77:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      ===================================
  78:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      [..]
  79:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  80:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  81:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  82:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  83:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  84:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  85:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  86:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  87:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
  88:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      *** DMA mode IO operation ***
  89:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      ==============================
  90:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      [..] 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 3


  91:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  92:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  93:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  94:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  95:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  96:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
  97:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
  98:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
  99:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 100:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 101:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 102:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 103:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 104:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 105:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 106:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 107:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      *** UART HAL driver macros list ***
 108:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      =============================================
 109:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      [..]
 110:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 111:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 112:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 113:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 114:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 115:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 116:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 117:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 118:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 119:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 120:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      [..]
 121:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 122:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   @endverbatim
 123:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      [..]
 124:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (@) Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 125:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 126:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 127:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 128:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 129:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 130:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     |---------------------|---------------------------------------|
 131:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 132:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 133:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 134:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 135:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 136:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 137:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 138:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 139:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   ******************************************************************************
 140:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @attention
 141:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *
 142:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 143:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *
 144:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 145:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 146:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 147:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 4


 148:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 149:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 150:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 151:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 152:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 153:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *      without specific prior written permission.
 154:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *
 155:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 156:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 157:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 158:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 159:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 160:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 161:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 162:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 163:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 164:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 165:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *
 166:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   ******************************************************************************
 167:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 168:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 169:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 170:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #include "stm32f1xx_hal.h"
 171:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 172:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /** @addtogroup STM32F1xx_HAL_Driver
 173:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @{
 174:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 175:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 176:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /** @defgroup UART UART
 177:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief HAL UART module driver
 178:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @{
 179:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 180:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 181:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 182:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 183:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 184:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 185:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @{
 186:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 187:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 188:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @}
 189:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 190:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 191:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 192:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 193:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 194:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @{
 195:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 196:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 197:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 198:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 199:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 200:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 201:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 202:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 203:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 204:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 5


 205:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 206:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 207:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 208:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 209:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 210:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 211:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 212:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 213:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 214:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @}
 215:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 216:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 217:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 218:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @{
 219:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 220:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 221:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 222:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 223:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *
 224:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** @verbatim
 225:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   ==============================================================================
 226:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 227:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   ==============================================================================
 228:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     [..]
 229:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 230:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     in asynchronous mode.
 231:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 232:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) Baud Rate
 233:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) Word Length 
 234:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) Stop Bit
 235:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 236:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 237:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 238:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 239:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) Hardware flow control
 240:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) Receiver/transmitter modes
 241:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) Over Sampling Method
 242:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     [..]
 243:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 244:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 245:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manuals 
 246:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (RM0008 for STM32F10Xxx MCUs and RM0041 for STM32F100xx MCUs)).
 247:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 248:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** @endverbatim
 249:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @{
 250:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 251:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 252:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 253:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 254:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 255:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 256:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 257:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
 258:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 259:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 260:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
 261:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 6


 262:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart == NULL)
 263:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 264:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 265:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 266:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 267:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the parameters */
 268:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 269:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 270:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 */
 271:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 272:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 273:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 274:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   else
 275:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 276:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 277:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 278:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 279:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 280:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 281:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 282:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 283:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 284:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {  
 285:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 286:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 287:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 288:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 289:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 290:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 291:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 292:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 293:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 294:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 295:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 296:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 297:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 298:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 299:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 300:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 301:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 302:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 303:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 304:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 305:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 306:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 307:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 308:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 309:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 310:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 311:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 312:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 313:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 314:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
 315:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 316:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 317:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 318:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 7


 319:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 320:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 321:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 322:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
 323:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 324:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 325:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
 326:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 327:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart == NULL)
 328:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 329:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 330:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 331:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****  
 332:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the parameters */ 
 333:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 334:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 335:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 336:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 337:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 338:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 339:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 340:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 341:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 342:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 343:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 344:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 345:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 346:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 347:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 348:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 349:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 350:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 351:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 352:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 353:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 354:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 355:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 356:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 357:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 358:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 359:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 360:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 361:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 362:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****  
 363:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 364:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 365:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 366:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 367:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 368:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 369:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 370:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 371:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
 372:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 373:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 374:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 375:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 8


 376:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 377:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 378:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 379:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  BreakDetectLength: Specifies the LIN break detection length.
 380:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 381:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 382:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 383:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
 384:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 385:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 386:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
 387:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 388:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart == NULL)
 389:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 390:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 391:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 392:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 393:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the LIN UART instance */  
 394:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 395:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the Break detection length parameter */
 396:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 397:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 398:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 399:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 400:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 401:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 402:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 403:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 404:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 405:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 406:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 407:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 408:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 409:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 410:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 411:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 412:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 413:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 414:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 415:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 416:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 417:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 418:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 419:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 420:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 421:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 422:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 423:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 424:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 425:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 426:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 427:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 428:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 429:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 430:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 431:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 432:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 9


 433:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 434:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 435:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 436:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 437:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 438:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
 439:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 440:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 441:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 442:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 443:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 444:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 445:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 446:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  Address: USART address
 447:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  WakeUpMethod: specifies the USART wake-up method.
 448:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 449:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 450:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 451:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
 452:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 453:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 454:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
 455:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 456:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart == NULL)
 457:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 458:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 459:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 460:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 461:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check UART instance capabilities */  
 462:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MULTIPROCESSOR_INSTANCE(huart->Instance));
 463:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 464:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 465:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 466:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 467:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 468:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 469:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 470:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 471:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 472:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 473:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 474:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 475:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 476:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 477:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 478:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 479:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 480:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 481:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 482:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 483:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 484:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 485:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 486:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 487:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 488:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
 489:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 10


 490:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 491:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 492:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 493:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 494:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Set the USART address node */
 495:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, Address);
 496:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 497:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 498:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 499:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 500:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 501:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 502:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 503:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 504:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 505:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 506:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 507:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 508:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
 509:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 510:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 511:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 512:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
 513:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 514:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 515:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
 516:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 517:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 518:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
 519:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 520:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart == NULL)
 521:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 522:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 523:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 524:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 525:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the parameters */
 526:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 527:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 528:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 529:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 530:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* DeInit the low level hardware */
 531:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 532:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 533:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 534:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 535:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 536:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 537:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Unlock */
 538:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 539:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 540:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
 541:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 542:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 543:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 544:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  UART MSP Init.
 545:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 546:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 11


 547:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
 548:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 549:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 550:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
 551:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 552:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UNUSED(huart);
 553:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 554:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 555:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    */
 556:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 557:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 558:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 559:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 560:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 561:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 562:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
 563:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 564:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 565:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
 566:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 567:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UNUSED(huart);
 568:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 569:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 570:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    */
 571:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 572:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 573:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 574:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @}
 575:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 576:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 577:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 578:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 579:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *
 580:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** @verbatim
 581:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   ==============================================================================
 582:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****                       ##### IO operation functions #####
 583:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   ==============================================================================
 584:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   [..]
 585:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 586:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     and Half duplex data transfers.
 587:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 588:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (#) There are two modes of transfer:
 589:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 590:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 591:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             after finishing transfer.  
 592:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 593:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 594:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 595:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 596:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             using DMA mode.
 597:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
 598:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 599:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 600:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             a communication error is detected.
 601:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 602:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (#) Blocking mode APIs are:
 603:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit()
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 12


 604:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 605:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 606:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 607:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 608:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 609:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 610:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 611:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 612:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 613:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 614:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 615:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 616:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 617:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 618:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 619:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 620:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 621:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 622:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 623:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 624:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 625:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     [..]
 626:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 627:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX
 628:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           can't be useful.
 629:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 630:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** @endverbatim
 631:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @{
 632:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 633:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 634:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 635:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
 636:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 637:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 638:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 639:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 640:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration  
 641:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
 642:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 643:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 644:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
 645:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 646:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
 647:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 648:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 649:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 650:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 651:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 652:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 653:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 654:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 655:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 656:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Process Locked */
 657:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 658:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 659:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 660:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 13


 661:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 662:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 663:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 664:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 665:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 666:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 667:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 668:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 669:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->TxXferCount--;
 670:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 671:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 672:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 673:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 674:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 675:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 676:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 677:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 678:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 679:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 680:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           pData +=2U;
 681:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 682:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         else
 683:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 684:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           pData +=1U;
 685:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 686:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 687:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       else
 688:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 689:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 690:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 691:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 692:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 693:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 694:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 695:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 696:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 697:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 698:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 699:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       return HAL_TIMEOUT;
 700:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 701:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 702:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 703:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 704:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 705:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 706:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 707:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 708:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_OK;
 709:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 710:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   else
 711:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 712:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 713:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 714:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 715:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 716:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 717:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Receive an amount of data in blocking mode. 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 14


 718:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 719:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 720:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 721:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 722:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration
 723:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
 724:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 725:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 726:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
 727:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 728:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
 729:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 730:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 731:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 732:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 733:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 734:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 735:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 736:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 737:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 738:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Process Locked */
 739:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 740:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     
 741:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 742:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 743:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 744:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 745:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 746:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 747:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 748:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 749:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 750:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Check the remain data to be received */
 751:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 752:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 753:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->RxXferCount--;
 754:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 755:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 756:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 757:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 758:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 759:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 760:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         tmp = (uint16_t*)pData;
 761:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 762:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 763:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 764:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           pData +=2U;
 765:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 766:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         else
 767:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 768:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 769:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           pData +=1U;
 770:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 771:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 772:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       } 
 773:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       else
 774:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 15


 775:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 776:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 777:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 778:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 779:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 780:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 781:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 782:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 783:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         else
 784:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 785:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 786:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 787:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 788:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 789:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 790:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 791:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 792:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 793:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     
 794:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 795:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 796:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 797:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_OK;
 798:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 799:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   else
 800:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 801:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 802:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 803:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 804:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 805:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 806:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 807:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 808:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 809:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 810:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 811:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
 812:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 813:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 814:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
 815:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 816:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 817:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 818:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U)) 
 819:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 820:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 821:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 822:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Process Locked */
 823:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 824:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 825:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 826:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 827:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 828:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 829:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 830:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 831:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 16


 832:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 833:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 834:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 835:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 836:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 837:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 838:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_OK;
 839:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 840:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   else
 841:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 842:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 843:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 844:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 845:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 846:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 847:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 848:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 849:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 850:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 851:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 852:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
 853:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 854:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 855:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
 856:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 857:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 858:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 859:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 860:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 861:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 862:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 863:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 864:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Process Locked */
 865:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 866:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 867:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 868:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 869:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 870:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 871:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 872:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 873:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     
 874:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 875:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 876:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 877:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 878:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 879:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 880:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 881:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 882:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 883:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
 884:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 885:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 886:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_OK;
 887:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 888:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   else
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 17


 889:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 890:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 891:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 892:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 893:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 894:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 895:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 896:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 897:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 898:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 899:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 900:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
 901:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 902:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 903:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
 904:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 905:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 906:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 907:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 908:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 909:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 910:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 911:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 912:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 913:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 914:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Process Locked */
 915:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 916:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 917:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 918:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 919:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 920:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 921:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 922:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 923:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 924:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 925:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 926:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 927:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 928:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 929:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 930:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
 931:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 932:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 933:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Set the DMA abort callback */
 934:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 935:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 936:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 937:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 938:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 939:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 940:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 941:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 942:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 943:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 944:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 945:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 18


 946:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 947:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        in the UART CR3 register */
 948:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 949:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 950:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_OK;
 951:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 952:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   else
 953:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 954:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 955:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 956:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 957:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 958:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 959:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 960:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 961:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 962:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 963:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 964:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
 965:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
 966:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
 967:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 968:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
 969:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 970:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 971:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 972:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 973:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 974:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 975:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 976:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 977:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 978:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 979:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Process Locked */
 980:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 981:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 982:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 983:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 984:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 985:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 986:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 987:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 988:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 989:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 990:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 991:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 992:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 993:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 994:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
 995:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 996:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 997:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Set the DMA abort callback */
 998:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 999:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1000:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Enable the DMA channel */
1001:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
1002:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 19


1003:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1004:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
1005:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1006:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1007:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1008:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1009:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1010:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1011:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1012:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1013:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1014:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1015:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1016:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
1017:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     in the UART CR3 register */
1018:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1019:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1020:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_OK;
1021:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1022:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   else
1023:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1024:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_BUSY;
1025:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1026:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1027:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1028:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1029:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1030:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1031:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1032:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
1033:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1034:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1035:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1036:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1037:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1038:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Locked */
1039:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1040:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1041:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1042:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1043:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1044:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1045:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1046:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1047:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1048:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1049:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1050:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1051:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1052:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1053:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1054:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1055:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1056:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1057:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1058:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1059:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Unlocked */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 20


1060:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1061:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1062:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
1063:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1064:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1065:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1066:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1067:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1068:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1069:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
1070:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1071:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1072:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1073:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Locked */
1074:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1075:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1076:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1077:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1078:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1079:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1080:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1081:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1082:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1083:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1084:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1085:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1086:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     
1087:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1088:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1089:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1090:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     
1091:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1092:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1093:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1094:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1095:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1096:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1097:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1098:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
1099:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1100:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1101:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1102:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1103:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1104:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1105:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
1106:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1107:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1108:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1109:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1110:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1111:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1112:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1113:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1114:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      */
1115:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1116:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 21


1117:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1118:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1119:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1120:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1121:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1122:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1123:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1124:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1125:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1126:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1127:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1128:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1129:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1130:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1131:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1132:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1133:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1134:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1135:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1136:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1137:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1138:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1139:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1140:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1141:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1142:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1143:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1144:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
1145:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1146:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1147:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1148:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1149:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1150:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1151:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1152:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1153:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1154:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1155:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1156:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1157:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
1158:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** */
1159:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1160:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1161:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1162:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1163:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1164:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1165:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1166:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1167:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1168:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1169:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1170:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1171:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1172:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1173:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 22


1174:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1175:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1176:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1177:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1178:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1179:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1180:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1181:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1182:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1183:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1184:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1185:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1186:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1187:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1188:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1189:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1190:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1191:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1192:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1193:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1194:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1195:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1196:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1197:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1198:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1199:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1200:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1201:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
1202:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1203:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1204:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1205:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1206:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1207:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1208:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
1209:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1210:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1211:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1212:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1213:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1214:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1215:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1216:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1217:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1218:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1219:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1220:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1221:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
1222:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** */
1223:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1224:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1225:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1226:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1227:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1228:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1229:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1230:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 23


1231:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1232:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1233:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1234:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1235:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1236:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1237:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1238:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1239:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1240:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1241:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1242:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1243:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1244:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Reset Tx transfer counter */
1245:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1246:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1247:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1248:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1249:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1250:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
1251:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1252:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1253:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1254:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1255:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1256:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1257:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1258:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1259:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1260:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1261:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1262:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1263:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
1264:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** */
1265:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1266:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1267:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1268:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1269:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1270:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1271:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1272:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1273:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1274:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1275:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1276:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1277:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1278:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1279:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1280:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1281:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1282:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1283:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1284:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1285:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1286:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1287:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Reset Rx transfer counter */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 24


1288:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1289:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1290:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1291:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1292:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1293:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
1294:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1295:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1296:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1297:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1298:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1299:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1300:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1301:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1302:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1303:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1304:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1305:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1306:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1307:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1308:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
1309:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** */
1310:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1311:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1312:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
1313:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1314:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1315:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1316:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1317:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1318:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1319:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      before any call to DMA Abort functions */
1320:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1321:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1322:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1323:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1324:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
1325:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1326:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1327:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1328:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1329:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     else
1330:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1331:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1332:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1333:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1334:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1335:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1336:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1337:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1338:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
1339:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1340:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1341:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1342:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1343:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     else
1344:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 25


1345:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1346:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1347:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1348:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1349:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1350:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1351:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1352:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1353:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1354:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1355:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1356:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1357:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1358:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1359:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1360:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1361:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
1362:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1363:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
1364:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1365:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
1366:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       else
1367:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
1368:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
1369:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
1370:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1371:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1372:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1373:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1374:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1375:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1376:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1377:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1378:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1379:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1380:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1381:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1382:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1383:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1384:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
1385:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1386:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
1387:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1388:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         AbortCplt = 0x01U;
1389:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
1390:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       else
1391:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
1392:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
1393:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
1394:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1395:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1396:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1397:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1398:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(AbortCplt == 0x01U)
1399:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1400:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1401:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U; 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 26


1402:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1403:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1404:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Reset ErrorCode */
1405:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1406:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1407:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1408:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1409:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1410:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1411:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1412:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1413:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1414:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1415:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
1416:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1417:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1418:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1419:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1420:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1421:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1422:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1423:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1424:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1425:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1426:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1427:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1428:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1429:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1430:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
1431:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** */
1432:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1433:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1434:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1435:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1436:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1437:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1438:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1439:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1440:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1441:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1442:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1443:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1444:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1445:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1446:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1447:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1448:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1449:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
1450:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1451:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
1452:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1453:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1454:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
1455:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1456:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     else
1457:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1458:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Reset Tx transfer counter */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 27


1459:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
1460:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1461:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1462:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1463:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1464:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1465:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1466:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1467:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1468:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   else
1469:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1470:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Reset Tx transfer counter */
1471:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1472:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1473:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1474:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1475:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1476:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1477:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1478:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1479:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1480:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
1481:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1482:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1483:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1484:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1485:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1486:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1487:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1488:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1489:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1490:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1491:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1492:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1493:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1494:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1495:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
1496:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** */
1497:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1498:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1499:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1500:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1501:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1502:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1503:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1504:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1505:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1506:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1507:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1508:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1509:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1510:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1511:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1512:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1513:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1514:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1515:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 28


1516:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1517:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
1518:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1519:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1520:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
1521:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1522:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     else
1523:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1524:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Reset Rx transfer counter */
1525:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
1526:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1527:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1528:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1529:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1530:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1531:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1532:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1533:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1534:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   else
1535:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1536:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Reset Rx transfer counter */
1537:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1538:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1539:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1540:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1541:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1542:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1543:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1544:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1545:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1546:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
1547:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1548:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1549:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1550:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1551:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1552:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1553:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
1554:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1555:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1556:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1557:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
1558:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1559:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
1560:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
1561:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1562:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1563:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* If no error occurs */
1564:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
1565:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(errorflags == RESET)
1566:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1567:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
1568:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1569:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1570:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       UART_Receive_IT(huart);
1571:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       return;
1572:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 29


1573:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1574:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1575:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* If some errors occur */
1576:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE 
1577:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1578:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
1579:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1580:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1581:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1582:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1583:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1584:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
1585:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1586:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1587:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1588:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1589:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1590:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
1591:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1592:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1593:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1594:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1595:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1596:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
1597:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1598:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     { 
1599:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1600:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1601:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1602:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1603:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1604:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
1605:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
1606:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1607:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
1608:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         UART_Receive_IT(huart);
1609:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
1610:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1611:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1612:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****          consider error as blocking */
1613:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1614:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
1615:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
1616:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1617:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1618:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1619:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1620:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1621:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1622:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1623:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
1624:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1625:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1626:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1627:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1628:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           {
1629:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 30


1630:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1631:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1632:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1633:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             {
1634:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
1635:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1636:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             }
1637:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           }
1638:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           else
1639:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           {
1640:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             /* Call user error callback */
1641:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1642:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           }
1643:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
1644:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         else
1645:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
1646:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           /* Call user error callback */
1647:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1648:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
1649:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
1650:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       else
1651:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
1652:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1653:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****            Error is notified to user through user error callback */
1654:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1655:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1656:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
1657:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
1658:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return;
1659:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   } /* End if some error occurs */
1660:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1661:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1662:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1663:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1664:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     UART_Transmit_IT(huart);
1665:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return;
1666:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1667:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1668:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1669:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1670:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
1671:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1672:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return;
1673:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
1674:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1675:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1676:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1677:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1678:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1679:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1680:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
1681:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1682:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1683:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1684:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1685:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UNUSED(huart);
1686:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 31


1687:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1688:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    */ 
1689:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1690:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1691:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1692:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1693:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1694:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1695:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
1696:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1697:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1698:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1699:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1700:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UNUSED(huart);
1701:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1702:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
1703:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    */ 
1704:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1705:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1706:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1707:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1708:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1709:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1710:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
1711:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1712:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1713:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1714:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1715:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UNUSED(huart);
1716:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1717:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
1718:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    */
1719:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1720:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1721:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1722:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1723:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1724:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1725:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
1726:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1727:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1728:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1729:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1730:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UNUSED(huart);
1731:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1732:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
1733:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    */
1734:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1735:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1736:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1737:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  UART error callbacks.
1738:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1739:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1740:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
1741:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1742:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1743:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 32


1744:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1745:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UNUSED(huart); 
1746:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1747:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
1748:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    */ 
1749:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1750:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1751:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1752:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1753:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1754:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
1755:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1756:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1757:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1758:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1759:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UNUSED(huart);
1760:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1761:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1762:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1763:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    */
1764:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1765:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1766:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1767:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1768:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
1769:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1770:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1771:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1772:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1773:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UNUSED(huart);
1774:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1775:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1776:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1777:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    */
1778:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1779:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1780:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1781:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1782:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1783:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
1784:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1785:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1786:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1787:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1788:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UNUSED(huart);
1789:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1790:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1791:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1792:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    */
1793:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1794:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1795:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1796:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @}
1797:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1798:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1799:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1800:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *  @brief   UART control functions 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 33


1801:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *
1802:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** @verbatim   
1803:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   ==============================================================================
1804:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1805:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   ==============================================================================  
1806:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   [..]
1807:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1808:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
1809:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1810:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1811:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
1812:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
1813:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     
1814:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** @endverbatim
1815:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @{
1816:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1817:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1818:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1819:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Transmits break characters.
1820:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1821:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1822:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
1823:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1824:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1825:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1826:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the parameters */
1827:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1828:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1829:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Locked */
1830:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1831:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1832:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1833:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1834:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Send break characters */
1835:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
1836:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****  
1837:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1838:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1839:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1840:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1841:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1842:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK; 
1843:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1844:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1845:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1846:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1847:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1848:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1849:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
1850:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1851:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1852:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1853:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the parameters */
1854:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1855:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1856:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Locked */
1857:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 34


1858:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1859:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1860:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1861:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1862:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
1863:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1864:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1865:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1866:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1867:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1868:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1869:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK; 
1870:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1871:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1872:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1873:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1874:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1875:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1876:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
1877:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1878:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1879:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1880:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the parameters */
1881:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1882:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1883:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Locked */
1884:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1885:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1886:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1887:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1888:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
1889:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
1890:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1891:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1892:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1893:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1894:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1895:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1896:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK; 
1897:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1898:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1899:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1900:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1901:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1902:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1903:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
1904:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1905:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1906:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1907:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1908:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1909:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Locked */
1910:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1911:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1912:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1913:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1914:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 35


1915:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1916:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1917:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
1918:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1919:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1920:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1921:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
1922:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1923:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
1924:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1925:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1926:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1927:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1928:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1929:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1930:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1931:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK; 
1932:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1933:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1934:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1935:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1936:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1937:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1938:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
1939:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1940:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1941:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1942:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1943:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1944:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Locked */
1945:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1946:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1947:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1948:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1949:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1950:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1951:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1952:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
1953:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1954:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1955:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1956:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
1957:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1958:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
1959:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1960:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1961:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1962:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1963:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1964:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1965:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1966:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK; 
1967:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
1968:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1969:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1970:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @}
1971:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 36


1972:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1973:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1974:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1975:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *
1976:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** @verbatim   
1977:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   ==============================================================================
1978:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
1979:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   ==============================================================================  
1980:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****  [..]
1981:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1982:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1983:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    process
1984:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1985:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1986:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
1987:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** @endverbatim
1988:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @{
1989:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1990:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
1991:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
1992:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Returns the UART state.
1993:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1994:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1995:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL state
1996:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
1997:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1998:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
1999:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2000:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   temp1 = huart->gState;
2001:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   temp2 = huart->RxState;
2002:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
2003:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2004:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
2005:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2006:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2007:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Return the UART error code
2008:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart : pointer to a UART_HandleTypeDef structure that contains
2009:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *              the configuration information for the specified UART.
2010:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval UART Error Code
2011:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2012:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2013:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
2014:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
2015:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
2016:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2017:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2018:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @}
2019:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2020:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2021:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2022:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
2023:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  hdma: DMA handle
2024:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
2025:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2026:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2027:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
2028:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 37


2029:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
2030:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2031:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2032:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0U;
2033:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2034:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2035:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        in the UART CR3 register */
2036:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2037:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2038:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2039:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2040:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2041:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
2042:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* DMA Circular mode */
2043:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   else
2044:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2045:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2046:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
2047:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
2048:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2049:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2050:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
2051:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2052:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2053:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
2054:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2055:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2056:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
2057:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2058:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2059:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
2060:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
2061:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2062:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2063:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
2064:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  hdma: DMA handle
2065:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
2066:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2067:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2068:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
2069:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2070:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
2071:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2072:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2073:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0U;
2074:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
2075:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2076:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2077:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2078:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     
2079:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
2080:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****        in the UART CR3 register */
2081:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2082:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2083:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2084:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2085:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 38


2086:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2087:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
2088:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2089:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2090:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
2091:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2092:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2093:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
2094:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2095:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2096:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
2097:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2098:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
2099:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
2100:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2101:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2102:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2103:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  hdma: DMA handle
2104:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
2105:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2106:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2107:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
2108:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2109:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2110:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2111:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2112:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
2113:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
2114:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2115:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0U;
2116:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2117:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
2118:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2119:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2120:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR); 
2121:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
2122:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2123:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0U;
2124:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2125:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
2126:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2127:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
2128:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2129:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
2130:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2131:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2132:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2133:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2134:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2135:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  Flag: specifies the UART flag to check.
2136:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  Status: The new Flag status (SET or RESET).
2137:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  Tickstart Tick start value
2138:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration
2139:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
2140:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2141:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2142:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 39


2143:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Wait until flag is set */
2144:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status) 
2145:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2146:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Check for the Timeout */
2147:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2148:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
2149:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
2150:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
2151:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2152:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2153:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2154:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         
2155:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2156:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2157:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         
2158:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         /* Process Unlocked */
2159:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2160:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         
2161:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         return HAL_TIMEOUT;
2162:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
2163:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
2164:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
2165:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
2166:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
2167:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
2168:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2169:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2170:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2171:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: UART handle.
2172:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
2173:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2174:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2175:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
  26              		.loc 1 2175 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
2176:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2177:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  32              		.loc 1 2177 0
  33 0000 0268     		ldr	r2, [r0]
  34 0002 D368     		ldr	r3, [r2, #12]
  35 0004 23F0C003 		bic	r3, r3, #192
  36 0008 D360     		str	r3, [r2, #12]
2178:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2179:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2180:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  37              		.loc 1 2180 0
  38 000a 2023     		movs	r3, #32
  39 000c 80F83930 		strb	r3, [r0, #57]
2181:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
  40              		.loc 1 2181 0
  41 0010 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE108:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 40


  44              		.cantunwind
  45              		.fnend
  47              		.section	.text._ZL18UART_EndRxTransferP18UART_HandleTypeDef,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu softvfp
  54              	_ZL18UART_EndRxTransferP18UART_HandleTypeDef:
  55              		.fnstart
  56              	.LFB109:
2182:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2183:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2184:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2185:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: UART handle.
2186:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
2187:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2188:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2189:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
  57              		.loc 1 2189 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  62              	.LVL1:
2190:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2191:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  63              		.loc 1 2191 0
  64 0000 0268     		ldr	r2, [r0]
  65 0002 D368     		ldr	r3, [r2, #12]
  66 0004 23F49073 		bic	r3, r3, #288
  67 0008 D360     		str	r3, [r2, #12]
2192:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  68              		.loc 1 2192 0
  69 000a 0268     		ldr	r2, [r0]
  70 000c 5369     		ldr	r3, [r2, #20]
  71 000e 23F00103 		bic	r3, r3, #1
  72 0012 5361     		str	r3, [r2, #20]
2193:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2194:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2195:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  73              		.loc 1 2195 0
  74 0014 2023     		movs	r3, #32
  75 0016 80F83A30 		strb	r3, [r0, #58]
2196:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
  76              		.loc 1 2196 0
  77 001a 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE109:
  80              		.cantunwind
  81              		.fnend
  83              		.section	.text._ZL16UART_Transmit_ITP18UART_HandleTypeDef,"ax",%progbits
  84              		.align	1
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu softvfp
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 41


  90              	_ZL16UART_Transmit_ITP18UART_HandleTypeDef:
  91              		.fnstart
  92              	.LFB115:
2197:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2198:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2199:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2200:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2201:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2202:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
2203:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2204:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2205:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
2206:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2207:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2208:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2209:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2210:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2211:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
2212:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2213:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2214:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2215:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2216:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2217:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2218:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2219:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
2220:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2221:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2222:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
2223:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2224:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
2225:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2226:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2227:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2228:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2229:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2230:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2231:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
2232:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       return;
2233:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
2234:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
2235:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2236:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2237:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2238:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2239:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2240:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
2241:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2242:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2243:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2244:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2245:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2246:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2247:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2248:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2249:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
2250:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 42


2251:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2252:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2253:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2254:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2255:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2256:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2257:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
2258:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2259:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2260:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
2261:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2262:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
2263:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2264:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2265:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2266:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->hdmatx != NULL)
2267:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2268:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
2269:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
2270:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       return;
2271:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
2272:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
2273:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
2274:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2275:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2276:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2277:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2278:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
2279:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2280:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2281:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2282:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2283:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2284:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2285:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2286:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2287:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
2288:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2289:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2290:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2291:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2292:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2293:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2294:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2295:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
2296:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2297:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2298:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
2299:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2300:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2301:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2302:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2303:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2304:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2305:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2306:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2307:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 43


2308:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
2309:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2310:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2311:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2312:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2313:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2314:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2315:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2316:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
2317:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2318:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2319:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
2320:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2321:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2322:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2323:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2324:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2325:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2326:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2327:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2328:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
2329:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
2330:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2331:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2332:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2333:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
2334:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2335:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
2336:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2337:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2338:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
  93              		.loc 1 2338 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  98              	.LVL2:
2339:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint16_t* tmp;
2340:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
2341:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2342:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
  99              		.loc 1 2342 0
 100 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 101 0004 DBB2     		uxtb	r3, r3
 102 0006 212B     		cmp	r3, #33
 103 0008 2AD1     		bne	.L8
2343:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2344:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 104              		.loc 1 2344 0
 105 000a 8368     		ldr	r3, [r0, #8]
 106 000c B3F5805F 		cmp	r3, #4096
 107 0010 16D0     		beq	.L10
2345:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
2346:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
2347:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
2348:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2349:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 44


2350:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2351:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
2352:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       else
2353:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
2354:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
2355:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
2356:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     } 
2357:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     else
2358:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
2359:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 108              		.loc 1 2359 0
 109 0012 036A     		ldr	r3, [r0, #32]
 110 0014 5A1C     		adds	r2, r3, #1
 111 0016 0262     		str	r2, [r0, #32]
 112 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 113 001a 0368     		ldr	r3, [r0]
 114 001c 5A60     		str	r2, [r3, #4]
 115              	.L7:
2360:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
2361:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2362:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(--huart->TxXferCount == 0U)
 116              		.loc 1 2362 0
 117 001e C38C     		ldrh	r3, [r0, #38]
 118 0020 013B     		subs	r3, r3, #1
 119 0022 9BB2     		uxth	r3, r3
 120 0024 C384     		strh	r3, [r0, #38]	@ movhi
 121 0026 EBB9     		cbnz	r3, .L9
2363:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
2364:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2365:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 122              		.loc 1 2365 0 discriminator 1
 123 0028 0268     		ldr	r2, [r0]
 124 002a D368     		ldr	r3, [r2, #12]
 125 002c 23F08003 		bic	r3, r3, #128
 126 0030 D360     		str	r3, [r2, #12]
2366:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2367:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
2368:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 127              		.loc 1 2368 0 discriminator 1
 128 0032 0268     		ldr	r2, [r0]
 129 0034 D368     		ldr	r3, [r2, #12]
 130 0036 43F04003 		orr	r3, r3, #64
 131 003a D360     		str	r3, [r2, #12]
2369:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
2370:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_OK;
 132              		.loc 1 2370 0 discriminator 1
 133 003c 0020     		movs	r0, #0
 134              	.LVL3:
 135 003e 7047     		bx	lr
 136              	.LVL4:
 137              	.L10:
2346:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 138              		.loc 1 2346 0
 139 0040 036A     		ldr	r3, [r0, #32]
 140              	.LVL5:
2347:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 141              		.loc 1 2347 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 45


 142 0042 1B88     		ldrh	r3, [r3]
 143              	.LVL6:
 144 0044 0268     		ldr	r2, [r0]
 145 0046 C3F30803 		ubfx	r3, r3, #0, #9
 146 004a 5360     		str	r3, [r2, #4]
 147              	.LVL7:
2348:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 148              		.loc 1 2348 0
 149 004c 0369     		ldr	r3, [r0, #16]
 150 004e 1BB9     		cbnz	r3, .L6
2350:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 151              		.loc 1 2350 0
 152 0050 036A     		ldr	r3, [r0, #32]
 153 0052 0233     		adds	r3, r3, #2
 154 0054 0362     		str	r3, [r0, #32]
 155 0056 E2E7     		b	.L7
 156              	.L6:
2354:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 157              		.loc 1 2354 0
 158 0058 036A     		ldr	r3, [r0, #32]
 159 005a 0133     		adds	r3, r3, #1
 160 005c 0362     		str	r3, [r0, #32]
 161 005e DEE7     		b	.L7
 162              	.L8:
2371:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
2372:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   else
2373:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2374:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 163              		.loc 1 2374 0
 164 0060 0220     		movs	r0, #2
 165              	.LVL8:
 166 0062 7047     		bx	lr
 167              	.LVL9:
 168              	.L9:
2370:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 169              		.loc 1 2370 0
 170 0064 0020     		movs	r0, #0
 171              	.LVL10:
2375:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
2376:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 172              		.loc 1 2376 0
 173 0066 7047     		bx	lr
 174              		.cfi_endproc
 175              	.LFE115:
 176              		.cantunwind
 177              		.fnend
 179              		.section	.text._ZL14UART_SetConfigP18UART_HandleTypeDef,"ax",%progbits
 180              		.align	1
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu softvfp
 186              	_ZL14UART_SetConfigP18UART_HandleTypeDef:
 187              		.fnstart
 188              	.LFB118:
2377:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2378:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 46


2379:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2380:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2381:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2382:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
2383:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2384:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2385:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
2386:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
2387:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
2388:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
2389:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2390:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2391:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
2392:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
2393:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return HAL_OK;
2394:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
2395:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2396:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2397:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
2398:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2399:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2400:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval HAL status
2401:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2402:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2403:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
2404:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint16_t* tmp;
2405:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
2406:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2407:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX) 
2408:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2409:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
2410:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
2411:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
2412:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2413:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
2414:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
2415:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
2416:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
2417:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       else
2418:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
2419:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
2420:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
2421:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
2422:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
2423:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     else
2424:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
2425:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2426:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
2427:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
2428:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
2429:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       else
2430:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
2431:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
2432:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
2433:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
2434:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2435:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 47


2436:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
2437:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Disable the IRDA Data Register not empty Interrupt */
2438:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
2439:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2440:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
2441:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
2442:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2443:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
2444:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2445:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2446:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2447:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2448:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2449:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2450:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       return HAL_OK;
2451:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
2452:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_OK;
2453:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
2454:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   else
2455:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2456:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return HAL_BUSY;
2457:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
2458:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
2459:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2460:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
2461:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
2462:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2463:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2464:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   * @retval None
2465:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   */
2466:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
2467:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** {
 189              		.loc 1 2467 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              	.LVL11:
 194 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 195              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 196              	.LCFI0:
 197              		.cfi_def_cfa_offset 32
 198              		.cfi_offset 3, -32
 199              		.cfi_offset 4, -28
 200              		.cfi_offset 5, -24
 201              		.cfi_offset 6, -20
 202              		.cfi_offset 7, -16
 203              		.cfi_offset 8, -12
 204              		.cfi_offset 9, -8
 205              		.cfi_offset 14, -4
 206 0004 0546     		mov	r5, r0
 207              	.LVL12:
2468:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2469:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2470:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the parameters */
2471:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2472:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2473:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 48


2474:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2475:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2476:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR2 Configuration ------*/
2477:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according 
2478:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    * to huart->Init.StopBits value */
2479:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 208              		.loc 1 2479 0
 209 0006 0268     		ldr	r2, [r0]
 210 0008 1369     		ldr	r3, [r2, #16]
 211 000a 23F44053 		bic	r3, r3, #12288
 212 000e C168     		ldr	r1, [r0, #12]
 213 0010 0B43     		orrs	r3, r3, r1
 214 0012 1361     		str	r3, [r2, #16]
2480:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2481:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR1 Configuration ------*/
2482:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
2483:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
2484:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
2485:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
2486:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
2487:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2488:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
2489:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
2490:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, 
2491:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
2492:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****              tmpreg);
2493:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #else
2494:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 215              		.loc 1 2494 0
 216 0014 8368     		ldr	r3, [r0, #8]
 217 0016 0269     		ldr	r2, [r0, #16]
 218 0018 1343     		orrs	r3, r3, r2
 219 001a 4269     		ldr	r2, [r0, #20]
 220 001c 1343     		orrs	r3, r3, r2
 221              	.LVL13:
2495:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, 
 222              		.loc 1 2495 0
 223 001e 0168     		ldr	r1, [r0]
 224 0020 CA68     		ldr	r2, [r1, #12]
 225 0022 22F4B052 		bic	r2, r2, #5632
 226 0026 22F00C02 		bic	r2, r2, #12
 227 002a 1343     		orrs	r3, r3, r2
 228              	.LVL14:
 229 002c CB60     		str	r3, [r1, #12]
 230              	.LVL15:
2496:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE), 
2497:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****              tmpreg);
2498:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
2499:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2500:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR3 Configuration ------*/
2501:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
2502:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 231              		.loc 1 2502 0
 232 002e 0268     		ldr	r2, [r0]
 233 0030 5369     		ldr	r3, [r2, #20]
 234 0032 23F44073 		bic	r3, r3, #768
 235 0036 8169     		ldr	r1, [r0, #24]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 49


 236 0038 0B43     		orrs	r3, r3, r1
 237 003a 5361     		str	r3, [r2, #20]
2503:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
2504:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
2505:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the Over Sampling */
2506:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
2507:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2508:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2509:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->Instance == USART1)
2510:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
2511:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2512:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
2513:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     else
2514:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
2515:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
2516:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
2517:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
2518:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   else
2519:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2520:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2521:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     if(huart->Instance == USART1)
2522:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
2523:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2524:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
2525:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     else
2526:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
2527:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
2528:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
2529:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
2530:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #else
2531:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration ---------------------*/
2532:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if(huart->Instance == USART1)
 238              		.loc 1 2532 0
 239 003c 0268     		ldr	r2, [r0]
 240 003e 594B     		ldr	r3, .L16
 241 0040 9A42     		cmp	r2, r3
 242 0042 57D0     		beq	.L15
2533:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2534:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2535:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
2536:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   else
2537:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
2538:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 243              		.loc 1 2538 0
 244 0044 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 245              	.LVL16:
 246 0048 00EB8000 		add	r0, r0, r0, lsl #2
 247 004c 00EB8000 		add	r0, r0, r0, lsl #2
 248 0050 6C68     		ldr	r4, [r5, #4]
 249 0052 A400     		lsls	r4, r4, #2
 250 0054 B0FBF4F4 		udiv	r4, r0, r4
 251 0058 534F     		ldr	r7, .L16+4
 252 005a A7FB0434 		umull	r3, r4, r7, r4
 253 005e 6409     		lsrs	r4, r4, #5
 254 0060 2601     		lsls	r6, r4, #4
 255 0062 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 256              	.LVL17:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 50


 257 0066 00EB8000 		add	r0, r0, r0, lsl #2
 258 006a 00EB8000 		add	r0, r0, r0, lsl #2
 259 006e 6C68     		ldr	r4, [r5, #4]
 260 0070 A400     		lsls	r4, r4, #2
 261 0072 B0FBF4F9 		udiv	r9, r0, r4
 262 0076 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 263              	.LVL18:
 264 007a 00EB8000 		add	r0, r0, r0, lsl #2
 265 007e 00EB8000 		add	r0, r0, r0, lsl #2
 266 0082 6C68     		ldr	r4, [r5, #4]
 267 0084 A400     		lsls	r4, r4, #2
 268 0086 B0FBF4F4 		udiv	r4, r0, r4
 269 008a A7FB0434 		umull	r3, r4, r7, r4
 270 008e 6409     		lsrs	r4, r4, #5
 271 0090 4FF06408 		mov	r8, #100
 272 0094 08FB1494 		mls	r4, r8, r4, r9
 273 0098 2401     		lsls	r4, r4, #4
 274 009a 3234     		adds	r4, r4, #50
 275 009c A7FB0434 		umull	r3, r4, r7, r4
 276 00a0 6409     		lsrs	r4, r4, #5
 277 00a2 04F0F004 		and	r4, r4, #240
 278 00a6 3444     		add	r4, r4, r6
 279 00a8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 280              	.LVL19:
 281 00ac 00EB8000 		add	r0, r0, r0, lsl #2
 282 00b0 00EB8000 		add	r0, r0, r0, lsl #2
 283 00b4 6E68     		ldr	r6, [r5, #4]
 284 00b6 B600     		lsls	r6, r6, #2
 285 00b8 B0FBF6F6 		udiv	r6, r0, r6
 286 00bc FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 287              	.LVL20:
 288 00c0 00EB8000 		add	r0, r0, r0, lsl #2
 289 00c4 00EB8000 		add	r0, r0, r0, lsl #2
 290 00c8 6B68     		ldr	r3, [r5, #4]
 291 00ca 9B00     		lsls	r3, r3, #2
 292 00cc B0FBF3F0 		udiv	r0, r0, r3
 293 00d0 A7FB0030 		umull	r3, r0, r7, r0
 294 00d4 4009     		lsrs	r0, r0, #5
 295 00d6 08FB1068 		mls	r8, r8, r0, r6
 296 00da 4FEA0818 		lsl	r8, r8, #4
 297 00de 08F13208 		add	r8, r8, #50
 298 00e2 A7FB0837 		umull	r3, r7, r7, r8
 299 00e6 C7F34317 		ubfx	r7, r7, #5, #4
 300 00ea 2B68     		ldr	r3, [r5]
 301 00ec 2744     		add	r7, r7, r4
 302 00ee 9F60     		str	r7, [r3, #8]
 303              	.L11:
2539:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
2540:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
2541:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 304              		.loc 1 2541 0
 305 00f0 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 306              	.LVL21:
 307              	.L15:
2534:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 308              		.loc 1 2534 0
 309 00f4 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 51


 310              	.LVL22:
 311 00f8 00EB8000 		add	r0, r0, r0, lsl #2
 312 00fc 00EB8000 		add	r0, r0, r0, lsl #2
 313 0100 6C68     		ldr	r4, [r5, #4]
 314 0102 A400     		lsls	r4, r4, #2
 315 0104 B0FBF4F4 		udiv	r4, r0, r4
 316 0108 274F     		ldr	r7, .L16+4
 317 010a A7FB0434 		umull	r3, r4, r7, r4
 318 010e 6409     		lsrs	r4, r4, #5
 319 0110 2601     		lsls	r6, r4, #4
 320 0112 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 321              	.LVL23:
 322 0116 00EB8000 		add	r0, r0, r0, lsl #2
 323 011a 00EB8000 		add	r0, r0, r0, lsl #2
 324 011e 6C68     		ldr	r4, [r5, #4]
 325 0120 A400     		lsls	r4, r4, #2
 326 0122 B0FBF4F9 		udiv	r9, r0, r4
 327 0126 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 328              	.LVL24:
 329 012a 00EB8000 		add	r0, r0, r0, lsl #2
 330 012e 00EB8000 		add	r0, r0, r0, lsl #2
 331 0132 6C68     		ldr	r4, [r5, #4]
 332 0134 A400     		lsls	r4, r4, #2
 333 0136 B0FBF4F4 		udiv	r4, r0, r4
 334 013a A7FB0434 		umull	r3, r4, r7, r4
 335 013e 6409     		lsrs	r4, r4, #5
 336 0140 4FF06408 		mov	r8, #100
 337 0144 08FB1494 		mls	r4, r8, r4, r9
 338 0148 2401     		lsls	r4, r4, #4
 339 014a 3234     		adds	r4, r4, #50
 340 014c A7FB0434 		umull	r3, r4, r7, r4
 341 0150 6409     		lsrs	r4, r4, #5
 342 0152 04F0F004 		and	r4, r4, #240
 343 0156 3444     		add	r4, r4, r6
 344 0158 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 345              	.LVL25:
 346 015c 00EB8000 		add	r0, r0, r0, lsl #2
 347 0160 00EB8000 		add	r0, r0, r0, lsl #2
 348 0164 6E68     		ldr	r6, [r5, #4]
 349 0166 B600     		lsls	r6, r6, #2
 350 0168 B0FBF6F6 		udiv	r6, r0, r6
 351 016c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 352              	.LVL26:
 353 0170 00EB8000 		add	r0, r0, r0, lsl #2
 354 0174 00EB8000 		add	r0, r0, r0, lsl #2
 355 0178 6B68     		ldr	r3, [r5, #4]
 356 017a 9B00     		lsls	r3, r3, #2
 357 017c B0FBF3F0 		udiv	r0, r0, r3
 358 0180 A7FB0030 		umull	r3, r0, r7, r0
 359 0184 4009     		lsrs	r0, r0, #5
 360 0186 08FB1068 		mls	r8, r8, r0, r6
 361 018a 4FEA0818 		lsl	r8, r8, #4
 362 018e 08F13208 		add	r8, r8, #50
 363 0192 A7FB0837 		umull	r3, r7, r7, r8
 364 0196 C7F34317 		ubfx	r7, r7, #5, #4
 365 019a 2B68     		ldr	r3, [r5]
 366 019c 2744     		add	r7, r7, r4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 52


 367 019e 9F60     		str	r7, [r3, #8]
 368 01a0 A6E7     		b	.L11
 369              	.L17:
 370 01a2 00BF     		.align	2
 371              	.L16:
 372 01a4 00380140 		.word	1073821696
 373 01a8 1F85EB51 		.word	1374389535
 374              		.cfi_endproc
 375              	.LFE118:
 376              		.fnend
 378              		.section	.text._ZL27UART_WaitOnFlagUntilTimeoutP18UART_HandleTypeDefm10FlagStatusmm,"ax",%progbits
 379              		.align	1
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu softvfp
 385              	_ZL27UART_WaitOnFlagUntilTimeoutP18UART_HandleTypeDefm10FlagStatusmm:
 386              		.fnstart
 387              	.LFB107:
2142:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Wait until flag is set */
 388              		.loc 1 2142 0
 389              		.cfi_startproc
 390              		@ args = 4, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              	.LVL27:
 393 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 394              		.save {r4, r5, r6, r7, r8, lr}
 395              	.LCFI1:
 396              		.cfi_def_cfa_offset 24
 397              		.cfi_offset 4, -24
 398              		.cfi_offset 5, -20
 399              		.cfi_offset 6, -16
 400              		.cfi_offset 7, -12
 401              		.cfi_offset 8, -8
 402              		.cfi_offset 14, -4
 403 0004 0546     		mov	r5, r0
 404 0006 0F46     		mov	r7, r1
 405 0008 1646     		mov	r6, r2
 406 000a 9846     		mov	r8, r3
 407 000c 069C     		ldr	r4, [sp, #24]
 408 000e 05E0     		b	.L21
 409              	.LVL28:
 410              	.L28:
2144:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 411              		.loc 1 2144 0
 412 0010 0123     		movs	r3, #1
 413              	.L19:
2144:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 414              		.loc 1 2144 0 is_stmt 0 discriminator 4
 415 0012 9E42     		cmp	r6, r3
 416 0014 24D1     		bne	.L25
2147:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 417              		.loc 1 2147 0 is_stmt 1
 418 0016 B4F1FF3F 		cmp	r4, #-1
 419 001a 06D1     		bne	.L27
 420              	.L21:
2144:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 53


 421              		.loc 1 2144 0
 422 001c 2B68     		ldr	r3, [r5]
 423 001e 1B68     		ldr	r3, [r3]
 424 0020 37EA0303 		bics	r3, r7, r3
 425 0024 F4D0     		beq	.L28
 426 0026 0023     		movs	r3, #0
 427 0028 F3E7     		b	.L19
 428              	.L27:
2149:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 429              		.loc 1 2149 0
 430 002a 2CB1     		cbz	r4, .L22
2149:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 431              		.loc 1 2149 0 is_stmt 0 discriminator 2
 432 002c FFF7FEFF 		bl	HAL_GetTick
 433              	.LVL29:
 434 0030 A0EB0800 		sub	r0, r0, r8
 435 0034 A042     		cmp	r0, r4
 436 0036 F1D9     		bls	.L21
 437              	.L22:
2152:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 438              		.loc 1 2152 0 is_stmt 1 discriminator 3
 439 0038 2A68     		ldr	r2, [r5]
 440 003a D368     		ldr	r3, [r2, #12]
 441 003c 23F4D073 		bic	r3, r3, #416
 442 0040 D360     		str	r3, [r2, #12]
2153:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         
 443              		.loc 1 2153 0 discriminator 3
 444 0042 2A68     		ldr	r2, [r5]
 445 0044 5369     		ldr	r3, [r2, #20]
 446 0046 23F00103 		bic	r3, r3, #1
 447 004a 5361     		str	r3, [r2, #20]
2155:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 448              		.loc 1 2155 0 discriminator 3
 449 004c 2023     		movs	r3, #32
 450 004e 85F83930 		strb	r3, [r5, #57]
2156:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         
 451              		.loc 1 2156 0 discriminator 3
 452 0052 85F83A30 		strb	r3, [r5, #58]
2159:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         
 453              		.loc 1 2159 0 discriminator 3
 454 0056 0023     		movs	r3, #0
 455 0058 85F83830 		strb	r3, [r5, #56]
2161:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 456              		.loc 1 2161 0 discriminator 3
 457 005c 0320     		movs	r0, #3
 458 005e 00E0     		b	.L20
 459              	.L25:
2166:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 460              		.loc 1 2166 0
 461 0060 0020     		movs	r0, #0
 462              	.L20:
2167:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 463              		.loc 1 2167 0
 464 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 465              		.cfi_endproc
 466              	.LFE107:
 467              		.fnend
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 54


 469              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 470              		.align	1
 471              		.weak	HAL_UART_MspInit
 472              		.syntax unified
 473              		.thumb
 474              		.thumb_func
 475              		.fpu softvfp
 477              	HAL_UART_MspInit:
 478              		.fnstart
 479              	.LFB69:
 550:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 480              		.loc 1 550 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 485              	.LVL30:
 556:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 486              		.loc 1 556 0
 487 0000 7047     		bx	lr
 488              		.cfi_endproc
 489              	.LFE69:
 490              		.cantunwind
 491              		.fnend
 493              		.section	.text.HAL_UART_Init,"ax",%progbits
 494              		.align	1
 495              		.global	HAL_UART_Init
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu softvfp
 501              	HAL_UART_Init:
 502              		.fnstart
 503              	.LFB64:
 260:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 504              		.loc 1 260 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              	.LVL31:
 262:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 509              		.loc 1 262 0
 510 0000 58B3     		cbz	r0, .L33
 260:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 511              		.loc 1 260 0
 512 0002 10B5     		push	{r4, lr}
 513              		.save {r4, lr}
 514              	.LCFI2:
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 4, -8
 517              		.cfi_offset 14, -4
 518 0004 0446     		mov	r4, r0
 283:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {  
 519              		.loc 1 283 0
 520 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 521 000a 0BB3     		cbz	r3, .L38
 522              	.LVL32:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 55


 523              	.L32:
 292:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 524              		.loc 1 292 0
 525 000c 2423     		movs	r3, #36
 526 000e 84F83930 		strb	r3, [r4, #57]
 295:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 527              		.loc 1 295 0
 528 0012 2268     		ldr	r2, [r4]
 529 0014 D368     		ldr	r3, [r2, #12]
 530 0016 23F40053 		bic	r3, r3, #8192
 531 001a D360     		str	r3, [r2, #12]
 298:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 532              		.loc 1 298 0
 533 001c 2046     		mov	r0, r4
 534 001e FFF7FEFF 		bl	_ZL14UART_SetConfigP18UART_HandleTypeDef
 535              	.LVL33:
 303:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 536              		.loc 1 303 0
 537 0022 2268     		ldr	r2, [r4]
 538 0024 1369     		ldr	r3, [r2, #16]
 539 0026 23F49043 		bic	r3, r3, #18432
 540 002a 1361     		str	r3, [r2, #16]
 304:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 541              		.loc 1 304 0
 542 002c 2268     		ldr	r2, [r4]
 543 002e 5369     		ldr	r3, [r2, #20]
 544 0030 23F02A03 		bic	r3, r3, #42
 545 0034 5361     		str	r3, [r2, #20]
 307:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 546              		.loc 1 307 0
 547 0036 2268     		ldr	r2, [r4]
 548 0038 D368     		ldr	r3, [r2, #12]
 549 003a 43F40053 		orr	r3, r3, #8192
 550 003e D360     		str	r3, [r2, #12]
 310:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 551              		.loc 1 310 0
 552 0040 0020     		movs	r0, #0
 553 0042 E063     		str	r0, [r4, #60]
 311:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 554              		.loc 1 311 0
 555 0044 2023     		movs	r3, #32
 556 0046 84F83930 		strb	r3, [r4, #57]
 312:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 557              		.loc 1 312 0
 558 004a 84F83A30 		strb	r3, [r4, #58]
 315:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 559              		.loc 1 315 0
 560 004e 10BD     		pop	{r4, pc}
 561              	.LVL34:
 562              	.L38:
 286:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 563              		.loc 1 286 0
 564 0050 80F83830 		strb	r3, [r0, #56]
 289:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 565              		.loc 1 289 0
 566 0054 FFF7FEFF 		bl	HAL_UART_MspInit
 567              	.LVL35:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 56


 568 0058 D8E7     		b	.L32
 569              	.LVL36:
 570              	.L33:
 571              	.LCFI3:
 572              		.cfi_def_cfa_offset 0
 573              		.cfi_restore 4
 574              		.cfi_restore 14
 264:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 575              		.loc 1 264 0
 576 005a 0120     		movs	r0, #1
 577              	.LVL37:
 315:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 578              		.loc 1 315 0
 579 005c 7047     		bx	lr
 580              		.cfi_endproc
 581              	.LFE64:
 582              		.fnend
 584              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 585              		.align	1
 586              		.global	HAL_HalfDuplex_Init
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu softvfp
 592              	HAL_HalfDuplex_Init:
 593              		.fnstart
 594              	.LFB65:
 325:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 595              		.loc 1 325 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              	.LVL38:
 327:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 600              		.loc 1 327 0
 601 0000 0028     		cmp	r0, #0
 602 0002 30D0     		beq	.L42
 325:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 603              		.loc 1 325 0
 604 0004 10B5     		push	{r4, lr}
 605              		.save {r4, lr}
 606              	.LCFI4:
 607              		.cfi_def_cfa_offset 8
 608              		.cfi_offset 4, -8
 609              		.cfi_offset 14, -4
 610 0006 0446     		mov	r4, r0
 338:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 611              		.loc 1 338 0
 612 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 613 000c 33B3     		cbz	r3, .L47
 614              	.LVL39:
 615              	.L41:
 346:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 616              		.loc 1 346 0
 617 000e 2423     		movs	r3, #36
 618 0010 84F83930 		strb	r3, [r4, #57]
 349:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 57


 619              		.loc 1 349 0
 620 0014 2268     		ldr	r2, [r4]
 621 0016 D368     		ldr	r3, [r2, #12]
 622 0018 23F40053 		bic	r3, r3, #8192
 623 001c D360     		str	r3, [r2, #12]
 352:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 624              		.loc 1 352 0
 625 001e 2046     		mov	r0, r4
 626 0020 FFF7FEFF 		bl	_ZL14UART_SetConfigP18UART_HandleTypeDef
 627              	.LVL40:
 357:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 628              		.loc 1 357 0
 629 0024 2268     		ldr	r2, [r4]
 630 0026 1369     		ldr	r3, [r2, #16]
 631 0028 23F49043 		bic	r3, r3, #18432
 632 002c 1361     		str	r3, [r2, #16]
 358:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 633              		.loc 1 358 0
 634 002e 2268     		ldr	r2, [r4]
 635 0030 5369     		ldr	r3, [r2, #20]
 636 0032 23F02203 		bic	r3, r3, #34
 637 0036 5361     		str	r3, [r2, #20]
 361:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****  
 638              		.loc 1 361 0
 639 0038 2268     		ldr	r2, [r4]
 640 003a 5369     		ldr	r3, [r2, #20]
 641 003c 43F00803 		orr	r3, r3, #8
 642 0040 5361     		str	r3, [r2, #20]
 364:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 643              		.loc 1 364 0
 644 0042 2268     		ldr	r2, [r4]
 645 0044 D368     		ldr	r3, [r2, #12]
 646 0046 43F40053 		orr	r3, r3, #8192
 647 004a D360     		str	r3, [r2, #12]
 367:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 648              		.loc 1 367 0
 649 004c 0020     		movs	r0, #0
 650 004e E063     		str	r0, [r4, #60]
 368:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 651              		.loc 1 368 0
 652 0050 2023     		movs	r3, #32
 653 0052 84F83930 		strb	r3, [r4, #57]
 369:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 654              		.loc 1 369 0
 655 0056 84F83A30 		strb	r3, [r4, #58]
 372:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 656              		.loc 1 372 0
 657 005a 10BD     		pop	{r4, pc}
 658              	.LVL41:
 659              	.L47:
 341:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 660              		.loc 1 341 0
 661 005c 80F83830 		strb	r3, [r0, #56]
 343:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 662              		.loc 1 343 0
 663 0060 FFF7FEFF 		bl	HAL_UART_MspInit
 664              	.LVL42:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 58


 665 0064 D3E7     		b	.L41
 666              	.LVL43:
 667              	.L42:
 668              	.LCFI5:
 669              		.cfi_def_cfa_offset 0
 670              		.cfi_restore 4
 671              		.cfi_restore 14
 329:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 672              		.loc 1 329 0
 673 0066 0120     		movs	r0, #1
 674              	.LVL44:
 372:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 675              		.loc 1 372 0
 676 0068 7047     		bx	lr
 677              		.cfi_endproc
 678              	.LFE65:
 679              		.fnend
 681              		.section	.text.HAL_LIN_Init,"ax",%progbits
 682              		.align	1
 683              		.global	HAL_LIN_Init
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 687              		.fpu softvfp
 689              	HAL_LIN_Init:
 690              		.fnstart
 691              	.LFB66:
 386:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 692              		.loc 1 386 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 0
 695              		@ frame_needed = 0, uses_anonymous_args = 0
 696              	.LVL45:
 388:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 697              		.loc 1 388 0
 698 0000 0028     		cmp	r0, #0
 699 0002 37D0     		beq	.L51
 386:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 700              		.loc 1 386 0
 701 0004 38B5     		push	{r3, r4, r5, lr}
 702              		.save {r3, r4, r5, lr}
 703              	.LCFI6:
 704              		.cfi_def_cfa_offset 16
 705              		.cfi_offset 3, -16
 706              		.cfi_offset 4, -12
 707              		.cfi_offset 5, -8
 708              		.cfi_offset 14, -4
 709 0006 0446     		mov	r4, r0
 710 0008 0D46     		mov	r5, r1
 402:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 711              		.loc 1 402 0
 712 000a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 713 000e 63B3     		cbz	r3, .L56
 714              	.LVL46:
 715              	.L50:
 410:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 716              		.loc 1 410 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 59


 717 0010 2423     		movs	r3, #36
 718 0012 84F83930 		strb	r3, [r4, #57]
 413:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 719              		.loc 1 413 0
 720 0016 2268     		ldr	r2, [r4]
 721 0018 D368     		ldr	r3, [r2, #12]
 722 001a 23F40053 		bic	r3, r3, #8192
 723 001e D360     		str	r3, [r2, #12]
 416:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 724              		.loc 1 416 0
 725 0020 2046     		mov	r0, r4
 726 0022 FFF7FEFF 		bl	_ZL14UART_SetConfigP18UART_HandleTypeDef
 727              	.LVL47:
 421:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 728              		.loc 1 421 0
 729 0026 2268     		ldr	r2, [r4]
 730 0028 1369     		ldr	r3, [r2, #16]
 731 002a 23F40063 		bic	r3, r3, #2048
 732 002e 1361     		str	r3, [r2, #16]
 422:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 733              		.loc 1 422 0
 734 0030 2268     		ldr	r2, [r4]
 735 0032 5369     		ldr	r3, [r2, #20]
 736 0034 23F02A03 		bic	r3, r3, #42
 737 0038 5361     		str	r3, [r2, #20]
 425:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 738              		.loc 1 425 0
 739 003a 2268     		ldr	r2, [r4]
 740 003c 1369     		ldr	r3, [r2, #16]
 741 003e 43F48043 		orr	r3, r3, #16384
 742 0042 1361     		str	r3, [r2, #16]
 428:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 743              		.loc 1 428 0
 744 0044 2268     		ldr	r2, [r4]
 745 0046 1369     		ldr	r3, [r2, #16]
 746 0048 23F02003 		bic	r3, r3, #32
 747 004c 2B43     		orrs	r3, r3, r5
 748 004e 1361     		str	r3, [r2, #16]
 431:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 749              		.loc 1 431 0
 750 0050 2268     		ldr	r2, [r4]
 751 0052 D368     		ldr	r3, [r2, #12]
 752 0054 43F40053 		orr	r3, r3, #8192
 753 0058 D360     		str	r3, [r2, #12]
 434:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 754              		.loc 1 434 0
 755 005a 0020     		movs	r0, #0
 756 005c E063     		str	r0, [r4, #60]
 435:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 757              		.loc 1 435 0
 758 005e 2023     		movs	r3, #32
 759 0060 84F83930 		strb	r3, [r4, #57]
 436:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 760              		.loc 1 436 0
 761 0064 84F83A30 		strb	r3, [r4, #58]
 439:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 762              		.loc 1 439 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 60


 763 0068 38BD     		pop	{r3, r4, r5, pc}
 764              	.LVL48:
 765              	.L56:
 405:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 766              		.loc 1 405 0
 767 006a 80F83830 		strb	r3, [r0, #56]
 407:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 768              		.loc 1 407 0
 769 006e FFF7FEFF 		bl	HAL_UART_MspInit
 770              	.LVL49:
 771 0072 CDE7     		b	.L50
 772              	.LVL50:
 773              	.L51:
 774              	.LCFI7:
 775              		.cfi_def_cfa_offset 0
 776              		.cfi_restore 3
 777              		.cfi_restore 4
 778              		.cfi_restore 5
 779              		.cfi_restore 14
 390:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 780              		.loc 1 390 0
 781 0074 0120     		movs	r0, #1
 782              	.LVL51:
 439:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 783              		.loc 1 439 0
 784 0076 7047     		bx	lr
 785              		.cfi_endproc
 786              	.LFE66:
 787              		.fnend
 789              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 790              		.align	1
 791              		.global	HAL_MultiProcessor_Init
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 795              		.fpu softvfp
 797              	HAL_MultiProcessor_Init:
 798              		.fnstart
 799              	.LFB67:
 454:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 800              		.loc 1 454 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              	.LVL52:
 456:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 805              		.loc 1 456 0
 806 0000 0028     		cmp	r0, #0
 807 0002 3AD0     		beq	.L60
 454:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 808              		.loc 1 454 0
 809 0004 70B5     		push	{r4, r5, r6, lr}
 810              		.save {r4, r5, r6, lr}
 811              	.LCFI8:
 812              		.cfi_def_cfa_offset 16
 813              		.cfi_offset 4, -16
 814              		.cfi_offset 5, -12
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 61


 815              		.cfi_offset 6, -8
 816              		.cfi_offset 14, -4
 817 0006 0446     		mov	r4, r0
 818 0008 1646     		mov	r6, r2
 819 000a 0D46     		mov	r5, r1
 472:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 820              		.loc 1 472 0
 821 000c 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 822 0010 002B     		cmp	r3, #0
 823 0012 2DD0     		beq	.L65
 824              	.LVL53:
 825              	.L59:
 480:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 826              		.loc 1 480 0
 827 0014 2423     		movs	r3, #36
 828 0016 84F83930 		strb	r3, [r4, #57]
 483:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 829              		.loc 1 483 0
 830 001a 2268     		ldr	r2, [r4]
 831 001c D368     		ldr	r3, [r2, #12]
 832 001e 23F40053 		bic	r3, r3, #8192
 833 0022 D360     		str	r3, [r2, #12]
 486:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 834              		.loc 1 486 0
 835 0024 2046     		mov	r0, r4
 836 0026 FFF7FEFF 		bl	_ZL14UART_SetConfigP18UART_HandleTypeDef
 837              	.LVL54:
 491:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 838              		.loc 1 491 0
 839 002a 2268     		ldr	r2, [r4]
 840 002c 1369     		ldr	r3, [r2, #16]
 841 002e 23F49043 		bic	r3, r3, #18432
 842 0032 1361     		str	r3, [r2, #16]
 492:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 843              		.loc 1 492 0
 844 0034 2268     		ldr	r2, [r4]
 845 0036 5369     		ldr	r3, [r2, #20]
 846 0038 23F02A03 		bic	r3, r3, #42
 847 003c 5361     		str	r3, [r2, #20]
 495:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 848              		.loc 1 495 0
 849 003e 2368     		ldr	r3, [r4]
 850 0040 1969     		ldr	r1, [r3, #16]
 851 0042 21F00F01 		bic	r1, r1, #15
 852 0046 0D43     		orrs	r5, r5, r1
 853 0048 1D61     		str	r5, [r3, #16]
 498:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 854              		.loc 1 498 0
 855 004a 2168     		ldr	r1, [r4]
 856 004c CB68     		ldr	r3, [r1, #12]
 857 004e 23F40063 		bic	r3, r3, #2048
 858 0052 3343     		orrs	r3, r3, r6
 859 0054 CB60     		str	r3, [r1, #12]
 501:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 860              		.loc 1 501 0
 861 0056 2268     		ldr	r2, [r4]
 862 0058 D368     		ldr	r3, [r2, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 62


 863 005a 43F40053 		orr	r3, r3, #8192
 864 005e D360     		str	r3, [r2, #12]
 504:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 865              		.loc 1 504 0
 866 0060 0020     		movs	r0, #0
 867 0062 E063     		str	r0, [r4, #60]
 505:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 868              		.loc 1 505 0
 869 0064 2023     		movs	r3, #32
 870 0066 84F83930 		strb	r3, [r4, #57]
 506:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 871              		.loc 1 506 0
 872 006a 84F83A30 		strb	r3, [r4, #58]
 509:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 873              		.loc 1 509 0
 874 006e 70BD     		pop	{r4, r5, r6, pc}
 875              	.LVL55:
 876              	.L65:
 475:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 877              		.loc 1 475 0
 878 0070 80F83830 		strb	r3, [r0, #56]
 477:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 879              		.loc 1 477 0
 880 0074 FFF7FEFF 		bl	HAL_UART_MspInit
 881              	.LVL56:
 882 0078 CCE7     		b	.L59
 883              	.LVL57:
 884              	.L60:
 885              	.LCFI9:
 886              		.cfi_def_cfa_offset 0
 887              		.cfi_restore 4
 888              		.cfi_restore 5
 889              		.cfi_restore 6
 890              		.cfi_restore 14
 458:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 891              		.loc 1 458 0
 892 007a 0120     		movs	r0, #1
 893              	.LVL58:
 509:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 894              		.loc 1 509 0
 895 007c 7047     		bx	lr
 896              		.cfi_endproc
 897              	.LFE67:
 898              		.fnend
 900              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 901              		.align	1
 902              		.weak	HAL_UART_MspDeInit
 903              		.syntax unified
 904              		.thumb
 905              		.thumb_func
 906              		.fpu softvfp
 908              	HAL_UART_MspDeInit:
 909              		.fnstart
 910              	.LFB70:
 565:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 911              		.loc 1 565 0
 912              		.cfi_startproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 63


 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915              		@ link register save eliminated.
 916              	.LVL59:
 571:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 917              		.loc 1 571 0
 918 0000 7047     		bx	lr
 919              		.cfi_endproc
 920              	.LFE70:
 921              		.cantunwind
 922              		.fnend
 924              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 925              		.align	1
 926              		.global	HAL_UART_DeInit
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu softvfp
 932              	HAL_UART_DeInit:
 933              		.fnstart
 934              	.LFB68:
 518:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 935              		.loc 1 518 0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 939              	.LVL60:
 520:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 940              		.loc 1 520 0
 941 0000 78B1     		cbz	r0, .L69
 518:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 942              		.loc 1 518 0
 943 0002 10B5     		push	{r4, lr}
 944              		.save {r4, lr}
 945              	.LCFI10:
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 4, -8
 948              		.cfi_offset 14, -4
 949 0004 0446     		mov	r4, r0
 528:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 950              		.loc 1 528 0
 951 0006 2423     		movs	r3, #36
 952 0008 80F83930 		strb	r3, [r0, #57]
 531:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 953              		.loc 1 531 0
 954 000c FFF7FEFF 		bl	HAL_UART_MspDeInit
 955              	.LVL61:
 533:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 956              		.loc 1 533 0
 957 0010 0020     		movs	r0, #0
 958 0012 E063     		str	r0, [r4, #60]
 534:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 959              		.loc 1 534 0
 960 0014 84F83900 		strb	r0, [r4, #57]
 535:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 961              		.loc 1 535 0
 962 0018 84F83A00 		strb	r0, [r4, #58]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 64


 538:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 963              		.loc 1 538 0
 964 001c 84F83800 		strb	r0, [r4, #56]
 541:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 965              		.loc 1 541 0
 966 0020 10BD     		pop	{r4, pc}
 967              	.LVL62:
 968              	.L69:
 969              	.LCFI11:
 970              		.cfi_def_cfa_offset 0
 971              		.cfi_restore 4
 972              		.cfi_restore 14
 522:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 973              		.loc 1 522 0
 974 0022 0120     		movs	r0, #1
 975              	.LVL63:
 541:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 976              		.loc 1 541 0
 977 0024 7047     		bx	lr
 978              		.cfi_endproc
 979              	.LFE68:
 980              		.fnend
 982              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 983              		.align	1
 984              		.global	HAL_UART_Transmit
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 988              		.fpu softvfp
 990              	HAL_UART_Transmit:
 991              		.fnstart
 992              	.LFB71:
 644:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 993              		.loc 1 644 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997              	.LVL64:
 998 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 999              		.save {r4, r5, r6, r7, r8, lr}
 1000              	.LCFI12:
 1001              		.cfi_def_cfa_offset 24
 1002              		.cfi_offset 4, -24
 1003              		.cfi_offset 5, -20
 1004              		.cfi_offset 6, -16
 1005              		.cfi_offset 7, -12
 1006              		.cfi_offset 8, -8
 1007              		.cfi_offset 14, -4
 1008              		.pad #8
 1009 0004 82B0     		sub	sp, sp, #8
 1010              	.LCFI13:
 1011              		.cfi_def_cfa_offset 32
 1012 0006 1E46     		mov	r6, r3
 1013              	.LVL65:
 649:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 1014              		.loc 1 649 0
 1015 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 65


 1016              	.LVL66:
 1017 000c DBB2     		uxtb	r3, r3
 1018 000e 202B     		cmp	r3, #32
 1019 0010 53D1     		bne	.L81
 1020 0012 0446     		mov	r4, r0
 1021 0014 0D46     		mov	r5, r1
 1022 0016 9046     		mov	r8, r2
 651:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 1023              		.loc 1 651 0
 1024 0018 0029     		cmp	r1, #0
 1025 001a 52D0     		beq	.L82
 651:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 1026              		.loc 1 651 0 is_stmt 0 discriminator 1
 1027 001c 002A     		cmp	r2, #0
 1028 001e 52D0     		beq	.L83
 657:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1029              		.loc 1 657 0 is_stmt 1
 1030 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1031 0024 012B     		cmp	r3, #1
 1032 0026 50D0     		beq	.L84
 657:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1033              		.loc 1 657 0 is_stmt 0 discriminator 2
 1034 0028 0123     		movs	r3, #1
 1035 002a 80F83830 		strb	r3, [r0, #56]
 659:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1036              		.loc 1 659 0 is_stmt 1 discriminator 2
 1037 002e 0023     		movs	r3, #0
 1038 0030 C363     		str	r3, [r0, #60]
 660:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1039              		.loc 1 660 0 discriminator 2
 1040 0032 2123     		movs	r3, #33
 1041 0034 80F83930 		strb	r3, [r0, #57]
 663:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1042              		.loc 1 663 0 discriminator 2
 1043 0038 FFF7FEFF 		bl	HAL_GetTick
 1044              	.LVL67:
 1045 003c 0746     		mov	r7, r0
 1046              	.LVL68:
 665:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1047              		.loc 1 665 0 discriminator 2
 1048 003e A4F82480 		strh	r8, [r4, #36]	@ movhi
 666:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 1049              		.loc 1 666 0 discriminator 2
 1050 0042 A4F82680 		strh	r8, [r4, #38]	@ movhi
 1051 0046 10E0     		b	.L76
 1052              	.LVL69:
 1053              	.L89:
 672:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 1054              		.loc 1 672 0
 1055 0048 0096     		str	r6, [sp]
 1056 004a 3B46     		mov	r3, r7
 1057 004c 0022     		movs	r2, #0
 1058 004e 8021     		movs	r1, #128
 1059 0050 2046     		mov	r0, r4
 1060 0052 FFF7FEFF 		bl	_ZL27UART_WaitOnFlagUntilTimeoutP18UART_HandleTypeDefm10FlagStatusmm
 1061              	.LVL70:
 1062 0056 0028     		cmp	r0, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 66


 1063 0058 39D1     		bne	.L85
 1064              	.LVL71:
 677:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1065              		.loc 1 677 0
 1066 005a 2B88     		ldrh	r3, [r5]
 1067 005c 2268     		ldr	r2, [r4]
 1068 005e C3F30803 		ubfx	r3, r3, #0, #9
 1069 0062 5360     		str	r3, [r2, #4]
 678:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 1070              		.loc 1 678 0
 1071 0064 2369     		ldr	r3, [r4, #16]
 1072 0066 C3B9     		cbnz	r3, .L79
 680:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 1073              		.loc 1 680 0
 1074 0068 0235     		adds	r5, r5, #2
 1075              	.LVL72:
 1076              	.L76:
 667:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 1077              		.loc 1 667 0
 1078 006a E38C     		ldrh	r3, [r4, #38]
 1079 006c 9BB2     		uxth	r3, r3
 1080 006e B3B1     		cbz	r3, .L77
 669:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1081              		.loc 1 669 0
 1082 0070 E38C     		ldrh	r3, [r4, #38]
 1083 0072 013B     		subs	r3, r3, #1
 1084 0074 9BB2     		uxth	r3, r3
 1085 0076 E384     		strh	r3, [r4, #38]	@ movhi
 670:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 1086              		.loc 1 670 0
 1087 0078 A368     		ldr	r3, [r4, #8]
 1088 007a B3F5805F 		cmp	r3, #4096
 1089 007e E3D0     		beq	.L89
 689:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 1090              		.loc 1 689 0
 1091 0080 0096     		str	r6, [sp]
 1092 0082 3B46     		mov	r3, r7
 1093 0084 0022     		movs	r2, #0
 1094 0086 8021     		movs	r1, #128
 1095 0088 2046     		mov	r0, r4
 1096 008a FFF7FEFF 		bl	_ZL27UART_WaitOnFlagUntilTimeoutP18UART_HandleTypeDefm10FlagStatusmm
 1097              	.LVL73:
 1098 008e 00BB     		cbnz	r0, .L86
 1099              	.LVL74:
 693:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 1100              		.loc 1 693 0
 1101 0090 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1102 0092 2368     		ldr	r3, [r4]
 1103 0094 5A60     		str	r2, [r3, #4]
 1104 0096 0135     		adds	r5, r5, #1
 1105              	.LVL75:
 1106 0098 E7E7     		b	.L76
 1107              	.LVL76:
 1108              	.L79:
 684:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 1109              		.loc 1 684 0
 1110 009a 0135     		adds	r5, r5, #1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 67


 1111              	.LVL77:
 1112 009c E5E7     		b	.L76
 1113              	.LVL78:
 1114              	.L77:
 697:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 1115              		.loc 1 697 0
 1116 009e 0096     		str	r6, [sp]
 1117 00a0 3B46     		mov	r3, r7
 1118 00a2 0022     		movs	r2, #0
 1119 00a4 4021     		movs	r1, #64
 1120 00a6 2046     		mov	r0, r4
 1121 00a8 FFF7FEFF 		bl	_ZL27UART_WaitOnFlagUntilTimeoutP18UART_HandleTypeDefm10FlagStatusmm
 1122              	.LVL79:
 1123 00ac 98B9     		cbnz	r0, .L87
 703:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1124              		.loc 1 703 0
 1125 00ae 2023     		movs	r3, #32
 1126 00b0 84F83930 		strb	r3, [r4, #57]
 706:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1127              		.loc 1 706 0
 1128 00b4 84F83800 		strb	r0, [r4, #56]
 708:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 1129              		.loc 1 708 0
 1130 00b8 00E0     		b	.L75
 1131              	.LVL80:
 1132              	.L81:
 712:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 1133              		.loc 1 712 0
 1134 00ba 0220     		movs	r0, #2
 1135              	.LVL81:
 1136              	.L75:
 714:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1137              		.loc 1 714 0
 1138 00bc 02B0     		add	sp, sp, #8
 1139              	.LCFI14:
 1140              		.cfi_remember_state
 1141              		.cfi_def_cfa_offset 24
 1142              		@ sp needed
 1143 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1144              	.LVL82:
 1145              	.L82:
 1146              	.LCFI15:
 1147              		.cfi_restore_state
 653:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 1148              		.loc 1 653 0
 1149 00c2 0120     		movs	r0, #1
 1150              	.LVL83:
 1151 00c4 FAE7     		b	.L75
 1152              	.LVL84:
 1153              	.L83:
 1154 00c6 0120     		movs	r0, #1
 1155              	.LVL85:
 1156 00c8 F8E7     		b	.L75
 1157              	.LVL86:
 1158              	.L84:
 657:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1159              		.loc 1 657 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 68


 1160 00ca 0220     		movs	r0, #2
 1161              	.LVL87:
 1162 00cc F6E7     		b	.L75
 1163              	.LVL88:
 1164              	.L85:
 674:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 1165              		.loc 1 674 0
 1166 00ce 0320     		movs	r0, #3
 1167 00d0 F4E7     		b	.L75
 1168              	.L86:
 691:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 1169              		.loc 1 691 0
 1170 00d2 0320     		movs	r0, #3
 1171 00d4 F2E7     		b	.L75
 1172              	.L87:
 699:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 1173              		.loc 1 699 0
 1174 00d6 0320     		movs	r0, #3
 1175 00d8 F0E7     		b	.L75
 1176              		.cfi_endproc
 1177              	.LFE71:
 1178              		.fnend
 1180              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1181              		.align	1
 1182              		.global	HAL_UART_Receive
 1183              		.syntax unified
 1184              		.thumb
 1185              		.thumb_func
 1186              		.fpu softvfp
 1188              	HAL_UART_Receive:
 1189              		.fnstart
 1190              	.LFB72:
 726:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 1191              		.loc 1 726 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195              	.LVL89:
 1196 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1197              		.save {r4, r5, r6, r7, r8, lr}
 1198              	.LCFI16:
 1199              		.cfi_def_cfa_offset 24
 1200              		.cfi_offset 4, -24
 1201              		.cfi_offset 5, -20
 1202              		.cfi_offset 6, -16
 1203              		.cfi_offset 7, -12
 1204              		.cfi_offset 8, -8
 1205              		.cfi_offset 14, -4
 1206              		.pad #8
 1207 0004 82B0     		sub	sp, sp, #8
 1208              	.LCFI17:
 1209              		.cfi_def_cfa_offset 32
 1210 0006 1E46     		mov	r6, r3
 1211              	.LVL90:
 731:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 1212              		.loc 1 731 0
 1213 0008 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 69


 1214              	.LVL91:
 1215 000c DBB2     		uxtb	r3, r3
 1216 000e 202B     		cmp	r3, #32
 1217 0010 5AD1     		bne	.L98
 1218 0012 0446     		mov	r4, r0
 1219 0014 0D46     		mov	r5, r1
 1220 0016 9046     		mov	r8, r2
 733:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 1221              		.loc 1 733 0
 1222 0018 0029     		cmp	r1, #0
 1223 001a 59D0     		beq	.L99
 733:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 1224              		.loc 1 733 0 is_stmt 0 discriminator 1
 1225 001c 002A     		cmp	r2, #0
 1226 001e 59D0     		beq	.L100
 739:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     
 1227              		.loc 1 739 0 is_stmt 1
 1228 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1229 0024 012B     		cmp	r3, #1
 1230 0026 57D0     		beq	.L101
 739:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     
 1231              		.loc 1 739 0 is_stmt 0 discriminator 2
 1232 0028 0123     		movs	r3, #1
 1233 002a 80F83830 		strb	r3, [r0, #56]
 741:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1234              		.loc 1 741 0 is_stmt 1 discriminator 2
 1235 002e 0023     		movs	r3, #0
 1236 0030 C363     		str	r3, [r0, #60]
 742:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1237              		.loc 1 742 0 discriminator 2
 1238 0032 2223     		movs	r3, #34
 1239 0034 80F83A30 		strb	r3, [r0, #58]
 745:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1240              		.loc 1 745 0 discriminator 2
 1241 0038 FFF7FEFF 		bl	HAL_GetTick
 1242              	.LVL92:
 1243 003c 0746     		mov	r7, r0
 1244              	.LVL93:
 747:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1245              		.loc 1 747 0 discriminator 2
 1246 003e A4F82C80 		strh	r8, [r4, #44]	@ movhi
 748:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1247              		.loc 1 748 0 discriminator 2
 1248 0042 A4F82E80 		strh	r8, [r4, #46]	@ movhi
 1249 0046 1DE0     		b	.L92
 1250              	.LVL94:
 1251              	.L105:
 756:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 1252              		.loc 1 756 0
 1253 0048 0096     		str	r6, [sp]
 1254 004a 3B46     		mov	r3, r7
 1255 004c 0022     		movs	r2, #0
 1256 004e 2021     		movs	r1, #32
 1257 0050 2046     		mov	r0, r4
 1258 0052 FFF7FEFF 		bl	_ZL27UART_WaitOnFlagUntilTimeoutP18UART_HandleTypeDefm10FlagStatusmm
 1259              	.LVL95:
 1260 0056 0028     		cmp	r0, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 70


 1261 0058 40D1     		bne	.L102
 1262              	.LVL96:
 761:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 1263              		.loc 1 761 0
 1264 005a 2369     		ldr	r3, [r4, #16]
 1265 005c 33B9     		cbnz	r3, .L95
 763:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           pData +=2U;
 1266              		.loc 1 763 0
 1267 005e 2368     		ldr	r3, [r4]
 1268 0060 5B68     		ldr	r3, [r3, #4]
 1269 0062 C3F30803 		ubfx	r3, r3, #0, #9
 1270 0066 25F8023B 		strh	r3, [r5], #2	@ movhi
 1271              	.LVL97:
 1272 006a 0BE0     		b	.L92
 1273              	.LVL98:
 1274              	.L95:
 768:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           pData +=1U;
 1275              		.loc 1 768 0
 1276 006c 2368     		ldr	r3, [r4]
 1277 006e 5B68     		ldr	r3, [r3, #4]
 1278 0070 DBB2     		uxtb	r3, r3
 1279 0072 25F8013B 		strh	r3, [r5], #1	@ movhi
 1280              	.LVL99:
 1281 0076 05E0     		b	.L92
 1282              	.LVL100:
 1283              	.L97:
 785:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 1284              		.loc 1 785 0
 1285 0078 2368     		ldr	r3, [r4]
 1286 007a 5B68     		ldr	r3, [r3, #4]
 1287              	.LVL101:
 1288 007c 03F07F03 		and	r3, r3, #127
 1289 0080 2B70     		strb	r3, [r5]
 1290 0082 0135     		adds	r5, r5, #1
 1291              	.LVL102:
 1292              	.L92:
 751:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 1293              		.loc 1 751 0
 1294 0084 E38D     		ldrh	r3, [r4, #46]
 1295 0086 9BB2     		uxth	r3, r3
 1296 0088 BBB1     		cbz	r3, .L93
 753:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1297              		.loc 1 753 0
 1298 008a E38D     		ldrh	r3, [r4, #46]
 1299 008c 013B     		subs	r3, r3, #1
 1300 008e 9BB2     		uxth	r3, r3
 1301 0090 E385     		strh	r3, [r4, #46]	@ movhi
 754:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 1302              		.loc 1 754 0
 1303 0092 A368     		ldr	r3, [r4, #8]
 1304 0094 B3F5805F 		cmp	r3, #4096
 1305 0098 D6D0     		beq	.L105
 775:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 1306              		.loc 1 775 0
 1307 009a 0096     		str	r6, [sp]
 1308 009c 3B46     		mov	r3, r7
 1309 009e 0022     		movs	r2, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 71


 1310 00a0 2021     		movs	r1, #32
 1311 00a2 2046     		mov	r0, r4
 1312 00a4 FFF7FEFF 		bl	_ZL27UART_WaitOnFlagUntilTimeoutP18UART_HandleTypeDefm10FlagStatusmm
 1313              	.LVL103:
 1314 00a8 D0B9     		cbnz	r0, .L103
 779:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 1315              		.loc 1 779 0
 1316 00aa 2369     		ldr	r3, [r4, #16]
 1317 00ac 002B     		cmp	r3, #0
 1318 00ae E3D1     		bne	.L97
 781:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 1319              		.loc 1 781 0
 1320 00b0 2368     		ldr	r3, [r4]
 1321 00b2 5B68     		ldr	r3, [r3, #4]
 1322              	.LVL104:
 1323 00b4 2B70     		strb	r3, [r5]
 1324 00b6 0135     		adds	r5, r5, #1
 1325              	.LVL105:
 1326 00b8 E4E7     		b	.L92
 1327              	.L93:
 792:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     
 1328              		.loc 1 792 0
 1329 00ba 2023     		movs	r3, #32
 1330 00bc 84F83A30 		strb	r3, [r4, #58]
 795:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1331              		.loc 1 795 0
 1332 00c0 0020     		movs	r0, #0
 1333 00c2 84F83800 		strb	r0, [r4, #56]
 797:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 1334              		.loc 1 797 0
 1335 00c6 00E0     		b	.L91
 1336              	.LVL106:
 1337              	.L98:
 801:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 1338              		.loc 1 801 0
 1339 00c8 0220     		movs	r0, #2
 1340              	.LVL107:
 1341              	.L91:
 803:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1342              		.loc 1 803 0
 1343 00ca 02B0     		add	sp, sp, #8
 1344              	.LCFI18:
 1345              		.cfi_remember_state
 1346              		.cfi_def_cfa_offset 24
 1347              		@ sp needed
 1348 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1349              	.LVL108:
 1350              	.L99:
 1351              	.LCFI19:
 1352              		.cfi_restore_state
 735:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 1353              		.loc 1 735 0
 1354 00d0 0120     		movs	r0, #1
 1355              	.LVL109:
 1356 00d2 FAE7     		b	.L91
 1357              	.LVL110:
 1358              	.L100:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 72


 1359 00d4 0120     		movs	r0, #1
 1360              	.LVL111:
 1361 00d6 F8E7     		b	.L91
 1362              	.LVL112:
 1363              	.L101:
 739:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     
 1364              		.loc 1 739 0
 1365 00d8 0220     		movs	r0, #2
 1366              	.LVL113:
 1367 00da F6E7     		b	.L91
 1368              	.LVL114:
 1369              	.L102:
 758:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 1370              		.loc 1 758 0
 1371 00dc 0320     		movs	r0, #3
 1372 00de F4E7     		b	.L91
 1373              	.L103:
 777:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 1374              		.loc 1 777 0
 1375 00e0 0320     		movs	r0, #3
 1376 00e2 F2E7     		b	.L91
 1377              		.cfi_endproc
 1378              	.LFE72:
 1379              		.fnend
 1381              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1382              		.align	1
 1383              		.global	HAL_UART_Transmit_IT
 1384              		.syntax unified
 1385              		.thumb
 1386              		.thumb_func
 1387              		.fpu softvfp
 1389              	HAL_UART_Transmit_IT:
 1390              		.fnstart
 1391              	.LFB73:
 814:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1392              		.loc 1 814 0
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 0
 1395              		@ frame_needed = 0, uses_anonymous_args = 0
 1396              		@ link register save eliminated.
 1397              	.LVL115:
 816:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 1398              		.loc 1 816 0
 1399 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1400 0004 DBB2     		uxtb	r3, r3
 1401 0006 202B     		cmp	r3, #32
 1402 0008 16D1     		bne	.L108
 818:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 1403              		.loc 1 818 0
 1404 000a B9B1     		cbz	r1, .L109
 818:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 1405              		.loc 1 818 0 is_stmt 0 discriminator 1
 1406 000c C2B1     		cbz	r2, .L110
 823:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1407              		.loc 1 823 0 is_stmt 1
 1408 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1409 0012 012B     		cmp	r3, #1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 73


 1410 0014 16D0     		beq	.L111
 825:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1411              		.loc 1 825 0 discriminator 2
 1412 0016 0162     		str	r1, [r0, #32]
 826:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1413              		.loc 1 826 0 discriminator 2
 1414 0018 8284     		strh	r2, [r0, #36]	@ movhi
 827:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1415              		.loc 1 827 0 discriminator 2
 1416 001a C284     		strh	r2, [r0, #38]	@ movhi
 829:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1417              		.loc 1 829 0 discriminator 2
 1418 001c 0023     		movs	r3, #0
 1419 001e C363     		str	r3, [r0, #60]
 830:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1420              		.loc 1 830 0 discriminator 2
 1421 0020 2122     		movs	r2, #33
 1422              	.LVL116:
 1423 0022 80F83920 		strb	r2, [r0, #57]
 833:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1424              		.loc 1 833 0 discriminator 2
 1425 0026 80F83830 		strb	r3, [r0, #56]
 836:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1426              		.loc 1 836 0 discriminator 2
 1427 002a 0168     		ldr	r1, [r0]
 1428              	.LVL117:
 1429 002c CA68     		ldr	r2, [r1, #12]
 1430 002e 42F08002 		orr	r2, r2, #128
 1431 0032 CA60     		str	r2, [r1, #12]
 1432              	.LVL118:
 838:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 1433              		.loc 1 838 0 discriminator 2
 1434 0034 1846     		mov	r0, r3
 1435              	.LVL119:
 1436 0036 7047     		bx	lr
 1437              	.LVL120:
 1438              	.L108:
 842:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 1439              		.loc 1 842 0
 1440 0038 0220     		movs	r0, #2
 1441              	.LVL121:
 1442 003a 7047     		bx	lr
 1443              	.LVL122:
 1444              	.L109:
 820:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 1445              		.loc 1 820 0
 1446 003c 0120     		movs	r0, #1
 1447              	.LVL123:
 1448 003e 7047     		bx	lr
 1449              	.LVL124:
 1450              	.L110:
 1451 0040 0120     		movs	r0, #1
 1452              	.LVL125:
 1453 0042 7047     		bx	lr
 1454              	.LVL126:
 1455              	.L111:
 823:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 74


 1456              		.loc 1 823 0
 1457 0044 0220     		movs	r0, #2
 1458              	.LVL127:
 844:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1459              		.loc 1 844 0
 1460 0046 7047     		bx	lr
 1461              		.cfi_endproc
 1462              	.LFE73:
 1463              		.cantunwind
 1464              		.fnend
 1466              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1467              		.align	1
 1468              		.global	HAL_UART_Receive_IT
 1469              		.syntax unified
 1470              		.thumb
 1471              		.thumb_func
 1472              		.fpu softvfp
 1474              	HAL_UART_Receive_IT:
 1475              		.fnstart
 1476              	.LFB74:
 855:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 1477              		.loc 1 855 0
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 0
 1480              		@ frame_needed = 0, uses_anonymous_args = 0
 1481              		@ link register save eliminated.
 1482              	.LVL128:
 857:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 1483              		.loc 1 857 0
 1484 0000 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1485 0004 DBB2     		uxtb	r3, r3
 1486 0006 202B     		cmp	r3, #32
 1487 0008 20D1     		bne	.L114
 859:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 1488              		.loc 1 859 0
 1489 000a 09B3     		cbz	r1, .L115
 859:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 1490              		.loc 1 859 0 is_stmt 0 discriminator 1
 1491 000c 12B3     		cbz	r2, .L116
 865:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1492              		.loc 1 865 0 is_stmt 1
 1493 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1494 0012 012B     		cmp	r3, #1
 1495 0014 20D0     		beq	.L117
 867:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1496              		.loc 1 867 0 discriminator 2
 1497 0016 8162     		str	r1, [r0, #40]
 868:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1498              		.loc 1 868 0 discriminator 2
 1499 0018 8285     		strh	r2, [r0, #44]	@ movhi
 869:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1500              		.loc 1 869 0 discriminator 2
 1501 001a C285     		strh	r2, [r0, #46]	@ movhi
 871:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1502              		.loc 1 871 0 discriminator 2
 1503 001c 0023     		movs	r3, #0
 1504 001e C363     		str	r3, [r0, #60]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 75


 872:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     
 1505              		.loc 1 872 0 discriminator 2
 1506 0020 2222     		movs	r2, #34
 1507              	.LVL129:
 1508 0022 80F83A20 		strb	r2, [r0, #58]
 875:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1509              		.loc 1 875 0 discriminator 2
 1510 0026 80F83830 		strb	r3, [r0, #56]
 878:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1511              		.loc 1 878 0 discriminator 2
 1512 002a 0168     		ldr	r1, [r0]
 1513              	.LVL130:
 1514 002c CA68     		ldr	r2, [r1, #12]
 1515 002e 42F48072 		orr	r2, r2, #256
 1516 0032 CA60     		str	r2, [r1, #12]
 1517              	.LVL131:
 881:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1518              		.loc 1 881 0 discriminator 2
 1519 0034 0168     		ldr	r1, [r0]
 1520 0036 4A69     		ldr	r2, [r1, #20]
 1521 0038 42F00102 		orr	r2, r2, #1
 1522 003c 4A61     		str	r2, [r1, #20]
 884:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1523              		.loc 1 884 0 discriminator 2
 1524 003e 0168     		ldr	r1, [r0]
 1525 0040 CA68     		ldr	r2, [r1, #12]
 1526 0042 42F02002 		orr	r2, r2, #32
 1527 0046 CA60     		str	r2, [r1, #12]
 886:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 1528              		.loc 1 886 0 discriminator 2
 1529 0048 1846     		mov	r0, r3
 1530              	.LVL132:
 1531 004a 7047     		bx	lr
 1532              	.LVL133:
 1533              	.L114:
 890:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 1534              		.loc 1 890 0
 1535 004c 0220     		movs	r0, #2
 1536              	.LVL134:
 1537 004e 7047     		bx	lr
 1538              	.LVL135:
 1539              	.L115:
 861:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 1540              		.loc 1 861 0
 1541 0050 0120     		movs	r0, #1
 1542              	.LVL136:
 1543 0052 7047     		bx	lr
 1544              	.LVL137:
 1545              	.L116:
 1546 0054 0120     		movs	r0, #1
 1547              	.LVL138:
 1548 0056 7047     		bx	lr
 1549              	.LVL139:
 1550              	.L117:
 865:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1551              		.loc 1 865 0
 1552 0058 0220     		movs	r0, #2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 76


 1553              	.LVL140:
 892:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1554              		.loc 1 892 0
 1555 005a 7047     		bx	lr
 1556              		.cfi_endproc
 1557              	.LFE74:
 1558              		.cantunwind
 1559              		.fnend
 1561              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1562              		.align	1
 1563              		.global	HAL_UART_Transmit_DMA
 1564              		.syntax unified
 1565              		.thumb
 1566              		.thumb_func
 1567              		.fpu softvfp
 1569              	HAL_UART_Transmit_DMA:
 1570              		.fnstart
 1571              	.LFB75:
 903:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 1572              		.loc 1 903 0
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 0
 1575              		@ frame_needed = 0, uses_anonymous_args = 0
 1576              	.LVL141:
 1577 0000 38B5     		push	{r3, r4, r5, lr}
 1578              		.save {r3, r4, r5, lr}
 1579              	.LCFI20:
 1580              		.cfi_def_cfa_offset 16
 1581              		.cfi_offset 3, -16
 1582              		.cfi_offset 4, -12
 1583              		.cfi_offset 5, -8
 1584              		.cfi_offset 14, -4
 907:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 1585              		.loc 1 907 0
 1586 0002 90F83940 		ldrb	r4, [r0, #57]	@ zero_extendqisi2
 1587 0006 E4B2     		uxtb	r4, r4
 1588 0008 202C     		cmp	r4, #32
 1589 000a 31D1     		bne	.L120
 909:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 1590              		.loc 1 909 0
 1591 000c 0029     		cmp	r1, #0
 1592 000e 31D0     		beq	.L121
 909:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 1593              		.loc 1 909 0 is_stmt 0 discriminator 1
 1594 0010 002A     		cmp	r2, #0
 1595 0012 31D0     		beq	.L122
 915:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1596              		.loc 1 915 0 is_stmt 1
 1597 0014 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1598 0018 012B     		cmp	r3, #1
 1599 001a 2FD0     		beq	.L123
 1600 001c 1346     		mov	r3, r2
 1601 001e 0446     		mov	r4, r0
 915:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1602              		.loc 1 915 0 is_stmt 0 discriminator 2
 1603 0020 0122     		movs	r2, #1
 1604              	.LVL142:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 77


 1605 0022 80F83820 		strb	r2, [r0, #56]
 917:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1606              		.loc 1 917 0 is_stmt 1 discriminator 2
 1607 0026 0162     		str	r1, [r0, #32]
 918:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1608              		.loc 1 918 0 discriminator 2
 1609 0028 8384     		strh	r3, [r0, #36]	@ movhi
 919:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1610              		.loc 1 919 0 discriminator 2
 1611 002a C384     		strh	r3, [r0, #38]	@ movhi
 921:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1612              		.loc 1 921 0 discriminator 2
 1613 002c 0025     		movs	r5, #0
 1614 002e C563     		str	r5, [r0, #60]
 922:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1615              		.loc 1 922 0 discriminator 2
 1616 0030 2122     		movs	r2, #33
 1617 0032 80F83920 		strb	r2, [r0, #57]
 925:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1618              		.loc 1 925 0 discriminator 2
 1619 0036 026B     		ldr	r2, [r0, #48]
 1620 0038 1148     		ldr	r0, .L125
 1621              	.LVL143:
 1622 003a 9062     		str	r0, [r2, #40]
 928:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1623              		.loc 1 928 0 discriminator 2
 1624 003c 226B     		ldr	r2, [r4, #48]
 1625 003e 1148     		ldr	r0, .L125+4
 1626 0040 D062     		str	r0, [r2, #44]
 931:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1627              		.loc 1 931 0 discriminator 2
 1628 0042 226B     		ldr	r2, [r4, #48]
 1629 0044 1048     		ldr	r0, .L125+8
 1630 0046 1063     		str	r0, [r2, #48]
 934:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1631              		.loc 1 934 0 discriminator 2
 1632 0048 226B     		ldr	r2, [r4, #48]
 1633 004a 5563     		str	r5, [r2, #52]
 1634              	.LVL144:
 938:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1635              		.loc 1 938 0 discriminator 2
 1636 004c 2268     		ldr	r2, [r4]
 1637 004e 0432     		adds	r2, r2, #4
 1638 0050 206B     		ldr	r0, [r4, #48]
 1639 0052 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1640              	.LVL145:
 941:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1641              		.loc 1 941 0 discriminator 2
 1642 0056 2368     		ldr	r3, [r4]
 1643 0058 6FF04002 		mvn	r2, #64
 1644 005c 1A60     		str	r2, [r3]
 944:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1645              		.loc 1 944 0 discriminator 2
 1646 005e 84F83850 		strb	r5, [r4, #56]
 948:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1647              		.loc 1 948 0 discriminator 2
 1648 0062 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 78


 1649 0064 5369     		ldr	r3, [r2, #20]
 1650 0066 43F08003 		orr	r3, r3, #128
 1651 006a 5361     		str	r3, [r2, #20]
 950:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 1652              		.loc 1 950 0 discriminator 2
 1653 006c 2846     		mov	r0, r5
 1654 006e 00E0     		b	.L119
 1655              	.LVL146:
 1656              	.L120:
 954:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 1657              		.loc 1 954 0
 1658 0070 0220     		movs	r0, #2
 1659              	.LVL147:
 1660              	.L119:
 956:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1661              		.loc 1 956 0
 1662 0072 38BD     		pop	{r3, r4, r5, pc}
 1663              	.LVL148:
 1664              	.L121:
 911:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 1665              		.loc 1 911 0
 1666 0074 0120     		movs	r0, #1
 1667              	.LVL149:
 1668 0076 FCE7     		b	.L119
 1669              	.LVL150:
 1670              	.L122:
 1671 0078 0120     		movs	r0, #1
 1672              	.LVL151:
 1673 007a FAE7     		b	.L119
 1674              	.LVL152:
 1675              	.L123:
 915:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1676              		.loc 1 915 0
 1677 007c 0220     		movs	r0, #2
 1678              	.LVL153:
 1679 007e F8E7     		b	.L119
 1680              	.L126:
 1681              		.align	2
 1682              	.L125:
 1683 0080 00000000 		.word	_ZL20UART_DMATransmitCpltP19__DMA_HandleTypeDef
 1684 0084 00000000 		.word	_ZL18UART_DMATxHalfCpltP19__DMA_HandleTypeDef
 1685 0088 00000000 		.word	_ZL13UART_DMAErrorP19__DMA_HandleTypeDef
 1686              		.cfi_endproc
 1687              	.LFE75:
 1688              		.fnend
 1690              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1691              		.align	1
 1692              		.global	HAL_UART_Receive_DMA
 1693              		.syntax unified
 1694              		.thumb
 1695              		.thumb_func
 1696              		.fpu softvfp
 1698              	HAL_UART_Receive_DMA:
 1699              		.fnstart
 1700              	.LFB76:
 968:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 1701              		.loc 1 968 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 79


 1702              		.cfi_startproc
 1703              		@ args = 0, pretend = 0, frame = 8
 1704              		@ frame_needed = 0, uses_anonymous_args = 0
 1705              	.LVL154:
 1706 0000 30B5     		push	{r4, r5, lr}
 1707              		.save {r4, r5, lr}
 1708              	.LCFI21:
 1709              		.cfi_def_cfa_offset 12
 1710              		.cfi_offset 4, -12
 1711              		.cfi_offset 5, -8
 1712              		.cfi_offset 14, -4
 1713              		.pad #12
 1714 0002 83B0     		sub	sp, sp, #12
 1715              	.LCFI22:
 1716              		.cfi_def_cfa_offset 24
 1717              	.LBB2:
 972:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 1718              		.loc 1 972 0
 1719 0004 90F83A40 		ldrb	r4, [r0, #58]	@ zero_extendqisi2
 1720 0008 E4B2     		uxtb	r4, r4
 1721 000a 202C     		cmp	r4, #32
 1722 000c 3DD1     		bne	.L129
 1723              	.LBB3:
 974:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 1724              		.loc 1 974 0
 1725 000e 0029     		cmp	r1, #0
 1726 0010 3ED0     		beq	.L130
 974:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 1727              		.loc 1 974 0 is_stmt 0 discriminator 1
 1728 0012 002A     		cmp	r2, #0
 1729 0014 3ED0     		beq	.L131
 980:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1730              		.loc 1 980 0 is_stmt 1
 1731 0016 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1732 001a 012B     		cmp	r3, #1
 1733 001c 3CD0     		beq	.L132
 1734 001e 1346     		mov	r3, r2
 1735 0020 0A46     		mov	r2, r1
 1736              	.LVL155:
 1737 0022 0446     		mov	r4, r0
 980:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1738              		.loc 1 980 0 is_stmt 0 discriminator 2
 1739 0024 0121     		movs	r1, #1
 1740              	.LVL156:
 1741 0026 80F83810 		strb	r1, [r0, #56]
 982:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1742              		.loc 1 982 0 is_stmt 1 discriminator 2
 1743 002a 8262     		str	r2, [r0, #40]
 983:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1744              		.loc 1 983 0 discriminator 2
 1745 002c 8385     		strh	r3, [r0, #44]	@ movhi
 985:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1746              		.loc 1 985 0 discriminator 2
 1747 002e 0025     		movs	r5, #0
 1748 0030 C563     		str	r5, [r0, #60]
 986:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1749              		.loc 1 986 0 discriminator 2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 80


 1750 0032 2221     		movs	r1, #34
 1751 0034 80F83A10 		strb	r1, [r0, #58]
 989:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1752              		.loc 1 989 0 discriminator 2
 1753 0038 416B     		ldr	r1, [r0, #52]
 1754 003a 1848     		ldr	r0, .L134
 1755              	.LVL157:
 1756 003c 8862     		str	r0, [r1, #40]
 992:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1757              		.loc 1 992 0 discriminator 2
 1758 003e 616B     		ldr	r1, [r4, #52]
 1759 0040 1748     		ldr	r0, .L134+4
 1760 0042 C862     		str	r0, [r1, #44]
 995:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1761              		.loc 1 995 0 discriminator 2
 1762 0044 616B     		ldr	r1, [r4, #52]
 1763 0046 1748     		ldr	r0, .L134+8
 1764 0048 0863     		str	r0, [r1, #48]
 998:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1765              		.loc 1 998 0 discriminator 2
 1766 004a 616B     		ldr	r1, [r4, #52]
 1767 004c 4D63     		str	r5, [r1, #52]
 1768              	.LVL158:
1002:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1769              		.loc 1 1002 0 discriminator 2
 1770 004e 2168     		ldr	r1, [r4]
 1771 0050 0431     		adds	r1, r1, #4
 1772 0052 606B     		ldr	r0, [r4, #52]
 1773 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1774              	.LVL159:
 1775              	.LBB4:
1005:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1776              		.loc 1 1005 0 discriminator 2
 1777 0058 0195     		str	r5, [sp, #4]
 1778 005a 2368     		ldr	r3, [r4]
 1779 005c 1A68     		ldr	r2, [r3]
 1780 005e 0192     		str	r2, [sp, #4]
 1781 0060 5A68     		ldr	r2, [r3, #4]
 1782 0062 0192     		str	r2, [sp, #4]
 1783 0064 019A     		ldr	r2, [sp, #4]
 1784              	.LBE4:
1008:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1785              		.loc 1 1008 0 discriminator 2
 1786 0066 84F83850 		strb	r5, [r4, #56]
1011:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1787              		.loc 1 1011 0 discriminator 2
 1788 006a DA68     		ldr	r2, [r3, #12]
 1789 006c 42F48072 		orr	r2, r2, #256
 1790 0070 DA60     		str	r2, [r3, #12]
1014:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1791              		.loc 1 1014 0 discriminator 2
 1792 0072 2268     		ldr	r2, [r4]
 1793 0074 5369     		ldr	r3, [r2, #20]
 1794 0076 43F00103 		orr	r3, r3, #1
 1795 007a 5361     		str	r3, [r2, #20]
1018:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1796              		.loc 1 1018 0 discriminator 2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 81


 1797 007c 2268     		ldr	r2, [r4]
 1798 007e 5369     		ldr	r3, [r2, #20]
 1799 0080 43F04003 		orr	r3, r3, #64
 1800 0084 5361     		str	r3, [r2, #20]
1020:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 1801              		.loc 1 1020 0 discriminator 2
 1802 0086 2846     		mov	r0, r5
 1803 0088 00E0     		b	.L128
 1804              	.LVL160:
 1805              	.L129:
 1806              	.LBE3:
1024:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 1807              		.loc 1 1024 0
 1808 008a 0220     		movs	r0, #2
 1809              	.LVL161:
 1810              	.L128:
 1811              	.LBE2:
1026:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1812              		.loc 1 1026 0
 1813 008c 03B0     		add	sp, sp, #12
 1814              	.LCFI23:
 1815              		.cfi_remember_state
 1816              		.cfi_def_cfa_offset 12
 1817              		@ sp needed
 1818 008e 30BD     		pop	{r4, r5, pc}
 1819              	.LVL162:
 1820              	.L130:
 1821              	.LCFI24:
 1822              		.cfi_restore_state
 1823              	.LBB6:
 1824              	.LBB5:
 976:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 1825              		.loc 1 976 0
 1826 0090 0120     		movs	r0, #1
 1827              	.LVL163:
 1828 0092 FBE7     		b	.L128
 1829              	.LVL164:
 1830              	.L131:
 1831 0094 0120     		movs	r0, #1
 1832              	.LVL165:
 1833 0096 F9E7     		b	.L128
 1834              	.LVL166:
 1835              	.L132:
 980:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1836              		.loc 1 980 0
 1837 0098 0220     		movs	r0, #2
 1838              	.LVL167:
 1839 009a F7E7     		b	.L128
 1840              	.L135:
 1841              		.align	2
 1842              	.L134:
 1843 009c 00000000 		.word	_ZL19UART_DMAReceiveCpltP19__DMA_HandleTypeDef
 1844 00a0 00000000 		.word	_ZL18UART_DMARxHalfCpltP19__DMA_HandleTypeDef
 1845 00a4 00000000 		.word	_ZL13UART_DMAErrorP19__DMA_HandleTypeDef
 1846              	.LBE5:
 1847              	.LBE6:
 1848              		.cfi_endproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 82


 1849              	.LFE76:
 1850              		.fnend
 1852              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1853              		.align	1
 1854              		.global	HAL_UART_DMAPause
 1855              		.syntax unified
 1856              		.thumb
 1857              		.thumb_func
 1858              		.fpu softvfp
 1860              	HAL_UART_DMAPause:
 1861              		.fnstart
 1862              	.LFB77:
1035:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1863              		.loc 1 1035 0
 1864              		.cfi_startproc
 1865              		@ args = 0, pretend = 0, frame = 0
 1866              		@ frame_needed = 0, uses_anonymous_args = 0
 1867              		@ link register save eliminated.
 1868              	.LVL168:
1039:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1869              		.loc 1 1039 0
 1870 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1871 0004 012B     		cmp	r3, #1
 1872 0006 31D0     		beq	.L140
1039:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1873              		.loc 1 1039 0 is_stmt 0 discriminator 2
 1874 0008 0123     		movs	r3, #1
 1875 000a 80F83830 		strb	r3, [r0, #56]
1041:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1876              		.loc 1 1041 0 is_stmt 1 discriminator 2
 1877 000e 0168     		ldr	r1, [r0]
 1878 0010 4A69     		ldr	r2, [r1, #20]
 1879 0012 02F08002 		and	r2, r2, #128
 1880              	.LVL169:
1042:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 1881              		.loc 1 1042 0 discriminator 2
 1882 0016 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1883 001a DBB2     		uxtb	r3, r3
 1884 001c 212B     		cmp	r3, #33
 1885 001e 0DD0     		beq	.L141
 1886              	.L138:
1048:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1887              		.loc 1 1048 0
 1888 0020 0168     		ldr	r1, [r0]
 1889 0022 4A69     		ldr	r2, [r1, #20]
 1890              	.LVL170:
 1891 0024 02F04002 		and	r2, r2, #64
 1892              	.LVL171:
1049:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 1893              		.loc 1 1049 0
 1894 0028 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1895 002c DBB2     		uxtb	r3, r3
 1896 002e 222B     		cmp	r3, #34
 1897 0030 0BD0     		beq	.L142
 1898              	.LVL172:
 1899              	.L139:
1060:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 83


 1900              		.loc 1 1060 0
 1901 0032 0023     		movs	r3, #0
 1902 0034 80F83830 		strb	r3, [r0, #56]
1062:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 1903              		.loc 1 1062 0
 1904 0038 1846     		mov	r0, r3
 1905              	.LVL173:
 1906 003a 7047     		bx	lr
 1907              	.LVL174:
 1908              	.L141:
1042:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 1909              		.loc 1 1042 0 discriminator 1
 1910 003c 002A     		cmp	r2, #0
 1911 003e EFD0     		beq	.L138
1045:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 1912              		.loc 1 1045 0
 1913 0040 4B69     		ldr	r3, [r1, #20]
 1914 0042 23F08003 		bic	r3, r3, #128
 1915 0046 4B61     		str	r3, [r1, #20]
 1916 0048 EAE7     		b	.L138
 1917              	.L142:
1049:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 1918              		.loc 1 1049 0 discriminator 1
 1919 004a 002A     		cmp	r2, #0
 1920 004c F1D0     		beq	.L139
1052:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1921              		.loc 1 1052 0
 1922 004e CB68     		ldr	r3, [r1, #12]
 1923 0050 23F48073 		bic	r3, r3, #256
 1924 0054 CB60     		str	r3, [r1, #12]
1053:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1925              		.loc 1 1053 0
 1926 0056 0268     		ldr	r2, [r0]
 1927              	.LVL175:
 1928 0058 5369     		ldr	r3, [r2, #20]
 1929 005a 23F00103 		bic	r3, r3, #1
 1930 005e 5361     		str	r3, [r2, #20]
1056:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 1931              		.loc 1 1056 0
 1932 0060 0268     		ldr	r2, [r0]
 1933 0062 5369     		ldr	r3, [r2, #20]
 1934 0064 23F04003 		bic	r3, r3, #64
 1935 0068 5361     		str	r3, [r2, #20]
 1936 006a E2E7     		b	.L139
 1937              	.LVL176:
 1938              	.L140:
1039:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1939              		.loc 1 1039 0
 1940 006c 0220     		movs	r0, #2
 1941              	.LVL177:
1063:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1942              		.loc 1 1063 0
 1943 006e 7047     		bx	lr
 1944              		.cfi_endproc
 1945              	.LFE77:
 1946              		.cantunwind
 1947              		.fnend
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 84


 1949              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1950              		.align	1
 1951              		.global	HAL_UART_DMAResume
 1952              		.syntax unified
 1953              		.thumb
 1954              		.thumb_func
 1955              		.fpu softvfp
 1957              	HAL_UART_DMAResume:
 1958              		.fnstart
 1959              	.LFB78:
1072:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Locked */
 1960              		.loc 1 1072 0
 1961              		.cfi_startproc
 1962              		@ args = 0, pretend = 0, frame = 8
 1963              		@ frame_needed = 0, uses_anonymous_args = 0
 1964              		@ link register save eliminated.
 1965              	.LVL178:
1074:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 1966              		.loc 1 1074 0
 1967 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1968 0004 012B     		cmp	r3, #1
 1969 0006 34D0     		beq	.L147
1074:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 1970              		.loc 1 1074 0 is_stmt 0 discriminator 2
 1971 0008 0123     		movs	r3, #1
 1972 000a 80F83830 		strb	r3, [r0, #56]
1076:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 1973              		.loc 1 1076 0 is_stmt 1 discriminator 2
 1974 000e 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1975 0012 DBB2     		uxtb	r3, r3
 1976 0014 212B     		cmp	r3, #33
 1977 0016 09D0     		beq	.L153
 1978              	.L145:
 1979              	.LBB7:
1082:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 1980              		.loc 1 1082 0
 1981 0018 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1982 001c DBB2     		uxtb	r3, r3
 1983 001e 222B     		cmp	r3, #34
 1984 0020 0AD0     		beq	.L154
 1985              	.LBE7:
1096:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 1986              		.loc 1 1096 0
 1987 0022 0023     		movs	r3, #0
 1988 0024 80F83830 		strb	r3, [r0, #56]
1098:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 1989              		.loc 1 1098 0
 1990 0028 1846     		mov	r0, r3
 1991              	.LVL179:
1099:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 1992              		.loc 1 1099 0
 1993 002a 7047     		bx	lr
 1994              	.LVL180:
 1995              	.L153:
1079:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 1996              		.loc 1 1079 0
 1997 002c 0268     		ldr	r2, [r0]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 85


 1998 002e 5369     		ldr	r3, [r2, #20]
 1999 0030 43F08003 		orr	r3, r3, #128
 2000 0034 5361     		str	r3, [r2, #20]
 2001 0036 EFE7     		b	.L145
 2002              	.L154:
1072:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Process Locked */
 2003              		.loc 1 1072 0
 2004 0038 82B0     		sub	sp, sp, #8
 2005              	.LCFI25:
 2006              		.cfi_def_cfa_offset 8
 2007              	.LBB10:
 2008              	.LBB8:
 2009              	.LBB9:
1085:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     
 2010              		.loc 1 1085 0
 2011 003a 0023     		movs	r3, #0
 2012 003c 0193     		str	r3, [sp, #4]
 2013 003e 0368     		ldr	r3, [r0]
 2014 0040 1A68     		ldr	r2, [r3]
 2015 0042 0192     		str	r2, [sp, #4]
 2016 0044 5A68     		ldr	r2, [r3, #4]
 2017 0046 0192     		str	r2, [sp, #4]
 2018 0048 019A     		ldr	r2, [sp, #4]
 2019              	.LBE9:
1088:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2020              		.loc 1 1088 0
 2021 004a DA68     		ldr	r2, [r3, #12]
 2022 004c 42F48072 		orr	r2, r2, #256
 2023 0050 DA60     		str	r2, [r3, #12]
1089:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     
 2024              		.loc 1 1089 0
 2025 0052 0268     		ldr	r2, [r0]
 2026 0054 5369     		ldr	r3, [r2, #20]
 2027 0056 43F00103 		orr	r3, r3, #1
 2028 005a 5361     		str	r3, [r2, #20]
1092:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 2029              		.loc 1 1092 0
 2030 005c 0268     		ldr	r2, [r0]
 2031 005e 5369     		ldr	r3, [r2, #20]
 2032 0060 43F04003 		orr	r3, r3, #64
 2033 0064 5361     		str	r3, [r2, #20]
 2034              	.LBE8:
 2035              	.LBE10:
1096:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 2036              		.loc 1 1096 0
 2037 0066 0023     		movs	r3, #0
 2038 0068 80F83830 		strb	r3, [r0, #56]
1098:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 2039              		.loc 1 1098 0
 2040 006c 1846     		mov	r0, r3
 2041              	.LVL181:
1099:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2042              		.loc 1 1099 0
 2043 006e 02B0     		add	sp, sp, #8
 2044              	.LCFI26:
 2045              		.cfi_def_cfa_offset 0
 2046              		@ sp needed
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 86


 2047 0070 7047     		bx	lr
 2048              	.LVL182:
 2049              	.L147:
1074:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 2050              		.loc 1 1074 0
 2051 0072 0220     		movs	r0, #2
 2052              	.LVL183:
 2053 0074 7047     		bx	lr
 2054              		.cfi_endproc
 2055              	.LFE78:
 2056              		.cantunwind
 2057              		.fnend
 2059              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2060              		.align	1
 2061              		.global	HAL_UART_DMAStop
 2062              		.syntax unified
 2063              		.thumb
 2064              		.thumb_func
 2065              		.fpu softvfp
 2067              	HAL_UART_DMAStop:
 2068              		.fnstart
 2069              	.LFB79:
1108:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2070              		.loc 1 1108 0
 2071              		.cfi_startproc
 2072              		@ args = 0, pretend = 0, frame = 0
 2073              		@ frame_needed = 0, uses_anonymous_args = 0
 2074              	.LVL184:
 2075 0000 10B5     		push	{r4, lr}
 2076              		.save {r4, lr}
 2077              	.LCFI27:
 2078              		.cfi_def_cfa_offset 8
 2079              		.cfi_offset 4, -8
 2080              		.cfi_offset 14, -4
 2081 0002 0446     		mov	r4, r0
 2082              	.LVL185:
1117:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2083              		.loc 1 1117 0
 2084 0004 0168     		ldr	r1, [r0]
 2085 0006 4A69     		ldr	r2, [r1, #20]
 2086              	.LVL186:
1118:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2087              		.loc 1 1118 0
 2088 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2089 000c DBB2     		uxtb	r3, r3
 2090 000e 212B     		cmp	r3, #33
 2091 0010 0AD0     		beq	.L161
 2092              	.LVL187:
 2093              	.L156:
1131:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2094              		.loc 1 1131 0
 2095 0012 2168     		ldr	r1, [r4]
 2096 0014 4A69     		ldr	r2, [r1, #20]
 2097 0016 02F04002 		and	r2, r2, #64
 2098              	.LVL188:
1132:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2099              		.loc 1 1132 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 87


 2100 001a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2101 001e DBB2     		uxtb	r3, r3
 2102 0020 222B     		cmp	r3, #34
 2103 0022 11D0     		beq	.L162
 2104              	.LVL189:
 2105              	.L158:
1145:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2106              		.loc 1 1145 0
 2107 0024 0020     		movs	r0, #0
 2108 0026 10BD     		pop	{r4, pc}
 2109              	.LVL190:
 2110              	.L161:
 2111 0028 02F08002 		and	r2, r2, #128
 2112              	.LVL191:
1118:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2113              		.loc 1 1118 0 discriminator 1
 2114 002c 002A     		cmp	r2, #0
 2115 002e F0D0     		beq	.L156
1120:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2116              		.loc 1 1120 0
 2117 0030 4B69     		ldr	r3, [r1, #20]
 2118 0032 23F08003 		bic	r3, r3, #128
 2119 0036 4B61     		str	r3, [r1, #20]
1123:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 2120              		.loc 1 1123 0
 2121 0038 006B     		ldr	r0, [r0, #48]
 2122              	.LVL192:
 2123 003a 08B1     		cbz	r0, .L157
1125:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 2124              		.loc 1 1125 0
 2125 003c FFF7FEFF 		bl	HAL_DMA_Abort
 2126              	.LVL193:
 2127              	.L157:
1127:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 2128              		.loc 1 1127 0
 2129 0040 2046     		mov	r0, r4
 2130 0042 FFF7FEFF 		bl	_ZL18UART_EndTxTransferP18UART_HandleTypeDef
 2131              	.LVL194:
 2132 0046 E4E7     		b	.L156
 2133              	.LVL195:
 2134              	.L162:
1132:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2135              		.loc 1 1132 0 discriminator 1
 2136 0048 002A     		cmp	r2, #0
 2137 004a EBD0     		beq	.L158
1134:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2138              		.loc 1 1134 0
 2139 004c 4B69     		ldr	r3, [r1, #20]
 2140 004e 23F04003 		bic	r3, r3, #64
 2141 0052 4B61     		str	r3, [r1, #20]
1137:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 2142              		.loc 1 1137 0
 2143 0054 606B     		ldr	r0, [r4, #52]
 2144 0056 08B1     		cbz	r0, .L159
1139:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 2145              		.loc 1 1139 0
 2146 0058 FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 88


 2147              	.LVL196:
 2148              	.L159:
1141:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 2149              		.loc 1 1141 0
 2150 005c 2046     		mov	r0, r4
 2151 005e FFF7FEFF 		bl	_ZL18UART_EndRxTransferP18UART_HandleTypeDef
 2152              	.LVL197:
 2153 0062 DFE7     		b	.L158
 2154              		.cfi_endproc
 2155              	.LFE79:
 2156              		.fnend
 2158              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2159              		.align	1
 2160              		.global	HAL_UART_Abort
 2161              		.syntax unified
 2162              		.thumb
 2163              		.thumb_func
 2164              		.fpu softvfp
 2166              	HAL_UART_Abort:
 2167              		.fnstart
 2168              	.LFB80:
1160:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2169              		.loc 1 1160 0
 2170              		.cfi_startproc
 2171              		@ args = 0, pretend = 0, frame = 0
 2172              		@ frame_needed = 0, uses_anonymous_args = 0
 2173              	.LVL198:
 2174 0000 10B5     		push	{r4, lr}
 2175              		.save {r4, lr}
 2176              	.LCFI28:
 2177              		.cfi_def_cfa_offset 8
 2178              		.cfi_offset 4, -8
 2179              		.cfi_offset 14, -4
 2180 0002 0446     		mov	r4, r0
1162:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2181              		.loc 1 1162 0
 2182 0004 0268     		ldr	r2, [r0]
 2183 0006 D368     		ldr	r3, [r2, #12]
 2184 0008 23F4F073 		bic	r3, r3, #480
 2185 000c D360     		str	r3, [r2, #12]
1163:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 2186              		.loc 1 1163 0
 2187 000e 0268     		ldr	r2, [r0]
 2188 0010 5369     		ldr	r3, [r2, #20]
 2189 0012 23F00103 		bic	r3, r3, #1
 2190 0016 5361     		str	r3, [r2, #20]
1166:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2191              		.loc 1 1166 0
 2192 0018 0368     		ldr	r3, [r0]
 2193 001a 5A69     		ldr	r2, [r3, #20]
 2194 001c 12F0800F 		tst	r2, #128
 2195 0020 0AD0     		beq	.L164
1168:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2196              		.loc 1 1168 0
 2197 0022 5A69     		ldr	r2, [r3, #20]
 2198 0024 22F08002 		bic	r2, r2, #128
 2199 0028 5A61     		str	r2, [r3, #20]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 89


1171:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 2200              		.loc 1 1171 0
 2201 002a 036B     		ldr	r3, [r0, #48]
 2202 002c 23B1     		cbz	r3, .L164
1175:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2203              		.loc 1 1175 0
 2204 002e 0022     		movs	r2, #0
 2205 0030 5A63     		str	r2, [r3, #52]
1177:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 2206              		.loc 1 1177 0
 2207 0032 006B     		ldr	r0, [r0, #48]
 2208              	.LVL199:
 2209 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2210              	.LVL200:
 2211              	.L164:
1182:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2212              		.loc 1 1182 0
 2213 0038 2368     		ldr	r3, [r4]
 2214 003a 5A69     		ldr	r2, [r3, #20]
 2215 003c 12F0400F 		tst	r2, #64
 2216 0040 0AD0     		beq	.L165
1184:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2217              		.loc 1 1184 0
 2218 0042 5A69     		ldr	r2, [r3, #20]
 2219 0044 22F04002 		bic	r2, r2, #64
 2220 0048 5A61     		str	r2, [r3, #20]
1187:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 2221              		.loc 1 1187 0
 2222 004a 636B     		ldr	r3, [r4, #52]
 2223 004c 23B1     		cbz	r3, .L165
1191:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2224              		.loc 1 1191 0
 2225 004e 0022     		movs	r2, #0
 2226 0050 5A63     		str	r2, [r3, #52]
1193:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 2227              		.loc 1 1193 0
 2228 0052 606B     		ldr	r0, [r4, #52]
 2229 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 2230              	.LVL201:
 2231              	.L165:
1198:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2232              		.loc 1 1198 0
 2233 0058 0020     		movs	r0, #0
 2234 005a E084     		strh	r0, [r4, #38]	@ movhi
1199:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2235              		.loc 1 1199 0
 2236 005c E085     		strh	r0, [r4, #46]	@ movhi
1202:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2237              		.loc 1 1202 0
 2238 005e E063     		str	r0, [r4, #60]
1205:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2239              		.loc 1 1205 0
 2240 0060 2023     		movs	r3, #32
 2241 0062 84F83A30 		strb	r3, [r4, #58]
1206:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2242              		.loc 1 1206 0
 2243 0066 84F83930 		strb	r3, [r4, #57]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 90


1209:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2244              		.loc 1 1209 0
 2245 006a 10BD     		pop	{r4, pc}
 2246              		.cfi_endproc
 2247              	.LFE80:
 2248              		.fnend
 2250              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2251              		.align	1
 2252              		.global	HAL_UART_AbortTransmit
 2253              		.syntax unified
 2254              		.thumb
 2255              		.thumb_func
 2256              		.fpu softvfp
 2258              	HAL_UART_AbortTransmit:
 2259              		.fnstart
 2260              	.LFB81:
1224:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2261              		.loc 1 1224 0
 2262              		.cfi_startproc
 2263              		@ args = 0, pretend = 0, frame = 0
 2264              		@ frame_needed = 0, uses_anonymous_args = 0
 2265              	.LVL202:
 2266 0000 10B5     		push	{r4, lr}
 2267              		.save {r4, lr}
 2268              	.LCFI29:
 2269              		.cfi_def_cfa_offset 8
 2270              		.cfi_offset 4, -8
 2271              		.cfi_offset 14, -4
 2272 0002 0446     		mov	r4, r0
1226:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2273              		.loc 1 1226 0
 2274 0004 0268     		ldr	r2, [r0]
 2275 0006 D368     		ldr	r3, [r2, #12]
 2276 0008 23F0C003 		bic	r3, r3, #192
 2277 000c D360     		str	r3, [r2, #12]
1229:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2278              		.loc 1 1229 0
 2279 000e 0368     		ldr	r3, [r0]
 2280 0010 5A69     		ldr	r2, [r3, #20]
 2281 0012 12F0800F 		tst	r2, #128
 2282 0016 0AD0     		beq	.L168
1231:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2283              		.loc 1 1231 0
 2284 0018 5A69     		ldr	r2, [r3, #20]
 2285 001a 22F08002 		bic	r2, r2, #128
 2286 001e 5A61     		str	r2, [r3, #20]
1234:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 2287              		.loc 1 1234 0
 2288 0020 036B     		ldr	r3, [r0, #48]
 2289 0022 23B1     		cbz	r3, .L168
1238:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2290              		.loc 1 1238 0
 2291 0024 0022     		movs	r2, #0
 2292 0026 5A63     		str	r2, [r3, #52]
1240:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 2293              		.loc 1 1240 0
 2294 0028 006B     		ldr	r0, [r0, #48]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 91


 2295              	.LVL203:
 2296 002a FFF7FEFF 		bl	HAL_DMA_Abort
 2297              	.LVL204:
 2298              	.L168:
1245:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2299              		.loc 1 1245 0
 2300 002e 0020     		movs	r0, #0
 2301 0030 E084     		strh	r0, [r4, #38]	@ movhi
1248:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2302              		.loc 1 1248 0
 2303 0032 2023     		movs	r3, #32
 2304 0034 84F83930 		strb	r3, [r4, #57]
1251:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2305              		.loc 1 1251 0
 2306 0038 10BD     		pop	{r4, pc}
 2307              		.cfi_endproc
 2308              	.LFE81:
 2309              		.fnend
 2311              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2312              		.align	1
 2313              		.global	HAL_UART_AbortReceive
 2314              		.syntax unified
 2315              		.thumb
 2316              		.thumb_func
 2317              		.fpu softvfp
 2319              	HAL_UART_AbortReceive:
 2320              		.fnstart
 2321              	.LFB82:
1266:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2322              		.loc 1 1266 0
 2323              		.cfi_startproc
 2324              		@ args = 0, pretend = 0, frame = 0
 2325              		@ frame_needed = 0, uses_anonymous_args = 0
 2326              	.LVL205:
 2327 0000 10B5     		push	{r4, lr}
 2328              		.save {r4, lr}
 2329              	.LCFI30:
 2330              		.cfi_def_cfa_offset 8
 2331              		.cfi_offset 4, -8
 2332              		.cfi_offset 14, -4
 2333 0002 0446     		mov	r4, r0
1268:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2334              		.loc 1 1268 0
 2335 0004 0268     		ldr	r2, [r0]
 2336 0006 D368     		ldr	r3, [r2, #12]
 2337 0008 23F49073 		bic	r3, r3, #288
 2338 000c D360     		str	r3, [r2, #12]
1269:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2339              		.loc 1 1269 0
 2340 000e 0268     		ldr	r2, [r0]
 2341 0010 5369     		ldr	r3, [r2, #20]
 2342 0012 23F00103 		bic	r3, r3, #1
 2343 0016 5361     		str	r3, [r2, #20]
1272:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2344              		.loc 1 1272 0
 2345 0018 0368     		ldr	r3, [r0]
 2346 001a 5A69     		ldr	r2, [r3, #20]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 92


 2347 001c 12F0400F 		tst	r2, #64
 2348 0020 0AD0     		beq	.L171
1274:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2349              		.loc 1 1274 0
 2350 0022 5A69     		ldr	r2, [r3, #20]
 2351 0024 22F04002 		bic	r2, r2, #64
 2352 0028 5A61     		str	r2, [r3, #20]
1277:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 2353              		.loc 1 1277 0
 2354 002a 436B     		ldr	r3, [r0, #52]
 2355 002c 23B1     		cbz	r3, .L171
1281:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2356              		.loc 1 1281 0
 2357 002e 0022     		movs	r2, #0
 2358 0030 5A63     		str	r2, [r3, #52]
1283:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 2359              		.loc 1 1283 0
 2360 0032 406B     		ldr	r0, [r0, #52]
 2361              	.LVL206:
 2362 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2363              	.LVL207:
 2364              	.L171:
1288:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2365              		.loc 1 1288 0
 2366 0038 0020     		movs	r0, #0
 2367 003a E085     		strh	r0, [r4, #46]	@ movhi
1291:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2368              		.loc 1 1291 0
 2369 003c 2023     		movs	r3, #32
 2370 003e 84F83A30 		strb	r3, [r4, #58]
1294:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2371              		.loc 1 1294 0
 2372 0042 10BD     		pop	{r4, pc}
 2373              		.cfi_endproc
 2374              	.LFE82:
 2375              		.fnend
 2377              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2378              		.align	1
 2379              		.weak	HAL_UART_TxCpltCallback
 2380              		.syntax unified
 2381              		.thumb
 2382              		.thumb_func
 2383              		.fpu softvfp
 2385              	HAL_UART_TxCpltCallback:
 2386              		.fnstart
 2387              	.LFB87:
1683:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2388              		.loc 1 1683 0
 2389              		.cfi_startproc
 2390              		@ args = 0, pretend = 0, frame = 0
 2391              		@ frame_needed = 0, uses_anonymous_args = 0
 2392              		@ link register save eliminated.
 2393              	.LVL208:
1689:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2394              		.loc 1 1689 0
 2395 0000 7047     		bx	lr
 2396              		.cfi_endproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 93


 2397              	.LFE87:
 2398              		.cantunwind
 2399              		.fnend
 2401              		.section	.text._ZL20UART_DMATransmitCpltP19__DMA_HandleTypeDef,"ax",%progbits
 2402              		.align	1
 2403              		.syntax unified
 2404              		.thumb
 2405              		.thumb_func
 2406              		.fpu softvfp
 2408              	_ZL20UART_DMATransmitCpltP19__DMA_HandleTypeDef:
 2409              		.fnstart
 2410              	.LFB102:
2027:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2411              		.loc 1 2027 0
 2412              		.cfi_startproc
 2413              		@ args = 0, pretend = 0, frame = 0
 2414              		@ frame_needed = 0, uses_anonymous_args = 0
 2415              	.LVL209:
 2416 0000 08B5     		push	{r3, lr}
 2417              		.save {r3, lr}
 2418              	.LCFI31:
 2419              		.cfi_def_cfa_offset 8
 2420              		.cfi_offset 3, -8
 2421              		.cfi_offset 14, -4
2028:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
 2422              		.loc 1 2028 0
 2423 0002 436A     		ldr	r3, [r0, #36]
 2424              	.LVL210:
2030:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2425              		.loc 1 2030 0
 2426 0004 0268     		ldr	r2, [r0]
 2427 0006 1268     		ldr	r2, [r2]
 2428 0008 12F0200F 		tst	r2, #32
 2429 000c 0CD1     		bne	.L175
2032:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2430              		.loc 1 2032 0
 2431 000e 0022     		movs	r2, #0
 2432 0010 DA84     		strh	r2, [r3, #38]	@ movhi
2036:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2433              		.loc 1 2036 0
 2434 0012 1968     		ldr	r1, [r3]
 2435 0014 4A69     		ldr	r2, [r1, #20]
 2436 0016 22F08002 		bic	r2, r2, #128
 2437 001a 4A61     		str	r2, [r1, #20]
2039:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2438              		.loc 1 2039 0
 2439 001c 1A68     		ldr	r2, [r3]
 2440 001e D368     		ldr	r3, [r2, #12]
 2441              	.LVL211:
 2442 0020 43F04003 		orr	r3, r3, #64
 2443 0024 D360     		str	r3, [r2, #12]
 2444              	.LVL212:
 2445              	.L174:
2047:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2446              		.loc 1 2047 0
 2447 0026 08BD     		pop	{r3, pc}
 2448              	.LVL213:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 94


 2449              	.L175:
2045:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 2450              		.loc 1 2045 0
 2451 0028 1846     		mov	r0, r3
 2452              	.LVL214:
 2453 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2454              	.LVL215:
2047:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2455              		.loc 1 2047 0
 2456 002e FAE7     		b	.L174
 2457              		.cfi_endproc
 2458              	.LFE102:
 2459              		.fnend
 2461              		.section	.text._ZL19UART_EndTransmit_ITP18UART_HandleTypeDef,"ax",%progbits
 2462              		.align	1
 2463              		.syntax unified
 2464              		.thumb
 2465              		.thumb_func
 2466              		.fpu softvfp
 2468              	_ZL19UART_EndTransmit_ITP18UART_HandleTypeDef:
 2469              		.fnstart
 2470              	.LFB116:
2385:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
 2471              		.loc 1 2385 0
 2472              		.cfi_startproc
 2473              		@ args = 0, pretend = 0, frame = 0
 2474              		@ frame_needed = 0, uses_anonymous_args = 0
 2475              	.LVL216:
 2476 0000 08B5     		push	{r3, lr}
 2477              		.save {r3, lr}
 2478              	.LCFI32:
 2479              		.cfi_def_cfa_offset 8
 2480              		.cfi_offset 3, -8
 2481              		.cfi_offset 14, -4
2387:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 2482              		.loc 1 2387 0
 2483 0002 0168     		ldr	r1, [r0]
 2484 0004 CB68     		ldr	r3, [r1, #12]
 2485 0006 23F04003 		bic	r3, r3, #64
 2486 000a CB60     		str	r3, [r1, #12]
2390:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 2487              		.loc 1 2390 0
 2488 000c 2023     		movs	r3, #32
 2489 000e 80F83930 		strb	r3, [r0, #57]
2391:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 2490              		.loc 1 2391 0
 2491 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2492              	.LVL217:
2394:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2493              		.loc 1 2394 0
 2494 0016 0020     		movs	r0, #0
 2495 0018 08BD     		pop	{r3, pc}
 2496              		.cfi_endproc
 2497              	.LFE116:
 2498              		.fnend
 2500              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2501              		.align	1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 95


 2502              		.weak	HAL_UART_TxHalfCpltCallback
 2503              		.syntax unified
 2504              		.thumb
 2505              		.thumb_func
 2506              		.fpu softvfp
 2508              	HAL_UART_TxHalfCpltCallback:
 2509              		.fnstart
 2510              	.LFB88:
1698:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2511              		.loc 1 1698 0
 2512              		.cfi_startproc
 2513              		@ args = 0, pretend = 0, frame = 0
 2514              		@ frame_needed = 0, uses_anonymous_args = 0
 2515              		@ link register save eliminated.
 2516              	.LVL218:
1704:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2517              		.loc 1 1704 0
 2518 0000 7047     		bx	lr
 2519              		.cfi_endproc
 2520              	.LFE88:
 2521              		.cantunwind
 2522              		.fnend
 2524              		.section	.text._ZL18UART_DMATxHalfCpltP19__DMA_HandleTypeDef,"ax",%progbits
 2525              		.align	1
 2526              		.syntax unified
 2527              		.thumb
 2528              		.thumb_func
 2529              		.fpu softvfp
 2531              	_ZL18UART_DMATxHalfCpltP19__DMA_HandleTypeDef:
 2532              		.fnstart
 2533              	.LFB103:
2056:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2534              		.loc 1 2056 0
 2535              		.cfi_startproc
 2536              		@ args = 0, pretend = 0, frame = 0
 2537              		@ frame_needed = 0, uses_anonymous_args = 0
 2538              	.LVL219:
 2539 0000 08B5     		push	{r3, lr}
 2540              		.save {r3, lr}
 2541              	.LCFI33:
 2542              		.cfi_def_cfa_offset 8
 2543              		.cfi_offset 3, -8
 2544              		.cfi_offset 14, -4
 2545              	.LVL220:
2059:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 2546              		.loc 1 2059 0
 2547 0002 406A     		ldr	r0, [r0, #36]
 2548              	.LVL221:
 2549 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2550              	.LVL222:
2060:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2551              		.loc 1 2060 0
 2552 0008 08BD     		pop	{r3, pc}
 2553              		.cfi_endproc
 2554              	.LFE103:
 2555              		.fnend
 2557              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 96


 2558              		.align	1
 2559              		.weak	HAL_UART_RxCpltCallback
 2560              		.syntax unified
 2561              		.thumb
 2562              		.thumb_func
 2563              		.fpu softvfp
 2565              	HAL_UART_RxCpltCallback:
 2566              		.fnstart
 2567              	.LFB89:
1713:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2568              		.loc 1 1713 0
 2569              		.cfi_startproc
 2570              		@ args = 0, pretend = 0, frame = 0
 2571              		@ frame_needed = 0, uses_anonymous_args = 0
 2572              		@ link register save eliminated.
 2573              	.LVL223:
1719:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2574              		.loc 1 1719 0
 2575 0000 7047     		bx	lr
 2576              		.cfi_endproc
 2577              	.LFE89:
 2578              		.cantunwind
 2579              		.fnend
 2581              		.section	.text._ZL19UART_DMAReceiveCpltP19__DMA_HandleTypeDef,"ax",%progbits
 2582              		.align	1
 2583              		.syntax unified
 2584              		.thumb
 2585              		.thumb_func
 2586              		.fpu softvfp
 2588              	_ZL19UART_DMAReceiveCpltP19__DMA_HandleTypeDef:
 2589              		.fnstart
 2590              	.LFB104:
2068:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2591              		.loc 1 2068 0
 2592              		.cfi_startproc
 2593              		@ args = 0, pretend = 0, frame = 0
 2594              		@ frame_needed = 0, uses_anonymous_args = 0
 2595              	.LVL224:
 2596 0000 08B5     		push	{r3, lr}
 2597              		.save {r3, lr}
 2598              	.LCFI34:
 2599              		.cfi_def_cfa_offset 8
 2600              		.cfi_offset 3, -8
 2601              		.cfi_offset 14, -4
2069:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
 2602              		.loc 1 2069 0
 2603 0002 436A     		ldr	r3, [r0, #36]
 2604              	.LVL225:
2071:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2605              		.loc 1 2071 0
 2606 0004 0268     		ldr	r2, [r0]
 2607 0006 1268     		ldr	r2, [r2]
 2608 0008 12F0200F 		tst	r2, #32
 2609 000c 13D1     		bne	.L185
2073:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 2610              		.loc 1 2073 0
 2611 000e 0022     		movs	r2, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 97


 2612 0010 DA85     		strh	r2, [r3, #46]	@ movhi
2076:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2613              		.loc 1 2076 0
 2614 0012 1968     		ldr	r1, [r3]
 2615 0014 CA68     		ldr	r2, [r1, #12]
 2616 0016 22F48072 		bic	r2, r2, #256
 2617 001a CA60     		str	r2, [r1, #12]
2077:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     
 2618              		.loc 1 2077 0
 2619 001c 1968     		ldr	r1, [r3]
 2620 001e 4A69     		ldr	r2, [r1, #20]
 2621 0020 22F00102 		bic	r2, r2, #1
 2622 0024 4A61     		str	r2, [r1, #20]
2081:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2623              		.loc 1 2081 0
 2624 0026 1968     		ldr	r1, [r3]
 2625 0028 4A69     		ldr	r2, [r1, #20]
 2626 002a 22F04002 		bic	r2, r2, #64
 2627 002e 4A61     		str	r2, [r1, #20]
2084:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 2628              		.loc 1 2084 0
 2629 0030 2022     		movs	r2, #32
 2630 0032 83F83A20 		strb	r2, [r3, #58]
 2631              	.L185:
2086:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 2632              		.loc 1 2086 0
 2633 0036 1846     		mov	r0, r3
 2634              	.LVL226:
 2635 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2636              	.LVL227:
2087:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2637              		.loc 1 2087 0
 2638 003c 08BD     		pop	{r3, pc}
 2639              		.cfi_endproc
 2640              	.LFE104:
 2641              		.fnend
 2643              		.section	.text._ZL15UART_Receive_ITP18UART_HandleTypeDef,"ax",%progbits
 2644              		.align	1
 2645              		.syntax unified
 2646              		.thumb
 2647              		.thumb_func
 2648              		.fpu softvfp
 2650              	_ZL15UART_Receive_ITP18UART_HandleTypeDef:
 2651              		.fnstart
 2652              	.LFB117:
2403:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 2653              		.loc 1 2403 0
 2654              		.cfi_startproc
 2655              		@ args = 0, pretend = 0, frame = 0
 2656              		@ frame_needed = 0, uses_anonymous_args = 0
 2657              	.LVL228:
 2658 0000 08B5     		push	{r3, lr}
 2659              		.save {r3, lr}
 2660              	.LCFI35:
 2661              		.cfi_def_cfa_offset 8
 2662              		.cfi_offset 3, -8
 2663              		.cfi_offset 14, -4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 98


2407:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2664              		.loc 1 2407 0
 2665 0002 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2666 0006 DBB2     		uxtb	r3, r3
 2667 0008 222B     		cmp	r3, #34
 2668 000a 45D1     		bne	.L193
2409:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 2669              		.loc 1 2409 0
 2670 000c 8368     		ldr	r3, [r0, #8]
 2671 000e B3F5805F 		cmp	r3, #4096
 2672 0012 0ED0     		beq	.L196
2425:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 2673              		.loc 1 2425 0
 2674 0014 0369     		ldr	r3, [r0, #16]
 2675 0016 03BB     		cbnz	r3, .L192
2427:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 2676              		.loc 1 2427 0
 2677 0018 0368     		ldr	r3, [r0]
 2678 001a 5A68     		ldr	r2, [r3, #4]
 2679 001c 836A     		ldr	r3, [r0, #40]
 2680 001e 591C     		adds	r1, r3, #1
 2681 0020 8162     		str	r1, [r0, #40]
 2682 0022 1A70     		strb	r2, [r3]
 2683              	.L191:
2435:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 2684              		.loc 1 2435 0
 2685 0024 C38D     		ldrh	r3, [r0, #46]
 2686 0026 013B     		subs	r3, r3, #1
 2687 0028 9BB2     		uxth	r3, r3
 2688 002a C385     		strh	r3, [r0, #46]	@ movhi
 2689 002c F3B1     		cbz	r3, .L197
2452:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 2690              		.loc 1 2452 0
 2691 002e 0020     		movs	r0, #0
 2692              	.LVL229:
 2693 0030 33E0     		b	.L188
 2694              	.LVL230:
 2695              	.L196:
2411:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 2696              		.loc 1 2411 0
 2697 0032 826A     		ldr	r2, [r0, #40]
 2698              	.LVL231:
2412:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 2699              		.loc 1 2412 0
 2700 0034 0369     		ldr	r3, [r0, #16]
 2701 0036 43B9     		cbnz	r3, .L190
2414:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 2702              		.loc 1 2414 0
 2703 0038 0368     		ldr	r3, [r0]
 2704 003a 5B68     		ldr	r3, [r3, #4]
 2705 003c C3F30803 		ubfx	r3, r3, #0, #9
 2706 0040 1380     		strh	r3, [r2]	@ movhi
2415:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 2707              		.loc 1 2415 0
 2708 0042 836A     		ldr	r3, [r0, #40]
 2709 0044 0233     		adds	r3, r3, #2
 2710 0046 8362     		str	r3, [r0, #40]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 99


 2711 0048 ECE7     		b	.L191
 2712              	.L190:
2419:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 2713              		.loc 1 2419 0
 2714 004a 0368     		ldr	r3, [r0]
 2715 004c 5B68     		ldr	r3, [r3, #4]
 2716 004e DBB2     		uxtb	r3, r3
 2717 0050 1380     		strh	r3, [r2]	@ movhi
2420:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 2718              		.loc 1 2420 0
 2719 0052 836A     		ldr	r3, [r0, #40]
 2720 0054 0133     		adds	r3, r3, #1
 2721 0056 8362     		str	r3, [r0, #40]
 2722 0058 E4E7     		b	.L191
 2723              	.LVL232:
 2724              	.L192:
2431:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 2725              		.loc 1 2431 0
 2726 005a 0368     		ldr	r3, [r0]
 2727 005c 5B68     		ldr	r3, [r3, #4]
 2728 005e 826A     		ldr	r2, [r0, #40]
 2729 0060 511C     		adds	r1, r2, #1
 2730 0062 8162     		str	r1, [r0, #40]
 2731 0064 03F07F03 		and	r3, r3, #127
 2732 0068 1370     		strb	r3, [r2]
 2733 006a DBE7     		b	.L191
 2734              	.L197:
2438:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2735              		.loc 1 2438 0 discriminator 1
 2736 006c 0268     		ldr	r2, [r0]
 2737 006e D368     		ldr	r3, [r2, #12]
 2738 0070 23F02003 		bic	r3, r3, #32
 2739 0074 D360     		str	r3, [r2, #12]
2441:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 2740              		.loc 1 2441 0 discriminator 1
 2741 0076 0268     		ldr	r2, [r0]
 2742 0078 D368     		ldr	r3, [r2, #12]
 2743 007a 23F48073 		bic	r3, r3, #256
 2744 007e D360     		str	r3, [r2, #12]
2443:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2745              		.loc 1 2443 0 discriminator 1
 2746 0080 0268     		ldr	r2, [r0]
 2747 0082 5369     		ldr	r3, [r2, #20]
 2748 0084 23F00103 		bic	r3, r3, #1
 2749 0088 5361     		str	r3, [r2, #20]
2446:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2750              		.loc 1 2446 0 discriminator 1
 2751 008a 2023     		movs	r3, #32
 2752 008c 80F83A30 		strb	r3, [r0, #58]
2448:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2753              		.loc 1 2448 0 discriminator 1
 2754 0090 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2755              	.LVL233:
2450:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 2756              		.loc 1 2450 0 discriminator 1
 2757 0094 0020     		movs	r0, #0
 2758 0096 00E0     		b	.L188
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 100


 2759              	.LVL234:
 2760              	.L193:
2456:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 2761              		.loc 1 2456 0
 2762 0098 0220     		movs	r0, #2
 2763              	.LVL235:
 2764              	.L188:
2458:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2765              		.loc 1 2458 0
 2766 009a 08BD     		pop	{r3, pc}
 2767              		.cfi_endproc
 2768              	.LFE117:
 2769              		.fnend
 2771              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2772              		.align	1
 2773              		.weak	HAL_UART_RxHalfCpltCallback
 2774              		.syntax unified
 2775              		.thumb
 2776              		.thumb_func
 2777              		.fpu softvfp
 2779              	HAL_UART_RxHalfCpltCallback:
 2780              		.fnstart
 2781              	.LFB90:
1728:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2782              		.loc 1 1728 0
 2783              		.cfi_startproc
 2784              		@ args = 0, pretend = 0, frame = 0
 2785              		@ frame_needed = 0, uses_anonymous_args = 0
 2786              		@ link register save eliminated.
 2787              	.LVL236:
1734:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2788              		.loc 1 1734 0
 2789 0000 7047     		bx	lr
 2790              		.cfi_endproc
 2791              	.LFE90:
 2792              		.cantunwind
 2793              		.fnend
 2795              		.section	.text._ZL18UART_DMARxHalfCpltP19__DMA_HandleTypeDef,"ax",%progbits
 2796              		.align	1
 2797              		.syntax unified
 2798              		.thumb
 2799              		.thumb_func
 2800              		.fpu softvfp
 2802              	_ZL18UART_DMARxHalfCpltP19__DMA_HandleTypeDef:
 2803              		.fnstart
 2804              	.LFB105:
2096:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2805              		.loc 1 2096 0
 2806              		.cfi_startproc
 2807              		@ args = 0, pretend = 0, frame = 0
 2808              		@ frame_needed = 0, uses_anonymous_args = 0
 2809              	.LVL237:
 2810 0000 08B5     		push	{r3, lr}
 2811              		.save {r3, lr}
 2812              	.LCFI36:
 2813              		.cfi_def_cfa_offset 8
 2814              		.cfi_offset 3, -8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 101


 2815              		.cfi_offset 14, -4
 2816              	.LVL238:
2098:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 2817              		.loc 1 2098 0
 2818 0002 406A     		ldr	r0, [r0, #36]
 2819              	.LVL239:
 2820 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2821              	.LVL240:
2099:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2822              		.loc 1 2099 0
 2823 0008 08BD     		pop	{r3, pc}
 2824              		.cfi_endproc
 2825              	.LFE105:
 2826              		.fnend
 2828              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2829              		.align	1
 2830              		.weak	HAL_UART_ErrorCallback
 2831              		.syntax unified
 2832              		.thumb
 2833              		.thumb_func
 2834              		.fpu softvfp
 2836              	HAL_UART_ErrorCallback:
 2837              		.fnstart
 2838              	.LFB91:
1743:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2839              		.loc 1 1743 0
 2840              		.cfi_startproc
 2841              		@ args = 0, pretend = 0, frame = 0
 2842              		@ frame_needed = 0, uses_anonymous_args = 0
 2843              		@ link register save eliminated.
 2844              	.LVL241:
1749:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2845              		.loc 1 1749 0
 2846 0000 7047     		bx	lr
 2847              		.cfi_endproc
 2848              	.LFE91:
 2849              		.cantunwind
 2850              		.fnend
 2852              		.section	.text._ZL13UART_DMAErrorP19__DMA_HandleTypeDef,"ax",%progbits
 2853              		.align	1
 2854              		.syntax unified
 2855              		.thumb
 2856              		.thumb_func
 2857              		.fpu softvfp
 2859              	_ZL13UART_DMAErrorP19__DMA_HandleTypeDef:
 2860              		.fnstart
 2861              	.LFB106:
2107:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2862              		.loc 1 2107 0
 2863              		.cfi_startproc
 2864              		@ args = 0, pretend = 0, frame = 0
 2865              		@ frame_needed = 0, uses_anonymous_args = 0
 2866              	.LVL242:
 2867 0000 10B5     		push	{r4, lr}
 2868              		.save {r4, lr}
 2869              	.LCFI37:
 2870              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 102


 2871              		.cfi_offset 4, -8
 2872              		.cfi_offset 14, -4
 2873              	.LVL243:
2109:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2874              		.loc 1 2109 0
 2875 0002 446A     		ldr	r4, [r0, #36]
 2876              	.LVL244:
2112:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2877              		.loc 1 2112 0
 2878 0004 2368     		ldr	r3, [r4]
 2879 0006 5A69     		ldr	r2, [r3, #20]
 2880              	.LVL245:
2113:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2881              		.loc 1 2113 0
 2882 0008 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 2883 000c DBB2     		uxtb	r3, r3
 2884 000e 212B     		cmp	r3, #33
 2885 0010 10D0     		beq	.L206
 2886              	.LVL246:
 2887              	.L203:
2120:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2888              		.loc 1 2120 0
 2889 0012 2368     		ldr	r3, [r4]
 2890 0014 5A69     		ldr	r2, [r3, #20]
 2891 0016 02F04002 		and	r2, r2, #64
 2892              	.LVL247:
2121:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2893              		.loc 1 2121 0
 2894 001a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2895 001e DBB2     		uxtb	r3, r3
 2896 0020 222B     		cmp	r3, #34
 2897 0022 11D0     		beq	.L207
 2898              	.LVL248:
 2899              	.L204:
2127:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 2900              		.loc 1 2127 0
 2901 0024 E36B     		ldr	r3, [r4, #60]
 2902 0026 43F01003 		orr	r3, r3, #16
 2903 002a E363     		str	r3, [r4, #60]
2128:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 2904              		.loc 1 2128 0
 2905 002c 2046     		mov	r0, r4
 2906 002e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2907              	.LVL249:
2129:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 2908              		.loc 1 2129 0
 2909 0032 10BD     		pop	{r4, pc}
 2910              	.LVL250:
 2911              	.L206:
 2912 0034 02F08002 		and	r2, r2, #128
 2913              	.LVL251:
2113:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2914              		.loc 1 2113 0 discriminator 1
 2915 0038 002A     		cmp	r2, #0
 2916 003a EAD0     		beq	.L203
2115:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2917              		.loc 1 2115 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 103


 2918 003c 0023     		movs	r3, #0
 2919 003e E384     		strh	r3, [r4, #38]	@ movhi
2116:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 2920              		.loc 1 2116 0
 2921 0040 2046     		mov	r0, r4
 2922              	.LVL252:
 2923 0042 FFF7FEFF 		bl	_ZL18UART_EndTxTransferP18UART_HandleTypeDef
 2924              	.LVL253:
 2925 0046 E4E7     		b	.L203
 2926              	.LVL254:
 2927              	.L207:
2121:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2928              		.loc 1 2121 0 discriminator 1
 2929 0048 002A     		cmp	r2, #0
 2930 004a EBD0     		beq	.L204
2123:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2931              		.loc 1 2123 0
 2932 004c 0023     		movs	r3, #0
 2933 004e E385     		strh	r3, [r4, #46]	@ movhi
2124:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 2934              		.loc 1 2124 0
 2935 0050 2046     		mov	r0, r4
 2936 0052 FFF7FEFF 		bl	_ZL18UART_EndRxTransferP18UART_HandleTypeDef
 2937              	.LVL255:
 2938 0056 E5E7     		b	.L204
 2939              		.cfi_endproc
 2940              	.LFE106:
 2941              		.fnend
 2943              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2944              		.align	1
 2945              		.global	HAL_UART_IRQHandler
 2946              		.syntax unified
 2947              		.thumb
 2948              		.thumb_func
 2949              		.fpu softvfp
 2951              	HAL_UART_IRQHandler:
 2952              		.fnstart
 2953              	.LFB86:
1556:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2954              		.loc 1 1556 0
 2955              		.cfi_startproc
 2956              		@ args = 0, pretend = 0, frame = 0
 2957              		@ frame_needed = 0, uses_anonymous_args = 0
 2958              	.LVL256:
 2959 0000 10B5     		push	{r4, lr}
 2960              		.save {r4, lr}
 2961              	.LCFI38:
 2962              		.cfi_def_cfa_offset 8
 2963              		.cfi_offset 4, -8
 2964              		.cfi_offset 14, -4
 2965 0002 0446     		mov	r4, r0
1557:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2966              		.loc 1 1557 0
 2967 0004 0268     		ldr	r2, [r0]
 2968 0006 1368     		ldr	r3, [r2]
 2969              	.LVL257:
1558:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 104


 2970              		.loc 1 1558 0
 2971 0008 D168     		ldr	r1, [r2, #12]
 2972              	.LVL258:
1559:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
 2973              		.loc 1 1559 0
 2974 000a 5269     		ldr	r2, [r2, #20]
 2975              	.LVL259:
1565:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2976              		.loc 1 1565 0
 2977 000c 13F00F00 		ands	r0, r3, #15
 2978              	.LVL260:
 2979 0010 05D1     		bne	.L209
1568:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 2980              		.loc 1 1568 0
 2981 0012 13F0200F 		tst	r3, #32
 2982 0016 02D0     		beq	.L209
1568:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 2983              		.loc 1 1568 0 is_stmt 0 discriminator 1
 2984 0018 11F0200F 		tst	r1, #32
 2985 001c 53D1     		bne	.L223
 2986              	.L209:
1576:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2987              		.loc 1 1576 0 is_stmt 1
 2988 001e 0028     		cmp	r0, #0
 2989 0020 67D0     		beq	.L211
1576:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2990              		.loc 1 1576 0 is_stmt 0 discriminator 1
 2991 0022 12F00102 		ands	r2, r2, #1
 2992              	.LVL261:
 2993 0026 02D1     		bne	.L212
1576:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 2994              		.loc 1 1576 0 discriminator 2
 2995 0028 11F4907F 		tst	r1, #288
 2996 002c 61D0     		beq	.L211
 2997              	.L212:
1579:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 2998              		.loc 1 1579 0 is_stmt 1
 2999 002e 13F0010F 		tst	r3, #1
 3000 0032 06D0     		beq	.L213
1579:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 3001              		.loc 1 1579 0 is_stmt 0 discriminator 1
 3002 0034 11F4807F 		tst	r1, #256
 3003 0038 03D0     		beq	.L213
1581:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 3004              		.loc 1 1581 0 is_stmt 1
 3005 003a E06B     		ldr	r0, [r4, #60]
 3006              	.LVL262:
 3007 003c 40F00100 		orr	r0, r0, #1
 3008 0040 E063     		str	r0, [r4, #60]
 3009              	.L213:
1585:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 3010              		.loc 1 1585 0
 3011 0042 13F0040F 		tst	r3, #4
 3012 0046 04D0     		beq	.L214
1585:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 3013              		.loc 1 1585 0 is_stmt 0 discriminator 1
 3014 0048 1AB1     		cbz	r2, .L214
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 105


1587:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 3015              		.loc 1 1587 0 is_stmt 1
 3016 004a E06B     		ldr	r0, [r4, #60]
 3017 004c 40F00200 		orr	r0, r0, #2
 3018 0050 E063     		str	r0, [r4, #60]
 3019              	.L214:
1591:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 3020              		.loc 1 1591 0
 3021 0052 13F0020F 		tst	r3, #2
 3022 0056 04D0     		beq	.L215
1591:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 3023              		.loc 1 1591 0 is_stmt 0 discriminator 1
 3024 0058 1AB1     		cbz	r2, .L215
1593:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 3025              		.loc 1 1593 0 is_stmt 1
 3026 005a E06B     		ldr	r0, [r4, #60]
 3027 005c 40F00400 		orr	r0, r0, #4
 3028 0060 E063     		str	r0, [r4, #60]
 3029              	.L215:
1597:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     { 
 3030              		.loc 1 1597 0
 3031 0062 13F0080F 		tst	r3, #8
 3032 0066 04D0     		beq	.L216
1597:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     { 
 3033              		.loc 1 1597 0 is_stmt 0 discriminator 1
 3034 0068 1AB1     		cbz	r2, .L216
1599:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 3035              		.loc 1 1599 0 is_stmt 1
 3036 006a E26B     		ldr	r2, [r4, #60]
 3037 006c 42F00802 		orr	r2, r2, #8
 3038 0070 E263     		str	r2, [r4, #60]
 3039              	.L216:
1603:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 3040              		.loc 1 1603 0
 3041 0072 E26B     		ldr	r2, [r4, #60]
 3042 0074 002A     		cmp	r2, #0
 3043 0076 48D0     		beq	.L208
1606:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 3044              		.loc 1 1606 0
 3045 0078 13F0200F 		tst	r3, #32
 3046 007c 02D0     		beq	.L217
1606:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 3047              		.loc 1 1606 0 is_stmt 0 discriminator 1
 3048 007e 11F0200F 		tst	r1, #32
 3049 0082 24D1     		bne	.L224
 3050              	.LVL263:
 3051              	.L217:
1613:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 3052              		.loc 1 1613 0 is_stmt 1
 3053 0084 2368     		ldr	r3, [r4]
 3054 0086 5B69     		ldr	r3, [r3, #20]
 3055 0088 03F04003 		and	r3, r3, #64
 3056              	.LVL264:
1614:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 3057              		.loc 1 1614 0
 3058 008c E26B     		ldr	r2, [r4, #60]
 3059 008e 12F0080F 		tst	r2, #8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 106


 3060 0092 00D1     		bne	.L218
1614:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 3061              		.loc 1 1614 0 is_stmt 0 discriminator 2
 3062 0094 FBB1     		cbz	r3, .L225
 3063              	.L218:
1619:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3064              		.loc 1 1619 0 is_stmt 1
 3065 0096 2046     		mov	r0, r4
 3066 0098 FFF7FEFF 		bl	_ZL18UART_EndRxTransferP18UART_HandleTypeDef
 3067              	.LVL265:
1622:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         {
 3068              		.loc 1 1622 0
 3069 009c 2368     		ldr	r3, [r4]
 3070 009e 5A69     		ldr	r2, [r3, #20]
 3071 00a0 12F0400F 		tst	r2, #64
 3072 00a4 21D0     		beq	.L219
1624:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3073              		.loc 1 1624 0
 3074 00a6 5A69     		ldr	r2, [r3, #20]
 3075 00a8 22F04002 		bic	r2, r2, #64
 3076 00ac 5A61     		str	r2, [r3, #20]
1627:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           {
 3077              		.loc 1 1627 0
 3078 00ae 636B     		ldr	r3, [r4, #52]
 3079 00b0 BBB1     		cbz	r3, .L220
1631:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3080              		.loc 1 1631 0
 3081 00b2 1A4A     		ldr	r2, .L228
 3082 00b4 5A63     		str	r2, [r3, #52]
1632:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             {
 3083              		.loc 1 1632 0
 3084 00b6 606B     		ldr	r0, [r4, #52]
 3085 00b8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3086              	.LVL266:
 3087 00bc 28B3     		cbz	r0, .L208
1635:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****             }
 3088              		.loc 1 1635 0
 3089 00be 606B     		ldr	r0, [r4, #52]
 3090 00c0 436B     		ldr	r3, [r0, #52]
 3091 00c2 9847     		blx	r3
 3092              	.LVL267:
 3093 00c4 21E0     		b	.L208
 3094              	.LVL268:
 3095              	.L223:
1570:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       return;
 3096              		.loc 1 1570 0
 3097 00c6 2046     		mov	r0, r4
 3098              	.LVL269:
 3099 00c8 FFF7FEFF 		bl	_ZL15UART_Receive_ITP18UART_HandleTypeDef
 3100              	.LVL270:
1571:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 3101              		.loc 1 1571 0
 3102 00cc 1DE0     		b	.L208
 3103              	.LVL271:
 3104              	.L224:
1608:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 3105              		.loc 1 1608 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 107


 3106 00ce 2046     		mov	r0, r4
 3107 00d0 FFF7FEFF 		bl	_ZL15UART_Receive_ITP18UART_HandleTypeDef
 3108              	.LVL272:
 3109 00d4 D6E7     		b	.L217
 3110              	.LVL273:
 3111              	.L225:
1654:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3112              		.loc 1 1654 0
 3113 00d6 2046     		mov	r0, r4
 3114 00d8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3115              	.LVL274:
1655:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 3116              		.loc 1 1655 0
 3117 00dc 0023     		movs	r3, #0
 3118 00de E363     		str	r3, [r4, #60]
 3119 00e0 13E0     		b	.L208
 3120              	.L220:
1641:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****           }
 3121              		.loc 1 1641 0
 3122 00e2 2046     		mov	r0, r4
 3123 00e4 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3124              	.LVL275:
 3125 00e8 0FE0     		b	.L208
 3126              	.L219:
1647:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         }
 3127              		.loc 1 1647 0
 3128 00ea 2046     		mov	r0, r4
 3129 00ec FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3130              	.LVL276:
 3131 00f0 0BE0     		b	.L208
 3132              	.LVL277:
 3133              	.L211:
1662:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 3134              		.loc 1 1662 0
 3135 00f2 13F0800F 		tst	r3, #128
 3136 00f6 02D0     		beq	.L221
1662:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 3137              		.loc 1 1662 0 is_stmt 0 discriminator 1
 3138 00f8 11F0800F 		tst	r1, #128
 3139 00fc 06D1     		bne	.L226
 3140              	.L221:
1669:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 3141              		.loc 1 1669 0 is_stmt 1
 3142 00fe 13F0400F 		tst	r3, #64
 3143 0102 02D0     		beq	.L208
1669:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 3144              		.loc 1 1669 0 is_stmt 0 discriminator 1
 3145 0104 11F0400F 		tst	r1, #64
 3146 0108 04D1     		bne	.L227
 3147              	.LVL278:
 3148              	.L208:
1674:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3149              		.loc 1 1674 0 is_stmt 1
 3150 010a 10BD     		pop	{r4, pc}
 3151              	.LVL279:
 3152              	.L226:
1664:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 108


 3153              		.loc 1 1664 0
 3154 010c 2046     		mov	r0, r4
 3155              	.LVL280:
 3156 010e FFF7FEFF 		bl	_ZL16UART_Transmit_ITP18UART_HandleTypeDef
 3157              	.LVL281:
1665:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 3158              		.loc 1 1665 0
 3159 0112 FAE7     		b	.L208
 3160              	.LVL282:
 3161              	.L227:
1671:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     return;
 3162              		.loc 1 1671 0
 3163 0114 2046     		mov	r0, r4
 3164              	.LVL283:
 3165 0116 FFF7FEFF 		bl	_ZL19UART_EndTransmit_ITP18UART_HandleTypeDef
 3166              	.LVL284:
1672:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 3167              		.loc 1 1672 0
 3168 011a F6E7     		b	.L208
 3169              	.L229:
 3170              		.align	2
 3171              	.L228:
 3172 011c 00000000 		.word	_ZL20UART_DMAAbortOnErrorP19__DMA_HandleTypeDef
 3173              		.cfi_endproc
 3174              	.LFE86:
 3175              		.fnend
 3177              		.section	.text._ZL20UART_DMAAbortOnErrorP19__DMA_HandleTypeDef,"ax",%progbits
 3178              		.align	1
 3179              		.syntax unified
 3180              		.thumb
 3181              		.thumb_func
 3182              		.fpu softvfp
 3184              	_ZL20UART_DMAAbortOnErrorP19__DMA_HandleTypeDef:
 3185              		.fnstart
 3186              	.LFB110:
2205:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3187              		.loc 1 2205 0
 3188              		.cfi_startproc
 3189              		@ args = 0, pretend = 0, frame = 0
 3190              		@ frame_needed = 0, uses_anonymous_args = 0
 3191              	.LVL285:
 3192 0000 08B5     		push	{r3, lr}
 3193              		.save {r3, lr}
 3194              	.LCFI39:
 3195              		.cfi_def_cfa_offset 8
 3196              		.cfi_offset 3, -8
 3197              		.cfi_offset 14, -4
2206:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3198              		.loc 1 2206 0
 3199 0002 406A     		ldr	r0, [r0, #36]
 3200              	.LVL286:
2207:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3201              		.loc 1 2207 0
 3202 0004 0023     		movs	r3, #0
 3203 0006 C385     		strh	r3, [r0, #46]	@ movhi
2208:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3204              		.loc 1 2208 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 109


 3205 0008 C384     		strh	r3, [r0, #38]	@ movhi
2210:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 3206              		.loc 1 2210 0
 3207 000a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3208              	.LVL287:
2211:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3209              		.loc 1 2211 0
 3210 000e 08BD     		pop	{r3, pc}
 3211              		.cfi_endproc
 3212              	.LFE110:
 3213              		.fnend
 3215              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3216              		.align	1
 3217              		.weak	HAL_UART_AbortCpltCallback
 3218              		.syntax unified
 3219              		.thumb
 3220              		.thumb_func
 3221              		.fpu softvfp
 3223              	HAL_UART_AbortCpltCallback:
 3224              		.fnstart
 3225              	.LFB92:
1757:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3226              		.loc 1 1757 0
 3227              		.cfi_startproc
 3228              		@ args = 0, pretend = 0, frame = 0
 3229              		@ frame_needed = 0, uses_anonymous_args = 0
 3230              		@ link register save eliminated.
 3231              	.LVL288:
1764:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** /**
 3232              		.loc 1 1764 0
 3233 0000 7047     		bx	lr
 3234              		.cfi_endproc
 3235              	.LFE92:
 3236              		.cantunwind
 3237              		.fnend
 3239              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3240              		.align	1
 3241              		.global	HAL_UART_Abort_IT
 3242              		.syntax unified
 3243              		.thumb
 3244              		.thumb_func
 3245              		.fpu softvfp
 3247              	HAL_UART_Abort_IT:
 3248              		.fnstart
 3249              	.LFB83:
1311:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3250              		.loc 1 1311 0
 3251              		.cfi_startproc
 3252              		@ args = 0, pretend = 0, frame = 0
 3253              		@ frame_needed = 0, uses_anonymous_args = 0
 3254              	.LVL289:
 3255 0000 10B5     		push	{r4, lr}
 3256              		.save {r4, lr}
 3257              	.LCFI40:
 3258              		.cfi_def_cfa_offset 8
 3259              		.cfi_offset 4, -8
 3260              		.cfi_offset 14, -4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 110


 3261 0002 0446     		mov	r4, r0
 3262              	.LVL290:
1315:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3263              		.loc 1 1315 0
 3264 0004 0268     		ldr	r2, [r0]
 3265 0006 D368     		ldr	r3, [r2, #12]
 3266 0008 23F4F073 		bic	r3, r3, #480
 3267 000c D360     		str	r3, [r2, #12]
1316:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3268              		.loc 1 1316 0
 3269 000e 0268     		ldr	r2, [r0]
 3270 0010 5369     		ldr	r3, [r2, #20]
 3271 0012 23F00103 		bic	r3, r3, #1
 3272 0016 5361     		str	r3, [r2, #20]
1321:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 3273              		.loc 1 1321 0
 3274 0018 036B     		ldr	r3, [r0, #48]
 3275 001a 33B1     		cbz	r3, .L234
1325:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 3276              		.loc 1 1325 0
 3277 001c 0268     		ldr	r2, [r0]
 3278 001e 5269     		ldr	r2, [r2, #20]
 3279 0020 12F0800F 		tst	r2, #128
 3280 0024 1DD0     		beq	.L235
1327:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 3281              		.loc 1 1327 0
 3282 0026 254A     		ldr	r2, .L246
 3283 0028 5A63     		str	r2, [r3, #52]
 3284              	.L234:
1335:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 3285              		.loc 1 1335 0
 3286 002a 636B     		ldr	r3, [r4, #52]
 3287 002c 33B1     		cbz	r3, .L236
1339:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 3288              		.loc 1 1339 0
 3289 002e 2268     		ldr	r2, [r4]
 3290 0030 5269     		ldr	r2, [r2, #20]
 3291 0032 12F0400F 		tst	r2, #64
 3292 0036 17D0     		beq	.L237
1341:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 3293              		.loc 1 1341 0
 3294 0038 214A     		ldr	r2, .L246+4
 3295 003a 5A63     		str	r2, [r3, #52]
 3296              	.L236:
1350:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 3297              		.loc 1 1350 0
 3298 003c 2368     		ldr	r3, [r4]
 3299 003e 5A69     		ldr	r2, [r3, #20]
 3300 0040 12F0800F 		tst	r2, #128
 3301 0044 13D0     		beq	.L242
1353:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3302              		.loc 1 1353 0
 3303 0046 5A69     		ldr	r2, [r3, #20]
 3304 0048 22F08002 		bic	r2, r2, #128
 3305 004c 5A61     		str	r2, [r3, #20]
1356:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 3306              		.loc 1 1356 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 111


 3307 004e 206B     		ldr	r0, [r4, #48]
 3308              	.LVL291:
 3309 0050 60B3     		cbz	r0, .L243
1362:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 3310              		.loc 1 1362 0
 3311 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3312              	.LVL292:
 3313 0056 58B3     		cbz	r0, .L244
1364:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 3314              		.loc 1 1364 0
 3315 0058 236B     		ldr	r3, [r4, #48]
 3316 005a 0022     		movs	r2, #0
 3317 005c 5A63     		str	r2, [r3, #52]
1312:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3318              		.loc 1 1312 0
 3319 005e 0121     		movs	r1, #1
 3320 0060 06E0     		b	.L238
 3321              	.LVL293:
 3322              	.L235:
1331:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 3323              		.loc 1 1331 0
 3324 0062 0022     		movs	r2, #0
 3325 0064 5A63     		str	r2, [r3, #52]
 3326 0066 E0E7     		b	.L234
 3327              	.L237:
1345:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 3328              		.loc 1 1345 0
 3329 0068 0022     		movs	r2, #0
 3330 006a 5A63     		str	r2, [r3, #52]
 3331 006c E6E7     		b	.L236
 3332              	.L242:
1312:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3333              		.loc 1 1312 0
 3334 006e 0121     		movs	r1, #1
 3335              	.LVL294:
 3336              	.L238:
1374:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 3337              		.loc 1 1374 0
 3338 0070 2368     		ldr	r3, [r4]
 3339 0072 5A69     		ldr	r2, [r3, #20]
 3340 0074 12F0400F 		tst	r2, #64
 3341 0078 1CD0     		beq	.L239
1376:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3342              		.loc 1 1376 0
 3343 007a 5A69     		ldr	r2, [r3, #20]
 3344 007c 22F04002 		bic	r2, r2, #64
 3345 0080 5A61     		str	r2, [r3, #20]
1379:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 3346              		.loc 1 1379 0
 3347 0082 606B     		ldr	r0, [r4, #52]
 3348 0084 B0B1     		cbz	r0, .L239
1385:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 3349              		.loc 1 1385 0
 3350 0086 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3351              	.LVL295:
 3352 008a A8B1     		cbz	r0, .L240
1387:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****         AbortCplt = 0x01U;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 112


 3353              		.loc 1 1387 0
 3354 008c 636B     		ldr	r3, [r4, #52]
 3355 008e 0022     		movs	r2, #0
 3356 0090 5A63     		str	r2, [r3, #52]
 3357              	.LVL296:
 3358              	.L241:
1401:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3359              		.loc 1 1401 0
 3360 0092 0023     		movs	r3, #0
 3361 0094 E384     		strh	r3, [r4, #38]	@ movhi
1402:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3362              		.loc 1 1402 0
 3363 0096 E385     		strh	r3, [r4, #46]	@ movhi
1405:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3364              		.loc 1 1405 0
 3365 0098 E363     		str	r3, [r4, #60]
1408:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3366              		.loc 1 1408 0
 3367 009a 2023     		movs	r3, #32
 3368 009c 84F83930 		strb	r3, [r4, #57]
1409:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3369              		.loc 1 1409 0
 3370 00a0 84F83A30 		strb	r3, [r4, #58]
1412:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 3371              		.loc 1 1412 0
 3372 00a4 2046     		mov	r0, r4
 3373 00a6 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3374              	.LVL297:
 3375 00aa 05E0     		b	.L240
 3376              	.LVL298:
 3377              	.L243:
1312:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3378              		.loc 1 1312 0
 3379 00ac 0121     		movs	r1, #1
 3380 00ae DFE7     		b	.L238
 3381              	.L244:
1368:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 3382              		.loc 1 1368 0
 3383 00b0 0021     		movs	r1, #0
 3384 00b2 DDE7     		b	.L238
 3385              	.LVL299:
 3386              	.L239:
1398:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 3387              		.loc 1 1398 0
 3388 00b4 0029     		cmp	r1, #0
 3389 00b6 ECD1     		bne	.L241
 3390              	.LVL300:
 3391              	.L240:
1416:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3392              		.loc 1 1416 0
 3393 00b8 0020     		movs	r0, #0
 3394 00ba 10BD     		pop	{r4, pc}
 3395              	.LVL301:
 3396              	.L247:
 3397              		.align	2
 3398              	.L246:
 3399 00bc 00000000 		.word	_ZL23UART_DMATxAbortCallbackP19__DMA_HandleTypeDef
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 113


 3400 00c0 00000000 		.word	_ZL23UART_DMARxAbortCallbackP19__DMA_HandleTypeDef
 3401              		.cfi_endproc
 3402              	.LFE83:
 3403              		.fnend
 3405              		.section	.text._ZL23UART_DMARxAbortCallbackP19__DMA_HandleTypeDef,"ax",%progbits
 3406              		.align	1
 3407              		.syntax unified
 3408              		.thumb
 3409              		.thumb_func
 3410              		.fpu softvfp
 3412              	_ZL23UART_DMARxAbortCallbackP19__DMA_HandleTypeDef:
 3413              		.fnstart
 3414              	.LFB112:
2260:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3415              		.loc 1 2260 0
 3416              		.cfi_startproc
 3417              		@ args = 0, pretend = 0, frame = 0
 3418              		@ frame_needed = 0, uses_anonymous_args = 0
 3419              	.LVL302:
 3420 0000 08B5     		push	{r3, lr}
 3421              		.save {r3, lr}
 3422              	.LCFI41:
 3423              		.cfi_def_cfa_offset 8
 3424              		.cfi_offset 3, -8
 3425              		.cfi_offset 14, -4
2261:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3426              		.loc 1 2261 0
 3427 0002 406A     		ldr	r0, [r0, #36]
 3428              	.LVL303:
2263:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3429              		.loc 1 2263 0
 3430 0004 436B     		ldr	r3, [r0, #52]
 3431 0006 0022     		movs	r2, #0
 3432 0008 5A63     		str	r2, [r3, #52]
2266:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 3433              		.loc 1 2266 0
 3434 000a 036B     		ldr	r3, [r0, #48]
 3435 000c 13B1     		cbz	r3, .L249
2268:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 3436              		.loc 1 2268 0
 3437 000e 5B6B     		ldr	r3, [r3, #52]
 3438 0010 03B1     		cbz	r3, .L249
 3439              	.LVL304:
 3440              	.L248:
2287:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3441              		.loc 1 2287 0
 3442 0012 08BD     		pop	{r3, pc}
 3443              	.LVL305:
 3444              	.L249:
2275:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3445              		.loc 1 2275 0
 3446 0014 0023     		movs	r3, #0
 3447 0016 C384     		strh	r3, [r0, #38]	@ movhi
2276:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3448              		.loc 1 2276 0
 3449 0018 C385     		strh	r3, [r0, #46]	@ movhi
2279:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 114


 3450              		.loc 1 2279 0
 3451 001a C363     		str	r3, [r0, #60]
2282:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3452              		.loc 1 2282 0
 3453 001c 2023     		movs	r3, #32
 3454 001e 80F83930 		strb	r3, [r0, #57]
2283:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3455              		.loc 1 2283 0
 3456 0022 80F83A30 		strb	r3, [r0, #58]
2286:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 3457              		.loc 1 2286 0
 3458 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3459              	.LVL306:
 3460 002a F2E7     		b	.L248
 3461              		.cfi_endproc
 3462              	.LFE112:
 3463              		.fnend
 3465              		.section	.text._ZL23UART_DMATxAbortCallbackP19__DMA_HandleTypeDef,"ax",%progbits
 3466              		.align	1
 3467              		.syntax unified
 3468              		.thumb
 3469              		.thumb_func
 3470              		.fpu softvfp
 3472              	_ZL23UART_DMATxAbortCallbackP19__DMA_HandleTypeDef:
 3473              		.fnstart
 3474              	.LFB111:
2222:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3475              		.loc 1 2222 0
 3476              		.cfi_startproc
 3477              		@ args = 0, pretend = 0, frame = 0
 3478              		@ frame_needed = 0, uses_anonymous_args = 0
 3479              	.LVL307:
 3480 0000 08B5     		push	{r3, lr}
 3481              		.save {r3, lr}
 3482              	.LCFI42:
 3483              		.cfi_def_cfa_offset 8
 3484              		.cfi_offset 3, -8
 3485              		.cfi_offset 14, -4
2223:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3486              		.loc 1 2223 0
 3487 0002 406A     		ldr	r0, [r0, #36]
 3488              	.LVL308:
2225:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3489              		.loc 1 2225 0
 3490 0004 036B     		ldr	r3, [r0, #48]
 3491 0006 0022     		movs	r2, #0
 3492 0008 5A63     		str	r2, [r3, #52]
2228:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 3493              		.loc 1 2228 0
 3494 000a 436B     		ldr	r3, [r0, #52]
 3495 000c 13B1     		cbz	r3, .L253
2230:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 3496              		.loc 1 2230 0
 3497 000e 5B6B     		ldr	r3, [r3, #52]
 3498 0010 03B1     		cbz	r3, .L253
 3499              	.LVL309:
 3500              	.L252:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 115


2249:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3501              		.loc 1 2249 0
 3502 0012 08BD     		pop	{r3, pc}
 3503              	.LVL310:
 3504              	.L253:
2237:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3505              		.loc 1 2237 0
 3506 0014 0023     		movs	r3, #0
 3507 0016 C384     		strh	r3, [r0, #38]	@ movhi
2238:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3508              		.loc 1 2238 0
 3509 0018 C385     		strh	r3, [r0, #46]	@ movhi
2241:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3510              		.loc 1 2241 0
 3511 001a C363     		str	r3, [r0, #60]
2244:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3512              		.loc 1 2244 0
 3513 001c 2023     		movs	r3, #32
 3514 001e 80F83930 		strb	r3, [r0, #57]
2245:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3515              		.loc 1 2245 0
 3516 0022 80F83A30 		strb	r3, [r0, #58]
2248:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 3517              		.loc 1 2248 0
 3518 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3519              	.LVL311:
 3520 002a F2E7     		b	.L252
 3521              		.cfi_endproc
 3522              	.LFE111:
 3523              		.fnend
 3525              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3526              		.align	1
 3527              		.weak	HAL_UART_AbortTransmitCpltCallback
 3528              		.syntax unified
 3529              		.thumb
 3530              		.thumb_func
 3531              		.fpu softvfp
 3533              	HAL_UART_AbortTransmitCpltCallback:
 3534              		.fnstart
 3535              	.LFB93:
1771:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3536              		.loc 1 1771 0
 3537              		.cfi_startproc
 3538              		@ args = 0, pretend = 0, frame = 0
 3539              		@ frame_needed = 0, uses_anonymous_args = 0
 3540              		@ link register save eliminated.
 3541              	.LVL312:
1778:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3542              		.loc 1 1778 0
 3543 0000 7047     		bx	lr
 3544              		.cfi_endproc
 3545              	.LFE93:
 3546              		.cantunwind
 3547              		.fnend
 3549              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3550              		.align	1
 3551              		.global	HAL_UART_AbortTransmit_IT
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 116


 3552              		.syntax unified
 3553              		.thumb
 3554              		.thumb_func
 3555              		.fpu softvfp
 3557              	HAL_UART_AbortTransmit_IT:
 3558              		.fnstart
 3559              	.LFB84:
1433:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3560              		.loc 1 1433 0
 3561              		.cfi_startproc
 3562              		@ args = 0, pretend = 0, frame = 0
 3563              		@ frame_needed = 0, uses_anonymous_args = 0
 3564              	.LVL313:
 3565 0000 10B5     		push	{r4, lr}
 3566              		.save {r4, lr}
 3567              	.LCFI43:
 3568              		.cfi_def_cfa_offset 8
 3569              		.cfi_offset 4, -8
 3570              		.cfi_offset 14, -4
 3571 0002 0446     		mov	r4, r0
1435:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3572              		.loc 1 1435 0
 3573 0004 0268     		ldr	r2, [r0]
 3574 0006 D368     		ldr	r3, [r2, #12]
 3575 0008 23F0C003 		bic	r3, r3, #192
 3576 000c D360     		str	r3, [r2, #12]
1438:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 3577              		.loc 1 1438 0
 3578 000e 0368     		ldr	r3, [r0]
 3579 0010 5A69     		ldr	r2, [r3, #20]
 3580 0012 12F0800F 		tst	r2, #128
 3581 0016 18D0     		beq	.L258
1440:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3582              		.loc 1 1440 0
 3583 0018 5A69     		ldr	r2, [r3, #20]
 3584 001a 22F08002 		bic	r2, r2, #128
 3585 001e 5A61     		str	r2, [r3, #20]
1443:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 3586              		.loc 1 1443 0
 3587 0020 036B     		ldr	r3, [r0, #48]
 3588 0022 53B1     		cbz	r3, .L259
1447:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3589              		.loc 1 1447 0
 3590 0024 0D4A     		ldr	r2, .L262
 3591 0026 5A63     		str	r2, [r3, #52]
1450:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 3592              		.loc 1 1450 0
 3593 0028 006B     		ldr	r0, [r0, #48]
 3594              	.LVL314:
 3595 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3596              	.LVL315:
 3597 002e 10B1     		cbz	r0, .L260
1453:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 3598              		.loc 1 1453 0
 3599 0030 206B     		ldr	r0, [r4, #48]
 3600 0032 436B     		ldr	r3, [r0, #52]
 3601 0034 9847     		blx	r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 117


 3602              	.LVL316:
 3603              	.L260:
1481:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3604              		.loc 1 1481 0
 3605 0036 0020     		movs	r0, #0
 3606 0038 10BD     		pop	{r4, pc}
 3607              	.LVL317:
 3608              	.L259:
1459:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3609              		.loc 1 1459 0
 3610 003a 0023     		movs	r3, #0
 3611 003c C384     		strh	r3, [r0, #38]	@ movhi
1462:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3612              		.loc 1 1462 0
 3613 003e 2023     		movs	r3, #32
 3614 0040 80F83930 		strb	r3, [r0, #57]
1465:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 3615              		.loc 1 1465 0
 3616 0044 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3617              	.LVL318:
 3618 0048 F5E7     		b	.L260
 3619              	.LVL319:
 3620              	.L258:
1471:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3621              		.loc 1 1471 0
 3622 004a 0023     		movs	r3, #0
 3623 004c C384     		strh	r3, [r0, #38]	@ movhi
1474:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3624              		.loc 1 1474 0
 3625 004e 2023     		movs	r3, #32
 3626 0050 80F83930 		strb	r3, [r0, #57]
1477:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 3627              		.loc 1 1477 0
 3628 0054 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3629              	.LVL320:
 3630 0058 EDE7     		b	.L260
 3631              	.L263:
 3632 005a 00BF     		.align	2
 3633              	.L262:
 3634 005c 00000000 		.word	_ZL27UART_DMATxOnlyAbortCallbackP19__DMA_HandleTypeDef
 3635              		.cfi_endproc
 3636              	.LFE84:
 3637              		.fnend
 3639              		.section	.text._ZL27UART_DMATxOnlyAbortCallbackP19__DMA_HandleTypeDef,"ax",%progbits
 3640              		.align	1
 3641              		.syntax unified
 3642              		.thumb
 3643              		.thumb_func
 3644              		.fpu softvfp
 3646              	_ZL27UART_DMATxOnlyAbortCallbackP19__DMA_HandleTypeDef:
 3647              		.fnstart
 3648              	.LFB113:
2298:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3649              		.loc 1 2298 0
 3650              		.cfi_startproc
 3651              		@ args = 0, pretend = 0, frame = 0
 3652              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 118


 3653              	.LVL321:
 3654 0000 08B5     		push	{r3, lr}
 3655              		.save {r3, lr}
 3656              	.LCFI44:
 3657              		.cfi_def_cfa_offset 8
 3658              		.cfi_offset 3, -8
 3659              		.cfi_offset 14, -4
2299:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3660              		.loc 1 2299 0
 3661 0002 406A     		ldr	r0, [r0, #36]
 3662              	.LVL322:
2301:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3663              		.loc 1 2301 0
 3664 0004 0023     		movs	r3, #0
 3665 0006 C384     		strh	r3, [r0, #38]	@ movhi
2304:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3666              		.loc 1 2304 0
 3667 0008 2023     		movs	r3, #32
 3668 000a 80F83930 		strb	r3, [r0, #57]
2307:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 3669              		.loc 1 2307 0
 3670 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3671              	.LVL323:
2308:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3672              		.loc 1 2308 0
 3673 0012 08BD     		pop	{r3, pc}
 3674              		.cfi_endproc
 3675              	.LFE113:
 3676              		.fnend
 3678              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3679              		.align	1
 3680              		.weak	HAL_UART_AbortReceiveCpltCallback
 3681              		.syntax unified
 3682              		.thumb
 3683              		.thumb_func
 3684              		.fpu softvfp
 3686              	HAL_UART_AbortReceiveCpltCallback:
 3687              		.fnstart
 3688              	.LFB94:
1786:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3689              		.loc 1 1786 0
 3690              		.cfi_startproc
 3691              		@ args = 0, pretend = 0, frame = 0
 3692              		@ frame_needed = 0, uses_anonymous_args = 0
 3693              		@ link register save eliminated.
 3694              	.LVL324:
1793:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3695              		.loc 1 1793 0
 3696 0000 7047     		bx	lr
 3697              		.cfi_endproc
 3698              	.LFE94:
 3699              		.cantunwind
 3700              		.fnend
 3702              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3703              		.align	1
 3704              		.global	HAL_UART_AbortReceive_IT
 3705              		.syntax unified
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 119


 3706              		.thumb
 3707              		.thumb_func
 3708              		.fpu softvfp
 3710              	HAL_UART_AbortReceive_IT:
 3711              		.fnstart
 3712              	.LFB85:
1498:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3713              		.loc 1 1498 0
 3714              		.cfi_startproc
 3715              		@ args = 0, pretend = 0, frame = 0
 3716              		@ frame_needed = 0, uses_anonymous_args = 0
 3717              	.LVL325:
 3718 0000 10B5     		push	{r4, lr}
 3719              		.save {r4, lr}
 3720              	.LCFI45:
 3721              		.cfi_def_cfa_offset 8
 3722              		.cfi_offset 4, -8
 3723              		.cfi_offset 14, -4
 3724 0002 0446     		mov	r4, r0
1500:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3725              		.loc 1 1500 0
 3726 0004 0268     		ldr	r2, [r0]
 3727 0006 D368     		ldr	r3, [r2, #12]
 3728 0008 23F49073 		bic	r3, r3, #288
 3729 000c D360     		str	r3, [r2, #12]
1501:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3730              		.loc 1 1501 0
 3731 000e 0268     		ldr	r2, [r0]
 3732 0010 5369     		ldr	r3, [r2, #20]
 3733 0012 23F00103 		bic	r3, r3, #1
 3734 0016 5361     		str	r3, [r2, #20]
1504:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   {
 3735              		.loc 1 1504 0
 3736 0018 0368     		ldr	r3, [r0]
 3737 001a 5A69     		ldr	r2, [r3, #20]
 3738 001c 12F0400F 		tst	r2, #64
 3739 0020 18D0     		beq	.L268
1506:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3740              		.loc 1 1506 0
 3741 0022 5A69     		ldr	r2, [r3, #20]
 3742 0024 22F04002 		bic	r2, r2, #64
 3743 0028 5A61     		str	r2, [r3, #20]
1509:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     {
 3744              		.loc 1 1509 0
 3745 002a 436B     		ldr	r3, [r0, #52]
 3746 002c 53B1     		cbz	r3, .L269
1513:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3747              		.loc 1 1513 0
 3748 002e 0D4A     		ldr	r2, .L272
 3749 0030 5A63     		str	r2, [r3, #52]
1516:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       {
 3750              		.loc 1 1516 0
 3751 0032 406B     		ldr	r0, [r0, #52]
 3752              	.LVL326:
 3753 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3754              	.LVL327:
 3755 0038 10B1     		cbz	r0, .L270
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 120


1519:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****       }
 3756              		.loc 1 1519 0
 3757 003a 606B     		ldr	r0, [r4, #52]
 3758 003c 436B     		ldr	r3, [r0, #52]
 3759 003e 9847     		blx	r3
 3760              	.LVL328:
 3761              	.L270:
1547:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3762              		.loc 1 1547 0
 3763 0040 0020     		movs	r0, #0
 3764 0042 10BD     		pop	{r4, pc}
 3765              	.LVL329:
 3766              	.L269:
1525:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3767              		.loc 1 1525 0
 3768 0044 0023     		movs	r3, #0
 3769 0046 C385     		strh	r3, [r0, #46]	@ movhi
1528:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3770              		.loc 1 1528 0
 3771 0048 2023     		movs	r3, #32
 3772 004a 80F83A30 		strb	r3, [r0, #58]
1531:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****     }
 3773              		.loc 1 1531 0
 3774 004e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3775              	.LVL330:
 3776 0052 F5E7     		b	.L270
 3777              	.LVL331:
 3778              	.L268:
1537:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3779              		.loc 1 1537 0
 3780 0054 0023     		movs	r3, #0
 3781 0056 C385     		strh	r3, [r0, #46]	@ movhi
1540:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3782              		.loc 1 1540 0
 3783 0058 2023     		movs	r3, #32
 3784 005a 80F83A30 		strb	r3, [r0, #58]
1543:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   }
 3785              		.loc 1 1543 0
 3786 005e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3787              	.LVL332:
 3788 0062 EDE7     		b	.L270
 3789              	.L273:
 3790              		.align	2
 3791              	.L272:
 3792 0064 00000000 		.word	_ZL27UART_DMARxOnlyAbortCallbackP19__DMA_HandleTypeDef
 3793              		.cfi_endproc
 3794              	.LFE85:
 3795              		.fnend
 3797              		.section	.text._ZL27UART_DMARxOnlyAbortCallbackP19__DMA_HandleTypeDef,"ax",%progbits
 3798              		.align	1
 3799              		.syntax unified
 3800              		.thumb
 3801              		.thumb_func
 3802              		.fpu softvfp
 3804              	_ZL27UART_DMARxOnlyAbortCallbackP19__DMA_HandleTypeDef:
 3805              		.fnstart
 3806              	.LFB114:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 121


2319:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3807              		.loc 1 2319 0
 3808              		.cfi_startproc
 3809              		@ args = 0, pretend = 0, frame = 0
 3810              		@ frame_needed = 0, uses_anonymous_args = 0
 3811              	.LVL333:
 3812 0000 08B5     		push	{r3, lr}
 3813              		.save {r3, lr}
 3814              	.LCFI46:
 3815              		.cfi_def_cfa_offset 8
 3816              		.cfi_offset 3, -8
 3817              		.cfi_offset 14, -4
2320:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3818              		.loc 1 2320 0
 3819 0002 406A     		ldr	r0, [r0, #36]
 3820              	.LVL334:
2322:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3821              		.loc 1 2322 0
 3822 0004 0023     		movs	r3, #0
 3823 0006 C385     		strh	r3, [r0, #46]	@ movhi
2325:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3824              		.loc 1 2325 0
 3825 0008 2023     		movs	r3, #32
 3826 000a 80F83A30 		strb	r3, [r0, #58]
2328:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 3827              		.loc 1 2328 0
 3828 000e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3829              	.LVL335:
2329:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3830              		.loc 1 2329 0
 3831 0012 08BD     		pop	{r3, pc}
 3832              		.cfi_endproc
 3833              	.LFE114:
 3834              		.fnend
 3836              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3837              		.align	1
 3838              		.global	HAL_LIN_SendBreak
 3839              		.syntax unified
 3840              		.thumb
 3841              		.thumb_func
 3842              		.fpu softvfp
 3844              	HAL_LIN_SendBreak:
 3845              		.fnstart
 3846              	.LFB95:
1825:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the parameters */
 3847              		.loc 1 1825 0
 3848              		.cfi_startproc
 3849              		@ args = 0, pretend = 0, frame = 0
 3850              		@ frame_needed = 0, uses_anonymous_args = 0
 3851              		@ link register save eliminated.
 3852              	.LVL336:
1830:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3853              		.loc 1 1830 0
 3854 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3855 0004 012B     		cmp	r3, #1
 3856 0006 12D0     		beq	.L278
1830:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 122


 3857              		.loc 1 1830 0 is_stmt 0 discriminator 2
 3858 0008 0123     		movs	r3, #1
 3859 000a 80F83830 		strb	r3, [r0, #56]
1832:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3860              		.loc 1 1832 0 is_stmt 1 discriminator 2
 3861 000e 2423     		movs	r3, #36
 3862 0010 80F83930 		strb	r3, [r0, #57]
1835:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****  
 3863              		.loc 1 1835 0 discriminator 2
 3864 0014 0268     		ldr	r2, [r0]
 3865 0016 D368     		ldr	r3, [r2, #12]
 3866 0018 43F00103 		orr	r3, r3, #1
 3867 001c D360     		str	r3, [r2, #12]
1837:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3868              		.loc 1 1837 0 discriminator 2
 3869 001e 2023     		movs	r3, #32
 3870 0020 80F83930 		strb	r3, [r0, #57]
1840:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3871              		.loc 1 1840 0 discriminator 2
 3872 0024 0023     		movs	r3, #0
 3873 0026 80F83830 		strb	r3, [r0, #56]
1842:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 3874              		.loc 1 1842 0 discriminator 2
 3875 002a 1846     		mov	r0, r3
 3876              	.LVL337:
 3877 002c 7047     		bx	lr
 3878              	.LVL338:
 3879              	.L278:
1830:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3880              		.loc 1 1830 0
 3881 002e 0220     		movs	r0, #2
 3882              	.LVL339:
1843:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3883              		.loc 1 1843 0
 3884 0030 7047     		bx	lr
 3885              		.cfi_endproc
 3886              	.LFE95:
 3887              		.cantunwind
 3888              		.fnend
 3890              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3891              		.align	1
 3892              		.global	HAL_MultiProcessor_EnterMuteMode
 3893              		.syntax unified
 3894              		.thumb
 3895              		.thumb_func
 3896              		.fpu softvfp
 3898              	HAL_MultiProcessor_EnterMuteMode:
 3899              		.fnstart
 3900              	.LFB96:
1852:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the parameters */
 3901              		.loc 1 1852 0
 3902              		.cfi_startproc
 3903              		@ args = 0, pretend = 0, frame = 0
 3904              		@ frame_needed = 0, uses_anonymous_args = 0
 3905              		@ link register save eliminated.
 3906              	.LVL340:
1857:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 123


 3907              		.loc 1 1857 0
 3908 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3909 0004 012B     		cmp	r3, #1
 3910 0006 12D0     		beq	.L281
1857:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3911              		.loc 1 1857 0 is_stmt 0 discriminator 2
 3912 0008 0123     		movs	r3, #1
 3913 000a 80F83830 		strb	r3, [r0, #56]
1859:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3914              		.loc 1 1859 0 is_stmt 1 discriminator 2
 3915 000e 2423     		movs	r3, #36
 3916 0010 80F83930 		strb	r3, [r0, #57]
1862:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3917              		.loc 1 1862 0 discriminator 2
 3918 0014 0268     		ldr	r2, [r0]
 3919 0016 D368     		ldr	r3, [r2, #12]
 3920 0018 43F00203 		orr	r3, r3, #2
 3921 001c D360     		str	r3, [r2, #12]
1864:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3922              		.loc 1 1864 0 discriminator 2
 3923 001e 2023     		movs	r3, #32
 3924 0020 80F83930 		strb	r3, [r0, #57]
1867:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3925              		.loc 1 1867 0 discriminator 2
 3926 0024 0023     		movs	r3, #0
 3927 0026 80F83830 		strb	r3, [r0, #56]
1869:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 3928              		.loc 1 1869 0 discriminator 2
 3929 002a 1846     		mov	r0, r3
 3930              	.LVL341:
 3931 002c 7047     		bx	lr
 3932              	.LVL342:
 3933              	.L281:
1857:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3934              		.loc 1 1857 0
 3935 002e 0220     		movs	r0, #2
 3936              	.LVL343:
1870:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3937              		.loc 1 1870 0
 3938 0030 7047     		bx	lr
 3939              		.cfi_endproc
 3940              	.LFE96:
 3941              		.cantunwind
 3942              		.fnend
 3944              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 3945              		.align	1
 3946              		.global	HAL_MultiProcessor_ExitMuteMode
 3947              		.syntax unified
 3948              		.thumb
 3949              		.thumb_func
 3950              		.fpu softvfp
 3952              	HAL_MultiProcessor_ExitMuteMode:
 3953              		.fnstart
 3954              	.LFB97:
1879:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   /* Check the parameters */
 3955              		.loc 1 1879 0
 3956              		.cfi_startproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 124


 3957              		@ args = 0, pretend = 0, frame = 0
 3958              		@ frame_needed = 0, uses_anonymous_args = 0
 3959              		@ link register save eliminated.
 3960              	.LVL344:
1884:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3961              		.loc 1 1884 0
 3962 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3963 0004 012B     		cmp	r3, #1
 3964 0006 12D0     		beq	.L284
1884:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3965              		.loc 1 1884 0 is_stmt 0 discriminator 2
 3966 0008 0123     		movs	r3, #1
 3967 000a 80F83830 		strb	r3, [r0, #56]
1886:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3968              		.loc 1 1886 0 is_stmt 1 discriminator 2
 3969 000e 2423     		movs	r3, #36
 3970 0010 80F83930 		strb	r3, [r0, #57]
1889:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3971              		.loc 1 1889 0 discriminator 2
 3972 0014 0268     		ldr	r2, [r0]
 3973 0016 D368     		ldr	r3, [r2, #12]
 3974 0018 23F00203 		bic	r3, r3, #2
 3975 001c D360     		str	r3, [r2, #12]
1891:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3976              		.loc 1 1891 0 discriminator 2
 3977 001e 2023     		movs	r3, #32
 3978 0020 80F83930 		strb	r3, [r0, #57]
1894:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3979              		.loc 1 1894 0 discriminator 2
 3980 0024 0023     		movs	r3, #0
 3981 0026 80F83830 		strb	r3, [r0, #56]
1896:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 3982              		.loc 1 1896 0 discriminator 2
 3983 002a 1846     		mov	r0, r3
 3984              	.LVL345:
 3985 002c 7047     		bx	lr
 3986              	.LVL346:
 3987              	.L284:
1884:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 3988              		.loc 1 1884 0
 3989 002e 0220     		movs	r0, #2
 3990              	.LVL347:
1897:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 3991              		.loc 1 1897 0
 3992 0030 7047     		bx	lr
 3993              		.cfi_endproc
 3994              	.LFE97:
 3995              		.cantunwind
 3996              		.fnend
 3998              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3999              		.align	1
 4000              		.global	HAL_HalfDuplex_EnableTransmitter
 4001              		.syntax unified
 4002              		.thumb
 4003              		.thumb_func
 4004              		.fpu softvfp
 4006              	HAL_HalfDuplex_EnableTransmitter:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 125


 4007              		.fnstart
 4008              	.LFB98:
1906:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4009              		.loc 1 1906 0
 4010              		.cfi_startproc
 4011              		@ args = 0, pretend = 0, frame = 0
 4012              		@ frame_needed = 0, uses_anonymous_args = 0
 4013              		@ link register save eliminated.
 4014              	.LVL348:
1910:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 4015              		.loc 1 1910 0
 4016 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 4017 0004 012B     		cmp	r3, #1
 4018 0006 14D0     		beq	.L287
1910:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 4019              		.loc 1 1910 0 is_stmt 0 discriminator 2
 4020 0008 0123     		movs	r3, #1
 4021 000a 80F83830 		strb	r3, [r0, #56]
1912:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4022              		.loc 1 1912 0 is_stmt 1 discriminator 2
 4023 000e 2423     		movs	r3, #36
 4024 0010 80F83930 		strb	r3, [r0, #57]
1915:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4025              		.loc 1 1915 0 discriminator 2
 4026 0014 0268     		ldr	r2, [r0]
 4027 0016 D368     		ldr	r3, [r2, #12]
 4028              	.LVL349:
1918:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4029              		.loc 1 1918 0 discriminator 2
 4030 0018 23F00C03 		bic	r3, r3, #12
 4031              	.LVL350:
1921:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4032              		.loc 1 1921 0 discriminator 2
 4033 001c 43F00803 		orr	r3, r3, #8
 4034              	.LVL351:
1924:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4035              		.loc 1 1924 0 discriminator 2
 4036 0020 D360     		str	r3, [r2, #12]
1926:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 4037              		.loc 1 1926 0 discriminator 2
 4038 0022 2023     		movs	r3, #32
 4039              	.LVL352:
 4040 0024 80F83930 		strb	r3, [r0, #57]
 4041              	.LVL353:
1929:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 4042              		.loc 1 1929 0 discriminator 2
 4043 0028 0023     		movs	r3, #0
 4044 002a 80F83830 		strb	r3, [r0, #56]
1931:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 4045              		.loc 1 1931 0 discriminator 2
 4046 002e 1846     		mov	r0, r3
 4047              	.LVL354:
 4048 0030 7047     		bx	lr
 4049              	.LVL355:
 4050              	.L287:
1910:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 4051              		.loc 1 1910 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 126


 4052 0032 0220     		movs	r0, #2
 4053              	.LVL356:
1932:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4054              		.loc 1 1932 0
 4055 0034 7047     		bx	lr
 4056              		.cfi_endproc
 4057              	.LFE98:
 4058              		.cantunwind
 4059              		.fnend
 4061              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4062              		.align	1
 4063              		.global	HAL_HalfDuplex_EnableReceiver
 4064              		.syntax unified
 4065              		.thumb
 4066              		.thumb_func
 4067              		.fpu softvfp
 4069              	HAL_HalfDuplex_EnableReceiver:
 4070              		.fnstart
 4071              	.LFB99:
1941:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4072              		.loc 1 1941 0
 4073              		.cfi_startproc
 4074              		@ args = 0, pretend = 0, frame = 0
 4075              		@ frame_needed = 0, uses_anonymous_args = 0
 4076              		@ link register save eliminated.
 4077              	.LVL357:
1945:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4078              		.loc 1 1945 0
 4079 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 4080 0004 012B     		cmp	r3, #1
 4081 0006 14D0     		beq	.L290
1945:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4082              		.loc 1 1945 0 is_stmt 0 discriminator 2
 4083 0008 0123     		movs	r3, #1
 4084 000a 80F83830 		strb	r3, [r0, #56]
1947:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4085              		.loc 1 1947 0 is_stmt 1 discriminator 2
 4086 000e 2423     		movs	r3, #36
 4087 0010 80F83930 		strb	r3, [r0, #57]
1950:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4088              		.loc 1 1950 0 discriminator 2
 4089 0014 0268     		ldr	r2, [r0]
 4090 0016 D368     		ldr	r3, [r2, #12]
 4091              	.LVL358:
1953:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4092              		.loc 1 1953 0 discriminator 2
 4093 0018 23F00C03 		bic	r3, r3, #12
 4094              	.LVL359:
1956:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4095              		.loc 1 1956 0 discriminator 2
 4096 001c 43F00403 		orr	r3, r3, #4
 4097              	.LVL360:
1959:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4098              		.loc 1 1959 0 discriminator 2
 4099 0020 D360     		str	r3, [r2, #12]
1961:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4100              		.loc 1 1961 0 discriminator 2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 127


 4101 0022 2023     		movs	r3, #32
 4102              	.LVL361:
 4103 0024 80F83930 		strb	r3, [r0, #57]
 4104              	.LVL362:
1964:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 4105              		.loc 1 1964 0 discriminator 2
 4106 0028 0023     		movs	r3, #0
 4107 002a 80F83830 		strb	r3, [r0, #56]
1966:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 4108              		.loc 1 1966 0 discriminator 2
 4109 002e 1846     		mov	r0, r3
 4110              	.LVL363:
 4111 0030 7047     		bx	lr
 4112              	.LVL364:
 4113              	.L290:
1945:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4114              		.loc 1 1945 0
 4115 0032 0220     		movs	r0, #2
 4116              	.LVL365:
1967:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4117              		.loc 1 1967 0
 4118 0034 7047     		bx	lr
 4119              		.cfi_endproc
 4120              	.LFE99:
 4121              		.cantunwind
 4122              		.fnend
 4124              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4125              		.align	1
 4126              		.global	HAL_UART_GetState
 4127              		.syntax unified
 4128              		.thumb
 4129              		.thumb_func
 4130              		.fpu softvfp
 4132              	HAL_UART_GetState:
 4133              		.fnstart
 4134              	.LFB100:
1998:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 4135              		.loc 1 1998 0
 4136              		.cfi_startproc
 4137              		@ args = 0, pretend = 0, frame = 0
 4138              		@ frame_needed = 0, uses_anonymous_args = 0
 4139              		@ link register save eliminated.
 4140              	.LVL366:
2000:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   temp2 = huart->RxState;
 4141              		.loc 1 2000 0
 4142 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 4143              	.LVL367:
2001:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   
 4144              		.loc 1 2001 0
 4145 0004 90F83A00 		ldrb	r0, [r0, #58]	@ zero_extendqisi2
 4146              	.LVL368:
2004:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4147              		.loc 1 2004 0
 4148 0008 1843     		orrs	r0, r0, r3
 4149              	.LVL369:
 4150 000a 7047     		bx	lr
 4151              		.cfi_endproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 128


 4152              	.LFE100:
 4153              		.cantunwind
 4154              		.fnend
 4156              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4157              		.align	1
 4158              		.global	HAL_UART_GetError
 4159              		.syntax unified
 4160              		.thumb
 4161              		.thumb_func
 4162              		.fpu softvfp
 4164              	HAL_UART_GetError:
 4165              		.fnstart
 4166              	.LFB101:
2013:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
 4167              		.loc 1 2013 0
 4168              		.cfi_startproc
 4169              		@ args = 0, pretend = 0, frame = 0
 4170              		@ frame_needed = 0, uses_anonymous_args = 0
 4171              		@ link register save eliminated.
 4172              	.LVL370:
2014:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** }
 4173              		.loc 1 2014 0
 4174 0000 C06B     		ldr	r0, [r0, #60]
 4175              	.LVL371:
2015:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_uart.c **** 
 4176              		.loc 1 2015 0
 4177 0002 7047     		bx	lr
 4178              		.cfi_endproc
 4179              	.LFE101:
 4180              		.cantunwind
 4181              		.fnend
 4183              		.text
 4184              	.Letext0:
 4185              		.file 2 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.
 4186              		.file 3 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 4187              		.file 4 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include/core_cm3.h"
 4188              		.file 5 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1x
 4189              		.file 6 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 4190              		.file 7 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 4191              		.file 8 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\lock.h"
 4192              		.file 9 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_types.h"
 4193              		.file 10 "e:\\visualstudiocode\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\7.2.1\\include\\stddef
 4194              		.file 11 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\reent.h"
 4195              		.file 12 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 4196              		.file 13 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 4197              		.file 14 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 4198              		.file 15 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 4199              		.file 16 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 129


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal_uart.c
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:16     .text._ZL18UART_EndTxTransferP18UART_HandleTypeDef:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:22     .text._ZL18UART_EndTxTransferP18UART_HandleTypeDef:00000000 _ZL18UART_EndTxTransferP18UART_HandleTypeDef
.ARM.exidx.text._ZL18UART_EndTxTransferP18UART_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:48     .text._ZL18UART_EndRxTransferP18UART_HandleTypeDef:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:54     .text._ZL18UART_EndRxTransferP18UART_HandleTypeDef:00000000 _ZL18UART_EndRxTransferP18UART_HandleTypeDef
.ARM.exidx.text._ZL18UART_EndRxTransferP18UART_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:84     .text._ZL16UART_Transmit_ITP18UART_HandleTypeDef:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:90     .text._ZL16UART_Transmit_ITP18UART_HandleTypeDef:00000000 _ZL16UART_Transmit_ITP18UART_HandleTypeDef
.ARM.exidx.text._ZL16UART_Transmit_ITP18UART_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:180    .text._ZL14UART_SetConfigP18UART_HandleTypeDef:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:186    .text._ZL14UART_SetConfigP18UART_HandleTypeDef:00000000 _ZL14UART_SetConfigP18UART_HandleTypeDef
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:372    .text._ZL14UART_SetConfigP18UART_HandleTypeDef:000001a4 $d
.ARM.exidx.text._ZL14UART_SetConfigP18UART_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:379    .text._ZL27UART_WaitOnFlagUntilTimeoutP18UART_HandleTypeDefm10FlagStatusmm:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:385    .text._ZL27UART_WaitOnFlagUntilTimeoutP18UART_HandleTypeDefm10FlagStatusmm:00000000 _ZL27UART_WaitOnFlagUntilTimeoutP18UART_HandleTypeDefm10FlagStatusmm
.ARM.exidx.text._ZL27UART_WaitOnFlagUntilTimeoutP18UART_HandleTypeDefm10FlagStatusmm:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:470    .text.HAL_UART_MspInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:477    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
 .ARM.exidx.text.HAL_UART_MspInit:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:494    .text.HAL_UART_Init:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:501    .text.HAL_UART_Init:00000000 HAL_UART_Init
    .ARM.exidx.text.HAL_UART_Init:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:585    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:592    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
.ARM.exidx.text.HAL_HalfDuplex_Init:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:682    .text.HAL_LIN_Init:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:689    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
     .ARM.exidx.text.HAL_LIN_Init:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:790    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:797    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
.ARM.exidx.text.HAL_MultiProcessor_Init:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:901    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:908    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
.ARM.exidx.text.HAL_UART_MspDeInit:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:925    .text.HAL_UART_DeInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:932    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
  .ARM.exidx.text.HAL_UART_DeInit:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:983    .text.HAL_UART_Transmit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:990    .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
.ARM.exidx.text.HAL_UART_Transmit:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1181   .text.HAL_UART_Receive:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1188   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
 .ARM.exidx.text.HAL_UART_Receive:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1382   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1389   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
.ARM.exidx.text.HAL_UART_Transmit_IT:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1467   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1474   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
.ARM.exidx.text.HAL_UART_Receive_IT:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1562   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1569   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1683   .text.HAL_UART_Transmit_DMA:00000080 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2408   .text._ZL20UART_DMATransmitCpltP19__DMA_HandleTypeDef:00000000 _ZL20UART_DMATransmitCpltP19__DMA_HandleTypeDef
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2531   .text._ZL18UART_DMATxHalfCpltP19__DMA_HandleTypeDef:00000000 _ZL18UART_DMATxHalfCpltP19__DMA_HandleTypeDef
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2859   .text._ZL13UART_DMAErrorP19__DMA_HandleTypeDef:00000000 _ZL13UART_DMAErrorP19__DMA_HandleTypeDef
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 130


.ARM.exidx.text.HAL_UART_Transmit_DMA:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1691   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1698   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1843   .text.HAL_UART_Receive_DMA:0000009c $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2588   .text._ZL19UART_DMAReceiveCpltP19__DMA_HandleTypeDef:00000000 _ZL19UART_DMAReceiveCpltP19__DMA_HandleTypeDef
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2802   .text._ZL18UART_DMARxHalfCpltP19__DMA_HandleTypeDef:00000000 _ZL18UART_DMARxHalfCpltP19__DMA_HandleTypeDef
.ARM.exidx.text.HAL_UART_Receive_DMA:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1853   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1860   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
.ARM.exidx.text.HAL_UART_DMAPause:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1950   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:1957   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
.ARM.exidx.text.HAL_UART_DMAResume:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2060   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2067   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
 .ARM.exidx.text.HAL_UART_DMAStop:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2159   .text.HAL_UART_Abort:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2166   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
   .ARM.exidx.text.HAL_UART_Abort:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2251   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2258   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
.ARM.exidx.text.HAL_UART_AbortTransmit:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2312   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2319   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
.ARM.exidx.text.HAL_UART_AbortReceive:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2378   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2385   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
.ARM.exidx.text.HAL_UART_TxCpltCallback:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2402   .text._ZL20UART_DMATransmitCpltP19__DMA_HandleTypeDef:00000000 $t
.ARM.extab.text._ZL20UART_DMATransmitCpltP19__DMA_HandleTypeDef:00000000 $d
.ARM.exidx.text._ZL20UART_DMATransmitCpltP19__DMA_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2462   .text._ZL19UART_EndTransmit_ITP18UART_HandleTypeDef:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2468   .text._ZL19UART_EndTransmit_ITP18UART_HandleTypeDef:00000000 _ZL19UART_EndTransmit_ITP18UART_HandleTypeDef
.ARM.extab.text._ZL19UART_EndTransmit_ITP18UART_HandleTypeDef:00000000 $d
.ARM.exidx.text._ZL19UART_EndTransmit_ITP18UART_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2501   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2508   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
.ARM.exidx.text.HAL_UART_TxHalfCpltCallback:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2525   .text._ZL18UART_DMATxHalfCpltP19__DMA_HandleTypeDef:00000000 $t
.ARM.extab.text._ZL18UART_DMATxHalfCpltP19__DMA_HandleTypeDef:00000000 $d
.ARM.exidx.text._ZL18UART_DMATxHalfCpltP19__DMA_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2558   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2565   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
.ARM.exidx.text.HAL_UART_RxCpltCallback:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2582   .text._ZL19UART_DMAReceiveCpltP19__DMA_HandleTypeDef:00000000 $t
.ARM.extab.text._ZL19UART_DMAReceiveCpltP19__DMA_HandleTypeDef:00000000 $d
.ARM.exidx.text._ZL19UART_DMAReceiveCpltP19__DMA_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2644   .text._ZL15UART_Receive_ITP18UART_HandleTypeDef:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2650   .text._ZL15UART_Receive_ITP18UART_HandleTypeDef:00000000 _ZL15UART_Receive_ITP18UART_HandleTypeDef
.ARM.extab.text._ZL15UART_Receive_ITP18UART_HandleTypeDef:00000000 $d
.ARM.exidx.text._ZL15UART_Receive_ITP18UART_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2772   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2779   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
.ARM.exidx.text.HAL_UART_RxHalfCpltCallback:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2796   .text._ZL18UART_DMARxHalfCpltP19__DMA_HandleTypeDef:00000000 $t
.ARM.extab.text._ZL18UART_DMARxHalfCpltP19__DMA_HandleTypeDef:00000000 $d
.ARM.exidx.text._ZL18UART_DMARxHalfCpltP19__DMA_HandleTypeDef:00000000 $d
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 131


C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2829   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2836   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
.ARM.exidx.text.HAL_UART_ErrorCallback:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2853   .text._ZL13UART_DMAErrorP19__DMA_HandleTypeDef:00000000 $t
.ARM.exidx.text._ZL13UART_DMAErrorP19__DMA_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2944   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:2951   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3172   .text.HAL_UART_IRQHandler:0000011c $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3184   .text._ZL20UART_DMAAbortOnErrorP19__DMA_HandleTypeDef:00000000 _ZL20UART_DMAAbortOnErrorP19__DMA_HandleTypeDef
.ARM.exidx.text.HAL_UART_IRQHandler:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3178   .text._ZL20UART_DMAAbortOnErrorP19__DMA_HandleTypeDef:00000000 $t
.ARM.extab.text._ZL20UART_DMAAbortOnErrorP19__DMA_HandleTypeDef:00000000 $d
.ARM.exidx.text._ZL20UART_DMAAbortOnErrorP19__DMA_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3216   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3223   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
.ARM.exidx.text.HAL_UART_AbortCpltCallback:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3240   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3247   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3399   .text.HAL_UART_Abort_IT:000000bc $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3472   .text._ZL23UART_DMATxAbortCallbackP19__DMA_HandleTypeDef:00000000 _ZL23UART_DMATxAbortCallbackP19__DMA_HandleTypeDef
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3412   .text._ZL23UART_DMARxAbortCallbackP19__DMA_HandleTypeDef:00000000 _ZL23UART_DMARxAbortCallbackP19__DMA_HandleTypeDef
.ARM.exidx.text.HAL_UART_Abort_IT:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3406   .text._ZL23UART_DMARxAbortCallbackP19__DMA_HandleTypeDef:00000000 $t
.ARM.extab.text._ZL23UART_DMARxAbortCallbackP19__DMA_HandleTypeDef:00000000 $d
.ARM.exidx.text._ZL23UART_DMARxAbortCallbackP19__DMA_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3466   .text._ZL23UART_DMATxAbortCallbackP19__DMA_HandleTypeDef:00000000 $t
.ARM.extab.text._ZL23UART_DMATxAbortCallbackP19__DMA_HandleTypeDef:00000000 $d
.ARM.exidx.text._ZL23UART_DMATxAbortCallbackP19__DMA_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3526   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3533   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
.ARM.exidx.text.HAL_UART_AbortTransmitCpltCallback:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3550   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3557   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3634   .text.HAL_UART_AbortTransmit_IT:0000005c $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3646   .text._ZL27UART_DMATxOnlyAbortCallbackP19__DMA_HandleTypeDef:00000000 _ZL27UART_DMATxOnlyAbortCallbackP19__DMA_HandleTypeDef
.ARM.exidx.text.HAL_UART_AbortTransmit_IT:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3640   .text._ZL27UART_DMATxOnlyAbortCallbackP19__DMA_HandleTypeDef:00000000 $t
.ARM.extab.text._ZL27UART_DMATxOnlyAbortCallbackP19__DMA_HandleTypeDef:00000000 $d
.ARM.exidx.text._ZL27UART_DMATxOnlyAbortCallbackP19__DMA_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3679   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3686   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
.ARM.exidx.text.HAL_UART_AbortReceiveCpltCallback:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3703   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3710   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3792   .text.HAL_UART_AbortReceive_IT:00000064 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3804   .text._ZL27UART_DMARxOnlyAbortCallbackP19__DMA_HandleTypeDef:00000000 _ZL27UART_DMARxOnlyAbortCallbackP19__DMA_HandleTypeDef
.ARM.exidx.text.HAL_UART_AbortReceive_IT:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3798   .text._ZL27UART_DMARxOnlyAbortCallbackP19__DMA_HandleTypeDef:00000000 $t
.ARM.extab.text._ZL27UART_DMARxOnlyAbortCallbackP19__DMA_HandleTypeDef:00000000 $d
.ARM.exidx.text._ZL27UART_DMARxOnlyAbortCallbackP19__DMA_HandleTypeDef:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3837   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3844   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
.ARM.exidx.text.HAL_LIN_SendBreak:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3891   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3898   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
.ARM.exidx.text.HAL_MultiProcessor_EnterMuteMode:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3945   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s 			page 132


C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3952   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
.ARM.exidx.text.HAL_MultiProcessor_ExitMuteMode:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:3999   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:4006   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
.ARM.exidx.text.HAL_HalfDuplex_EnableTransmitter:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:4062   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:4069   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
.ARM.exidx.text.HAL_HalfDuplex_EnableReceiver:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:4125   .text.HAL_UART_GetState:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:4132   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
.ARM.exidx.text.HAL_UART_GetState:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:4157   .text.HAL_UART_GetError:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccsMWNfL.s:4164   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
.ARM.exidx.text.HAL_UART_GetError:00000000 $d

UNDEFINED SYMBOLS
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
__aeabi_unwind_cpp_pr0
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
__aeabi_unwind_cpp_pr1
HAL_DMA_Abort_IT
