ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_rcc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._ZL9RCC_Delaym,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	_ZL9RCC_Delaym:
  23              		.fnstart
  24              	.LFB77:
  25              		.file 1 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c"
   1:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
   2:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   ******************************************************************************
   3:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @file    stm32f1xx_hal_rcc.c
   4:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @author  MCD Application Team
   5:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *       
  11:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   @verbatim                
  12:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   ==============================================================================
  13:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   ==============================================================================
  15:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     [..]  
  16:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS) 
  32:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
  33:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****                       ##### RCC Limitations #####
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 2


  34:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   ==============================================================================
  35:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     [..]  
  36:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       from/to registers.
  39:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
  42:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     [..]  
  43:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       Workarounds:
  44:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
  47:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   @endverbatim
  48:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   ******************************************************************************
  49:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @attention
  50:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *
  51:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  52:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *
  53:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  54:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  55:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  56:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  57:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  58:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  59:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  60:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  61:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  62:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *      without specific prior written permission.
  63:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *
  64:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  65:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  66:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  67:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  68:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  69:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  70:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  71:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  72:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  73:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  74:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *
  75:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   ******************************************************************************  
  76:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** */
  77:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
  78:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  79:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #include "stm32f1xx_hal.h"
  80:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
  81:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /** @addtogroup STM32F1xx_HAL_Driver
  82:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @{
  83:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
  84:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
  85:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /** @defgroup RCC RCC
  86:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** * @brief RCC HAL module driver
  87:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @{
  88:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
  89:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
  90:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 3


  91:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
  92:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  93:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  94:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  95:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****  * @{
  96:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****  */
  97:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
  98:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @}
  99:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
 100:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 101:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 102:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @{
 103:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
 104:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 105:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 106:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 107:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 108:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 109:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
 110:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @}
 111:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
 112:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 113:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 114:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 115:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @{
 116:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
 117:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
 118:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @}
 119:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
 120:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 121:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 122:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** static void RCC_Delay(uint32_t mdelay);
 123:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 124:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 125:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 126:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 127:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @{
 128:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
 129:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 130:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 131:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 132:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *
 133:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   @verbatim    
 134:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   ===============================================================================
 135:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 136:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   ===============================================================================
 137:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     [..]
 138:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 139:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 140:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       and APB2).
 141:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 142:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 143:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 144:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           the PLL as System clock source.
 145:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 146:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           clock source.
 147:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 4


 148:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 24 MHz (STM32F100xx) or 4 to 16 MHz (STM32F101x/STM32F102
 149:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 150:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 151:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 152:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 153:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 154:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz for STM
 155:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB OTG FS (48 MHz)
 156:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 157:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 158:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 159:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 160:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M3 NMI 
 161:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 162:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 163:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (#) MCO1 (microcontroller clock output), used to output SYSCLK, HSI,  
 164:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           HSE or PLL clock (divided by 2) on PA8 pin + PLL2CLK, PLL3CLK/2, PLL3CLK and XTI for STM3
 165:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 166:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 167:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 168:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           HSE and PLL.
 169:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 170:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 171:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 172:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 173:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 174:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 175:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 176:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 177:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           (+@) RTC: RTC clock can be derived either from the LSI, LSE or HSE clock
 178:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****               divided by 128. 
 179:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           (+@) USB OTG FS and RTC: USB OTG FS require a frequency equal to 48 MHz
 180:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****               to work correctly. This clock is derived of the main PLL through PLL Multiplier.
 181:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           (+@) I2S interface on STM32F105x/STM32F107x can be derived from PLL3CLK
 182:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           (+@) IWDG clock which is always the LSI clock.
 183:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 184:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       (#) For STM32F10xxx, the maximum frequency of the SYSCLK and HCLK/PCLK2 is 72 MHz, PCLK1 36 M
 185:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           For STM32F100xx, the maximum frequency of the SYSCLK and HCLK/PCLK1/PCLK2 is 24 MHz.  
 186:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 187:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   @endverbatim
 188:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @{
 189:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
 190:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
 191:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /*
 192:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 193:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 194:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 195:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 196:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 197:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 198:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 199:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 200:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 201:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 202:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
 203:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 204:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 5


 205:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 206:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 207:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 208:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            - HSE, PLL, PLL2 and PLL3 are OFF
 209:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 210:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 211:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            - All interrupts disabled
 212:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            - All flags are cleared
 213:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 214:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            - Peripheral clocks
 215:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 216:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @retval HAL_StatusTypeDef
 217:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
 218:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 219:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** {
 220:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   uint32_t tickstart;
 221:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 222:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 223:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 224:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 225:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Set HSION bit */
 226:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
 227:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 228:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Wait till HSI is ready */
 229:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
 230:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 231:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 232:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 233:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
 234:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 235:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 236:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 237:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Set HSITRIM bits to the reset value */
 238:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, (0x10U << RCC_CR_HSITRIM_Pos));
 239:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 240:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 241:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 242:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 243:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Reset CFGR register */
 244:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 245:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 246:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Wait till clock switch is ready */
 247:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RESET)
 248:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 249:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 250:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 251:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
 252:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 253:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 254:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 255:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 256:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 257:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 258:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 259:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 260:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 261:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     return HAL_ERROR;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 6


 262:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 263:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 264:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 265:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 266:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 267:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Second step is to clear PLLON bit */
 268:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
 269:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 270:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Wait till PLL is disabled */
 271:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET)
 272:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 273:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 274:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 275:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
 276:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 277:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 278:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 279:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Ensure to reset PLLSRC and PLLMUL bits */
 280:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 281:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 282:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 283:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 284:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 285:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Reset HSEON & CSSON bits */
 286:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_CSSON);
 287:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 288:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Wait till HSE is disabled */
 289:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != RESET)
 290:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 291:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 292:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 293:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
 294:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 295:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 296:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 297:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 298:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 299:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 300:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(RCC_PLL2_SUPPORT)
 301:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 302:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 303:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 304:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Clear PLL2ON bit */
 305:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL2ON);
 306:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 307:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Wait till PLL2 is disabled */
 308:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL2RDY) != RESET)
 309:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 310:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 311:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 312:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
 313:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 314:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 315:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /* RCC_PLL2_SUPPORT */
 316:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 317:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(RCC_PLLI2S_SUPPORT)
 318:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 7


 319:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 320:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 321:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Clear PLL3ON bit */
 322:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL3ON);
 323:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 324:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Wait till PLL3 is disabled */
 325:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL3RDY) != RESET)
 326:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 327:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 328:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 329:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
 330:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 331:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 332:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /* RCC_PLLI2S_SUPPORT */
 333:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 334:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
 335:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Reset CFGR2 register */
 336:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 337:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1 */
 338:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 339:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Reset all CSR flags */
 340:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   SET_BIT(RCC->CSR, RCC_CSR_RMVF);
 341:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 342:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Disable all interrupts */
 343:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
 344:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 345:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   return HAL_OK;
 346:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
 347:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 348:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
 349:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 350:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 351:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 352:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 353:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 354:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when USB OTG FS clock is enabled (specific to devices with USB 
 355:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 356:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 357:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 358:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 359:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 360:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 361:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @retval HAL status
 362:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
 363:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 364:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** {
 365:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 366:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
 367:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 368:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 369:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 370:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
 371:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 372:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 373:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 374:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 375:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 8


 376:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 377:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 378:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 379:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 380:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 381:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 382:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 383:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 384:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 385:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 386:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     else
 387:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 388:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 389:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 390:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 391:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 392:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****        /* Check the HSE State */
 393:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 394:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 395:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 396:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 397:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 398:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Wait till HSE is ready */
 399:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 400:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 401:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 402:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 403:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 404:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 405:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 406:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 407:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       else
 408:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 409:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 410:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 411:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 412:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 413:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 414:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 415:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 416:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 417:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 418:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 419:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 420:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 421:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 422:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 423:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 424:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 425:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 426:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 427:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 428:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 429:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     
 430:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 431:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 432:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 9


 433:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 434:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 435:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 436:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 437:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 438:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 439:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 440:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       else
 441:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 442:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 443:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 444:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 445:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 446:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     else
 447:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 448:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Check the HSI State */
 449:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 450:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 451:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 452:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 453:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 454:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 455:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 456:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 457:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Wait till HSI is ready */
 458:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 459:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 460:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 461:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 462:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 463:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 464:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 465:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****                 
 466:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 467:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 468:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 469:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       else
 470:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 471:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 472:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 473:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 474:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 475:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 476:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 477:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 478:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 479:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 480:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 481:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 482:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 483:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 484:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 485:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 486:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 487:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 488:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 489:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 10


 490:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 491:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 492:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 493:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     
 494:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check the LSI State */
 495:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 496:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 497:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 498:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 499:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 500:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 501:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 502:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 503:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 504:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 505:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 506:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 507:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 508:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 509:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 510:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 511:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /*  To have a fully stabilized clock in the specified range, a software delay of 1ms 
 512:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           should be added.*/
 513:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       RCC_Delay(1);
 514:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 515:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     else
 516:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 517:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 518:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 519:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 520:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 521:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 522:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 523:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 524:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 525:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 526:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 527:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 528:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 529:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 530:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 531:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 532:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 533:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 534:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 535:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 536:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 537:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     
 538:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 539:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 540:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 541:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 542:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 543:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 544:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 545:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 546:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       pwrclkchanged = SET;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 11


 547:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 548:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     
 549:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 550:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 551:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 552:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 553:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 554:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 555:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 556:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 557:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 558:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 559:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 560:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 561:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 562:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 563:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 564:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 565:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 566:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 567:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 568:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 569:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 570:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 571:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 572:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 573:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 574:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 575:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 576:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 577:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 578:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 579:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 580:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 581:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 582:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 583:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     else
 584:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 585:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 586:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 587:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 588:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 589:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 590:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 591:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 592:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 593:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 594:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 595:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 596:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 597:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 598:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 599:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 600:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 601:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 602:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 603:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 12


 604:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 605:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
 606:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL2 Configuration -----------------------*/
 607:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 608:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL2(RCC_OscInitStruct->PLL2.PLL2State));
 609:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL2.PLL2State) != RCC_PLL2_NONE)
 610:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 611:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* This bit can not be cleared if the PLL2 clock is used indirectly as system 
 612:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       clock (i.e. it is used as PLL clock entry that is used as system clock). */
 613:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE) && \
 614:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && \
 615:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         ((READ_BIT(RCC->CFGR2,RCC_CFGR2_PREDIV1SRC)) == RCC_CFGR2_PREDIV1SRC_PLL2))
 616:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 617:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 618:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 619:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     else
 620:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 621:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL2.PLL2State) == RCC_PLL2_ON)
 622:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 623:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 624:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL2_MUL(RCC_OscInitStruct->PLL2.PLL2MUL));
 625:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_HSE_PREDIV2(RCC_OscInitStruct->PLL2.HSEPrediv2Value));
 626:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 627:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Prediv2 can be written only when the PLLI2S is disabled. */
 628:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Return an error only if new value is different from the programmed value */
 629:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         if (HAL_IS_BIT_SET(RCC->CR,RCC_CR_PLL3ON) && \
 630:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           (__HAL_RCC_HSE_GET_PREDIV2() != RCC_OscInitStruct->PLL2.HSEPrediv2Value))
 631:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 632:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           return HAL_ERROR;
 633:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 634:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 635:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 636:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 637:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 638:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 639:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 640:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 641:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */
 642:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != RESET)
 643:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 644:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 645:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 646:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 647:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 648:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 649:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 650:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv2 factor --------------------------------*/
 651:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSE_PREDIV2_CONFIG(RCC_OscInitStruct->PLL2.HSEPrediv2Value);
 652:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 653:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Configure the main PLL2 multiplication factors. */
 654:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_CONFIG(RCC_OscInitStruct->PLL2.PLL2MUL);
 655:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 656:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Enable the main PLL2. */
 657:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_ENABLE();
 658:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 659:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 660:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 13


 661:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 662:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is ready */
 663:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  == RESET)
 664:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 665:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 666:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 667:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 668:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 669:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 670:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 671:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       else
 672:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 673:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****        /* Set PREDIV1 source to HSE */
 674:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         CLEAR_BIT(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC);
 675:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 676:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 677:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 678:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****  
 679:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 680:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 681:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 682:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */  
 683:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  != RESET)
 684:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 685:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 686:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 687:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 688:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 689:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 690:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 691:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 692:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 693:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 694:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
 695:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 696:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 697:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 698:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 699:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 700:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 701:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 702:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     { 
 703:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 704:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 705:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 706:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 707:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 708:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
 709:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 710:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 711:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 712:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 713:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 714:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 715:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 716:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 717:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 14


 718:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 719:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 720:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 721:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 722:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 723:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 724:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv factor --------------------------------*/
 725:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* It can be written only when the PLL is disabled. Not used in PLL source is different tha
 726:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         if(RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 727:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 728:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           /* Check the parameter */
 729:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_HSE_PREDIV(RCC_OscInitStruct->HSEPredivValue));
 730:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 731:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_PREDIV1_SOURCE(RCC_OscInitStruct->Prediv1Source));
 732:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           
 733:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 source */
 734:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
 735:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
 736:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 737:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 Value */
 738:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 739:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 740:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 741:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Configure the main PLL clock source and multiplication factors. */
 742:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 743:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 744:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Enable the main PLL. */
 745:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 746:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 747:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 748:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 749:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 750:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Wait till PLL is ready */
 751:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 752:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 753:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 754:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 755:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 756:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 757:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 758:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 759:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       else
 760:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 761:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 762:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 763:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****  
 764:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 765:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 766:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 767:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 768:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 769:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 770:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 771:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 772:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 773:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 774:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 15


 775:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 776:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 777:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     else
 778:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 779:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 780:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 781:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 782:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
 783:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   return HAL_OK;
 784:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
 785:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 786:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
 787:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 788:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 789:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 790:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 791:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 792:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 793:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 794:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 795:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *
 796:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 797:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 798:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 799:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 800:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *           
 801:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 802:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 803:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 804:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 805:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 806:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         currently used as system clock source.
 807:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @retval HAL status
 808:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
 809:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 810:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** {
 811:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 812:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
 813:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 814:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 815:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 816:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 817:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 818:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 819:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 820:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     (HCLK) of the device. */
 821:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 822:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 823:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 824:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 825:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {    
 826:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 827:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 828:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     
 829:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 830:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 831:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 16


 832:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 833:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 834:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 835:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 836:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 837:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
 838:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 839:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 840:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 841:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 842:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 843:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 844:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 845:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 846:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 847:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {    
 848:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 849:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     
 850:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 851:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 852:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 853:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 854:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 855:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 856:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 857:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 858:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 859:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 860:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 861:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 862:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 863:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 864:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 865:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 866:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 867:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 868:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 869:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     else
 870:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 871:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 872:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 873:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 874:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 875:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 876:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 877:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 878:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 879:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Get Start Tick */
 880:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 881:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     
 882:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 883:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 884:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 885:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 886:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 887:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 888:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 17


 889:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 890:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 891:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 892:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 893:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 894:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 895:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 896:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 897:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 898:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 899:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 900:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 901:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 902:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     else
 903:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 904:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 905:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 906:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 907:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 908:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 909:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 910:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 911:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }      
 912:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }    
 913:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 914:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 915:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 916:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {    
 917:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 918:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 919:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     
 920:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 921:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 922:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 923:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 924:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 925:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 926:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }    
 927:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
 928:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 929:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 930:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 931:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 932:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 933:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 934:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 935:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
 936:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 937:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 938:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 939:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 940:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 941:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 942:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****  
 943:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 944:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 945:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 18


 946:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 947:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 948:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
 949:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   return HAL_OK;
 950:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
 951:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 952:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
 953:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @}
 954:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
 955:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 956:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 957:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 958:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *
 959:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   @verbatim   
 960:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   ===============================================================================
 961:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 962:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   ===============================================================================  
 963:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     [..]
 964:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 965:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     frequencies.
 966:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 967:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   @endverbatim
 968:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @{
 969:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
 970:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 971:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
 972:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 973:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 974:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 975:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 976:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 977:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 978:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 979:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 980:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 981:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 982:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 983:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   @if STM32F105xC
 984:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
 985:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
 986:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
 987:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE      XT1 external 3-25 MHz oscillator clock selecte
 988:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 989:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   @endif
 990:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   @if STM32F107xC
 991:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
 992:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
 993:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
 994:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE XT1  external 3-25 MHz oscillator clock selected as
 995:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 996:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   @endif
 997:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 998:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 999:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
1000:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @retval None
1001:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
1002:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 19


1003:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** {
1004:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   GPIO_InitTypeDef gpio = {0U};
1005:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1006:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1007:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1008:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1009:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1010:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1011:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Prevent unused argument(s) compilation warning */
1012:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   UNUSED(RCC_MCOx);
1013:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   UNUSED(RCC_MCODiv);
1014:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1015:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
1016:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
1017:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
1018:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
1019:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
1020:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1021:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* MCO1 Clock Enable */
1022:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
1023:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1024:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
1025:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1026:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Configure the MCO clock source */
1027:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
1028:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
1029:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1030:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
1031:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
1032:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1033:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1034:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1035:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
1036:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         the Cortex-M3 NMI (Non-Maskable Interrupt) exception vector.  
1037:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @retval None
1038:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
1039:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1040:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** {
1041:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
1042:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
1043:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1044:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
1045:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
1046:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @retval None
1047:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
1048:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
1049:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** {
1050:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
1051:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
1052:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1053:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
1054:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
1055:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
1056:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
1057:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         constant and the selected clock source:
1058:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1059:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 20


1060:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
1061:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
1062:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
1063:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
1064:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
1065:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *               in voltage and temperature.
1066:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
1067:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1068:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1069:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *                have wrong result.
1070:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *                  
1071:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1072:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         value for HSE crystal.
1073:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *           
1074:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
1075:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
1076:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *           
1077:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1078:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1079:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         
1080:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @retval SYSCLK frequency
1081:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
1082:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1083:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** {
1084:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1085:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[14] = {0, 0, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 13};
1086:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
1087:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #else
1088:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[16] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16};
1089:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
1090:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
1091:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #else
1092:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[2] = {1, 2};
1093:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
1094:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1095:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif
1096:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
1097:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
1098:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1099:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   uint32_t prediv2 = 0U, pll2mul = 0U;
1100:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
1101:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1102:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
1103:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1104:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1105:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
1106:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1107:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
1108:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
1109:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
1110:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       break;
1111:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
1112:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
1113:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
1114:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
1115:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
1116:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 21


1117:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
1118:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> RCC_CFGR2_PREDIV1
1119:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #else
1120:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_
1121:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
1122:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1123:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1124:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         if(HAL_IS_BIT_SET(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC))
1125:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
1126:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           /* PLL2 selected as Prediv1 source */
1127:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           /* PLLCLK = PLL2CLK / PREDIV1 * PLLMUL with PLL2CLK = HSE/PREDIV2 * PLL2MUL */
1128:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           prediv2 = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> RCC_CFGR2_PREDIV2_Pos) + 1;
1129:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           pll2mul = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> RCC_CFGR2_PLL2MUL_Pos) + 2;
1130:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)(((uint64_t)HSE_VALUE * (uint64_t)pll2mul * (uint64_t)pllmul) / ((uint
1131:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
1132:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         else
1133:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
1134:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1135:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)((HSE_VALUE * pllmul) / prediv);
1136:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
1137:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1138:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* If PLLMUL was set to 13 means that it was to cover the case PLLMUL 6.5 (avoid using floa
1139:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* In this case need to divide pllclk by 2 */
1140:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         if (pllmul == aPLLMULFactorTable[(uint32_t)(RCC_CFGR_PLLMULL6_5) >> RCC_CFGR_PLLMULL_Pos])
1141:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
1142:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****             pllclk = pllclk / 2;
1143:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
1144:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #else
1145:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1146:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
1147:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
1148:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
1149:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       else
1150:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
1151:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1152:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
1153:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
1154:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       sysclockfreq = pllclk;
1155:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       break;
1156:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
1157:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1158:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     default: /* HSI used as system clock */
1159:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
1160:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
1161:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       break;
1162:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
1163:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
1164:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   return sysclockfreq;
1165:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
1166:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1167:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
1168:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1169:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1170:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1171:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * 
1172:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1173:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         and updated within this function
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 22


1174:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @retval HCLK frequency
1175:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
1176:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1177:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** {
1178:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   return SystemCoreClock;
1179:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
1180:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1181:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
1182:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1183:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1184:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1185:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @retval PCLK1 frequency
1186:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
1187:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1188:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** {
1189:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1190:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos
1191:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }    
1192:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1193:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
1194:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
1195:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1196:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1197:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @retval PCLK2 frequency
1198:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
1199:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1200:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** {
1201:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1202:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]
1203:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** } 
1204:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1205:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
1206:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1207:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1208:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1209:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * will be configured.
1210:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @retval None
1211:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
1212:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1213:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** {
1214:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1215:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1216:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1217:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1218:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
1219:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1220:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1221:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1222:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get the Prediv1 source --------------------------------------------------*/
1223:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->Prediv1Source = READ_BIT(RCC->CFGR2,RCC_CFGR2_PREDIV1SRC);
1224:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
1225:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1226:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1227:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
1228:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1229:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
1230:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 23


1231:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
1232:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1233:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1234:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
1235:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   else
1236:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1237:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1238:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
1239:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
1240:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1241:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1242:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
1243:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1244:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
1245:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
1246:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   else
1247:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1248:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1249:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
1250:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
1251:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_
1252:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
1253:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1254:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
1255:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1256:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
1257:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
1258:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1259:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1260:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1261:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
1262:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   else
1263:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1264:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1265:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
1266:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
1267:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1268:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
1269:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1270:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
1271:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
1272:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   else
1273:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1274:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1275:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
1276:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
1277:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1278:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1279:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
1280:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1281:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
1282:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
1283:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   else
1284:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1285:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
1286:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
1287:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 24


1288:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMULL);
1289:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
1290:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get the PLL2 configuration -----------------------------------------------*/
1291:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLL2ON) == RCC_CR_PLL2ON)
1292:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1293:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_ON;
1294:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
1295:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   else
1296:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1297:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_OFF;
1298:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
1299:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.HSEPrediv2Value = __HAL_RCC_HSE_GET_PREDIV2();
1300:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.PLL2MUL = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PLL2MUL);
1301:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
1302:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
1303:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1304:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
1305:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1306:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1307:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1308:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * contains the current clock configuration.
1309:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1310:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @retval None
1311:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
1312:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1313:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** {
1314:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1315:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1316:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1317:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1318:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1319:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
1320:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
1321:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1322:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
1323:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
1324:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1325:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
1326:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
1327:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1328:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
1329:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
1330:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1331:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
1332:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
1333:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if   defined(FLASH_ACR_LATENCY)
1334:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1335:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
1336:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #else
1337:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* For VALUE lines devices, only LATENCY_0 can be set*/
1338:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)FLASH_LATENCY_0; 
1339:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif
1340:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
1341:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1342:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
1343:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1344:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 25


1345:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @retval None
1346:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
1347:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1348:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** {
1349:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1350:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1351:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1352:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1353:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1354:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     
1355:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1356:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1357:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
1358:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
1359:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1360:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
1361:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief  This function provides delay (in milliseconds) based on CPU cycles method.
1362:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @param  mdelay: specifies the delay time length, in milliseconds.
1363:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @retval None
1364:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
1365:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** static void RCC_Delay(uint32_t mdelay)
1366:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** {
  26              		.loc 1 1366 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 82B0     		sub	sp, sp, #8
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
1367:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
  35              		.loc 1 1367 0
  36 0002 084B     		ldr	r3, .L4
  37 0004 1B68     		ldr	r3, [r3]
  38 0006 084A     		ldr	r2, .L4+4
  39 0008 A2FB0323 		umull	r2, r3, r2, r3
  40 000c 5B0A     		lsrs	r3, r3, #9
  41 000e 00FB03F0 		mul	r0, r0, r3
  42              	.LVL1:
  43 0012 0190     		str	r0, [sp, #4]
  44              	.L2:
  45              	.LBB4:
  46              	.LBB5:
  47              		.file 2 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include/cmsis_gcc.h"
   1:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @version  V4.30
   5:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @date     20. October 2015
   6:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
   9:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    All rights reserved.
  10:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 26


  13:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****      specific prior written permission.
  20:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    *
  21:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  34:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  35:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  38:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  39:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  41:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  45:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  46:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  47:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   @{
  51:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
  52:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  53:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
  54:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
  58:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
  60:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
  62:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  63:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  64:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
  65:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
  69:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 27


  70:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
  71:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
  73:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  74:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  75:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
  76:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
  77:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
  79:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
  80:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
  82:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
  83:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  84:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
  86:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
  87:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  88:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  89:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
  90:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
  91:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
  94:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
  96:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
  98:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  99:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 100:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 101:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 102:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 104:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 105:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 107:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 108:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 109:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 111:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 112:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 113:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 114:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 115:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 116:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 118:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 119:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 121:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 122:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 123:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 125:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 126:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 28


 127:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 128:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 129:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 130:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 132:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****     \return               xPSR Register value
 133:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 134:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 136:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 137:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 138:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 140:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 141:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 142:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 143:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 144:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 147:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 148:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 150:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 151:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 152:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 154:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 155:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 156:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 157:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 158:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 162:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 164:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 166:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 167:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 168:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 169:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 172:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 173:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 175:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 176:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 177:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 179:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 180:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 181:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 182:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 183:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 29


 184:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 186:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 188:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 190:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 192:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 193:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 194:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 195:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 196:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 198:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 199:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 201:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 202:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 203:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 205:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 206:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 207:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 208:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 209:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 210:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 213:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 215:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 217:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 218:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 219:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 221:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 222:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 223:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 226:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 228:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 230:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 231:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 232:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 233:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 234:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 237:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 239:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 30


 241:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 242:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 243:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 244:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 245:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 247:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 248:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 250:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 251:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 252:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 254:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 255:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 256:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 257:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 258:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 259:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 262:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 264:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 266:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 267:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 268:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 269:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 274:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 276:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 278:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 279:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 280:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 281:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 282:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 284:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 285:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 287:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 288:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 289:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 291:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 292:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 293:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 294:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 295:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 296:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 31


 298:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 299:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 301:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 303:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 304:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 306:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 307:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 309:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 310:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 311:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 314:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 316:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 318:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 319:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 321:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 323:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 324:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 325:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****    return(0);
 326:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 327:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 328:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 329:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 330:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 331:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 332:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 335:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 337:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 340:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 342:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 343:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 344:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 345:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 347:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 348:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 349:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 351:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 352:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 32


 355:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   @{
 356:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** */
 357:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 358:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 365:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 368:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 369:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 370:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 371:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 373:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 375:E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("nop");
  48              		.loc 2 375 0
  49              		.syntax unified
  50              	@ 375 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include/cmsis_gcc.h" 1
  51 0014 00BF     		nop
  52              	@ 0 "" 2
  53              		.thumb
  54              		.syntax unified
  55              	.LBE5:
  56              	.LBE4:
1368:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   do 
1369:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
1370:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     __NOP();
1371:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   } 
1372:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   while (Delay --);
  57              		.loc 1 1372 0
  58 0016 019B     		ldr	r3, [sp, #4]
  59 0018 5A1E     		subs	r2, r3, #1
  60 001a 0192     		str	r2, [sp, #4]
  61 001c 002B     		cmp	r3, #0
  62 001e F9D1     		bne	.L2
1373:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
  63              		.loc 1 1373 0
  64 0020 02B0     		add	sp, sp, #8
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 0
  67              		@ sp needed
  68 0022 7047     		bx	lr
  69              	.L5:
  70              		.align	2
  71              	.L4:
  72 0024 00000000 		.word	SystemCoreClock
  73 0028 D34D6210 		.word	274877907
  74              		.cfi_endproc
  75              	.LFE77:
  76              		.cantunwind
  77              		.fnend
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 33


  79              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  80              		.align	1
  81              		.global	HAL_RCC_DeInit
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu softvfp
  87              	HAL_RCC_DeInit:
  88              		.fnstart
  89              	.LFB64:
 219:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   uint32_t tickstart;
  90              		.loc 1 219 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94 0000 38B5     		push	{r3, r4, r5, lr}
  95              		.save {r3, r4, r5, lr}
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 16
  98              		.cfi_offset 3, -16
  99              		.cfi_offset 4, -12
 100              		.cfi_offset 5, -8
 101              		.cfi_offset 14, -4
 223:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 102              		.loc 1 223 0
 103 0002 FFF7FEFF 		bl	HAL_GetTick
 104              	.LVL2:
 105 0006 0446     		mov	r4, r0
 106              	.LVL3:
 226:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 107              		.loc 1 226 0
 108 0008 344A     		ldr	r2, .L23
 109 000a 1368     		ldr	r3, [r2]
 110 000c 43F00103 		orr	r3, r3, #1
 111 0010 1360     		str	r3, [r2]
 112              	.LVL4:
 113              	.L9:
 229:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 114              		.loc 1 229 0
 115 0012 324B     		ldr	r3, .L23
 116 0014 1B68     		ldr	r3, [r3]
 117 0016 13F0020F 		tst	r3, #2
 118 001a 06D1     		bne	.L7
 231:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 119              		.loc 1 231 0
 120 001c FFF7FEFF 		bl	HAL_GetTick
 121              	.LVL5:
 122 0020 001B     		subs	r0, r0, r4
 123 0022 0228     		cmp	r0, #2
 124 0024 F5D9     		bls	.L9
 233:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 125              		.loc 1 233 0
 126 0026 0320     		movs	r0, #3
 127              	.L8:
 346:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 128              		.loc 1 346 0
 129 0028 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 34


 130              	.LVL6:
 131              	.L7:
 238:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 132              		.loc 1 238 0
 133 002a 2C4D     		ldr	r5, .L23
 134 002c 2B68     		ldr	r3, [r5]
 135 002e 23F0F803 		bic	r3, r3, #248
 136 0032 43F08003 		orr	r3, r3, #128
 137 0036 2B60     		str	r3, [r5]
 241:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 138              		.loc 1 241 0
 139 0038 FFF7FEFF 		bl	HAL_GetTick
 140              	.LVL7:
 141 003c 0446     		mov	r4, r0
 142              	.LVL8:
 244:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 143              		.loc 1 244 0
 144 003e 0023     		movs	r3, #0
 145 0040 6B60     		str	r3, [r5, #4]
 146              	.LVL9:
 147              	.L11:
 247:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 148              		.loc 1 247 0
 149 0042 264B     		ldr	r3, .L23
 150 0044 5B68     		ldr	r3, [r3, #4]
 151 0046 13F00C0F 		tst	r3, #12
 152 004a 08D0     		beq	.L10
 249:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 153              		.loc 1 249 0
 154 004c FFF7FEFF 		bl	HAL_GetTick
 155              	.LVL10:
 156 0050 001B     		subs	r0, r0, r4
 157 0052 41F28833 		movw	r3, #5000
 158 0056 9842     		cmp	r0, r3
 159 0058 F3D9     		bls	.L11
 251:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 160              		.loc 1 251 0
 161 005a 0320     		movs	r0, #3
 162 005c E4E7     		b	.L8
 163              	.L10:
 256:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 164              		.loc 1 256 0
 165 005e 204B     		ldr	r3, .L23+4
 166 0060 204A     		ldr	r2, .L23+8
 167 0062 1A60     		str	r2, [r3]
 259:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 168              		.loc 1 259 0
 169 0064 0020     		movs	r0, #0
 170 0066 FFF7FEFF 		bl	HAL_InitTick
 171              	.LVL11:
 172 006a 08B1     		cbz	r0, .L22
 261:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 173              		.loc 1 261 0
 174 006c 0120     		movs	r0, #1
 175 006e DBE7     		b	.L8
 176              	.L22:
 265:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 35


 177              		.loc 1 265 0
 178 0070 FFF7FEFF 		bl	HAL_GetTick
 179              	.LVL12:
 180 0074 0446     		mov	r4, r0
 181              	.LVL13:
 268:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 182              		.loc 1 268 0
 183 0076 194A     		ldr	r2, .L23
 184 0078 1368     		ldr	r3, [r2]
 185 007a 23F08073 		bic	r3, r3, #16777216
 186 007e 1360     		str	r3, [r2]
 187              	.LVL14:
 188              	.L13:
 271:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 189              		.loc 1 271 0
 190 0080 164B     		ldr	r3, .L23
 191 0082 1B68     		ldr	r3, [r3]
 192 0084 13F0007F 		tst	r3, #33554432
 193 0088 06D0     		beq	.L12
 273:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 194              		.loc 1 273 0
 195 008a FFF7FEFF 		bl	HAL_GetTick
 196              	.LVL15:
 197 008e 001B     		subs	r0, r0, r4
 198 0090 0228     		cmp	r0, #2
 199 0092 F5D9     		bls	.L13
 275:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 200              		.loc 1 275 0
 201 0094 0320     		movs	r0, #3
 202 0096 C7E7     		b	.L8
 203              	.L12:
 280:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 204              		.loc 1 280 0
 205 0098 104D     		ldr	r5, .L23
 206 009a 0023     		movs	r3, #0
 207 009c 6B60     		str	r3, [r5, #4]
 283:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 208              		.loc 1 283 0
 209 009e FFF7FEFF 		bl	HAL_GetTick
 210              	.LVL16:
 211 00a2 0446     		mov	r4, r0
 212              	.LVL17:
 286:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 213              		.loc 1 286 0
 214 00a4 2B68     		ldr	r3, [r5]
 215 00a6 23F41023 		bic	r3, r3, #589824
 216 00aa 2B60     		str	r3, [r5]
 217              	.LVL18:
 218              	.L15:
 289:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 219              		.loc 1 289 0
 220 00ac 0B4B     		ldr	r3, .L23
 221 00ae 1B68     		ldr	r3, [r3]
 222 00b0 13F4003F 		tst	r3, #131072
 223 00b4 06D0     		beq	.L14
 291:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 224              		.loc 1 291 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 36


 225 00b6 FFF7FEFF 		bl	HAL_GetTick
 226              	.LVL19:
 227 00ba 001B     		subs	r0, r0, r4
 228 00bc 6428     		cmp	r0, #100
 229 00be F5D9     		bls	.L15
 293:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 230              		.loc 1 293 0
 231 00c0 0320     		movs	r0, #3
 232 00c2 B1E7     		b	.L8
 233              	.L14:
 298:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 234              		.loc 1 298 0
 235 00c4 054B     		ldr	r3, .L23
 236 00c6 1A68     		ldr	r2, [r3]
 237 00c8 22F48022 		bic	r2, r2, #262144
 238 00cc 1A60     		str	r2, [r3]
 340:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 239              		.loc 1 340 0
 240 00ce 5A6A     		ldr	r2, [r3, #36]
 241 00d0 42F08072 		orr	r2, r2, #16777216
 242 00d4 5A62     		str	r2, [r3, #36]
 343:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 243              		.loc 1 343 0
 244 00d6 0020     		movs	r0, #0
 245 00d8 9860     		str	r0, [r3, #8]
 345:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
 246              		.loc 1 345 0
 247 00da A5E7     		b	.L8
 248              	.L24:
 249              		.align	2
 250              	.L23:
 251 00dc 00100240 		.word	1073876992
 252 00e0 00000000 		.word	SystemCoreClock
 253 00e4 00127A00 		.word	8000000
 254              		.cfi_endproc
 255              	.LFE64:
 256              		.fnend
 258              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 259              		.align	1
 260              		.global	HAL_RCC_OscConfig
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu softvfp
 266              	HAL_RCC_OscConfig:
 267              		.fnstart
 268              	.LFB65:
 364:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 269              		.loc 1 364 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 8
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              	.LVL20:
 274 0000 70B5     		push	{r4, r5, r6, lr}
 275              		.save {r4, r5, r6, lr}
 276              	.LCFI3:
 277              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 37


 278              		.cfi_offset 4, -16
 279              		.cfi_offset 5, -12
 280              		.cfi_offset 6, -8
 281              		.cfi_offset 14, -4
 282              		.pad #8
 283 0002 82B0     		sub	sp, sp, #8
 284              	.LCFI4:
 285              		.cfi_def_cfa_offset 24
 286 0004 0446     		mov	r4, r0
 287              	.LVL21:
 372:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 288              		.loc 1 372 0
 289 0006 0368     		ldr	r3, [r0]
 290 0008 13F0010F 		tst	r3, #1
 291 000c 2CD0     		beq	.L26
 378:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 292              		.loc 1 378 0
 293 000e AB4B     		ldr	r3, .L102
 294 0010 5B68     		ldr	r3, [r3, #4]
 295 0012 03F00C03 		and	r3, r3, #12
 379:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 296              		.loc 1 379 0
 297 0016 042B     		cmp	r3, #4
 298 0018 1DD0     		beq	.L27
 379:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 299              		.loc 1 379 0 is_stmt 0 discriminator 2
 300 001a A84B     		ldr	r3, .L102
 301 001c 5B68     		ldr	r3, [r3, #4]
 302 001e 03F00C03 		and	r3, r3, #12
 303 0022 082B     		cmp	r3, #8
 304 0024 12D0     		beq	.L91
 305              	.L28:
 389:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 306              		.loc 1 389 0 is_stmt 1
 307 0026 6368     		ldr	r3, [r4, #4]
 308 0028 B3F5803F 		cmp	r3, #65536
 309 002c 41D0     		beq	.L92
 389:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 310              		.loc 1 389 0 is_stmt 0 discriminator 2
 311 002e 002B     		cmp	r3, #0
 312 0030 55D1     		bne	.L33
 389:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 313              		.loc 1 389 0 discriminator 3
 314 0032 03F18043 		add	r3, r3, #1073741824
 315 0036 03F50433 		add	r3, r3, #135168
 316 003a 1A68     		ldr	r2, [r3]
 317 003c 22F48032 		bic	r2, r2, #65536
 318 0040 1A60     		str	r2, [r3]
 319 0042 1A68     		ldr	r2, [r3]
 320 0044 22F48022 		bic	r2, r2, #262144
 321 0048 1A60     		str	r2, [r3]
 322 004a 37E0     		b	.L32
 323              	.L91:
 379:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 324              		.loc 1 379 0 is_stmt 1 discriminator 3
 325 004c 9B4B     		ldr	r3, .L102
 326 004e 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 38


 327 0050 13F4803F 		tst	r3, #65536
 328 0054 E7D0     		beq	.L28
 329              	.L27:
 381:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 330              		.loc 1 381 0
 331 0056 994B     		ldr	r3, .L102
 332 0058 1B68     		ldr	r3, [r3]
 333 005a 13F4003F 		tst	r3, #131072
 334 005e 03D0     		beq	.L26
 381:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 335              		.loc 1 381 0 is_stmt 0 discriminator 1
 336 0060 6368     		ldr	r3, [r4, #4]
 337 0062 002B     		cmp	r3, #0
 338 0064 00F0AA81 		beq	.L93
 339              	.LVL22:
 340              	.L26:
 424:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 341              		.loc 1 424 0 is_stmt 1
 342 0068 2368     		ldr	r3, [r4]
 343 006a 13F0020F 		tst	r3, #2
 344 006e 76D0     		beq	.L38
 431:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 345              		.loc 1 431 0
 346 0070 924B     		ldr	r3, .L102
 347 0072 5B68     		ldr	r3, [r3, #4]
 432:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 348              		.loc 1 432 0
 349 0074 13F00C0F 		tst	r3, #12
 350 0078 5FD0     		beq	.L39
 432:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 351              		.loc 1 432 0 is_stmt 0 discriminator 2
 352 007a 904B     		ldr	r3, .L102
 353 007c 5B68     		ldr	r3, [r3, #4]
 354 007e 03F00C03 		and	r3, r3, #12
 355 0082 082B     		cmp	r3, #8
 356 0084 54D0     		beq	.L94
 357              	.L40:
 449:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 358              		.loc 1 449 0 is_stmt 1
 359 0086 2369     		ldr	r3, [r4, #16]
 360 0088 002B     		cmp	r3, #0
 361 008a 40F08180 		bne	.L41
 472:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 362              		.loc 1 472 0
 363 008e 8C4B     		ldr	r3, .L102+4
 364 0090 0022     		movs	r2, #0
 365 0092 1A60     		str	r2, [r3]
 475:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 366              		.loc 1 475 0
 367 0094 FFF7FEFF 		bl	HAL_GetTick
 368              	.LVL23:
 369 0098 0546     		mov	r5, r0
 370              	.LVL24:
 371              	.L46:
 478:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 372              		.loc 1 478 0
 373 009a 884B     		ldr	r3, .L102
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 39


 374 009c 1B68     		ldr	r3, [r3]
 375 009e 13F0020F 		tst	r3, #2
 376 00a2 5CD0     		beq	.L38
 480:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 377              		.loc 1 480 0
 378 00a4 FFF7FEFF 		bl	HAL_GetTick
 379              	.LVL25:
 380 00a8 401B     		subs	r0, r0, r5
 381 00aa 0228     		cmp	r0, #2
 382 00ac F5D9     		bls	.L46
 482:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 383              		.loc 1 482 0
 384 00ae 0320     		movs	r0, #3
 385 00b0 87E1     		b	.L31
 386              	.LVL26:
 387              	.L92:
 389:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 388              		.loc 1 389 0 discriminator 1
 389 00b2 824A     		ldr	r2, .L102
 390 00b4 1368     		ldr	r3, [r2]
 391 00b6 43F48033 		orr	r3, r3, #65536
 392 00ba 1360     		str	r3, [r2]
 393              	.L32:
 393:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 394              		.loc 1 393 0
 395 00bc 6368     		ldr	r3, [r4, #4]
 396 00be 43B3     		cbz	r3, .L35
 396:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 397              		.loc 1 396 0
 398 00c0 FFF7FEFF 		bl	HAL_GetTick
 399              	.LVL27:
 400 00c4 0546     		mov	r5, r0
 401              	.LVL28:
 402              	.L36:
 399:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 403              		.loc 1 399 0
 404 00c6 7D4B     		ldr	r3, .L102
 405 00c8 1B68     		ldr	r3, [r3]
 406 00ca 13F4003F 		tst	r3, #131072
 407 00ce CBD1     		bne	.L26
 401:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 408              		.loc 1 401 0
 409 00d0 FFF7FEFF 		bl	HAL_GetTick
 410              	.LVL29:
 411 00d4 401B     		subs	r0, r0, r5
 412 00d6 6428     		cmp	r0, #100
 413 00d8 F5D9     		bls	.L36
 403:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 414              		.loc 1 403 0
 415 00da 0320     		movs	r0, #3
 416 00dc 71E1     		b	.L31
 417              	.LVL30:
 418              	.L33:
 389:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 419              		.loc 1 389 0 discriminator 4
 420 00de B3F5A02F 		cmp	r3, #327680
 421 00e2 09D0     		beq	.L95
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 40


 389:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 422              		.loc 1 389 0 is_stmt 0 discriminator 6
 423 00e4 754B     		ldr	r3, .L102
 424 00e6 1A68     		ldr	r2, [r3]
 425 00e8 22F48032 		bic	r2, r2, #65536
 426 00ec 1A60     		str	r2, [r3]
 427 00ee 1A68     		ldr	r2, [r3]
 428 00f0 22F48022 		bic	r2, r2, #262144
 429 00f4 1A60     		str	r2, [r3]
 430 00f6 E1E7     		b	.L32
 431              	.L95:
 389:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 432              		.loc 1 389 0 discriminator 5
 433 00f8 03F18043 		add	r3, r3, #1073741824
 434 00fc A3F53C33 		sub	r3, r3, #192512
 435 0100 1A68     		ldr	r2, [r3]
 436 0102 42F48022 		orr	r2, r2, #262144
 437 0106 1A60     		str	r2, [r3]
 438 0108 1A68     		ldr	r2, [r3]
 439 010a 42F48032 		orr	r2, r2, #65536
 440 010e 1A60     		str	r2, [r3]
 441 0110 D4E7     		b	.L32
 442              	.L35:
 410:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 443              		.loc 1 410 0 is_stmt 1
 444 0112 FFF7FEFF 		bl	HAL_GetTick
 445              	.LVL31:
 446 0116 0546     		mov	r5, r0
 447              	.LVL32:
 448              	.L37:
 413:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 449              		.loc 1 413 0
 450 0118 684B     		ldr	r3, .L102
 451 011a 1B68     		ldr	r3, [r3]
 452 011c 13F4003F 		tst	r3, #131072
 453 0120 A2D0     		beq	.L26
 415:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 454              		.loc 1 415 0
 455 0122 FFF7FEFF 		bl	HAL_GetTick
 456              	.LVL33:
 457 0126 401B     		subs	r0, r0, r5
 458 0128 6428     		cmp	r0, #100
 459 012a F5D9     		bls	.L37
 417:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 460              		.loc 1 417 0
 461 012c 0320     		movs	r0, #3
 462 012e 48E1     		b	.L31
 463              	.LVL34:
 464              	.L94:
 432:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 465              		.loc 1 432 0 discriminator 3
 466 0130 624B     		ldr	r3, .L102
 467 0132 5B68     		ldr	r3, [r3, #4]
 468 0134 13F4803F 		tst	r3, #65536
 469 0138 A5D1     		bne	.L40
 470              	.L39:
 435:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 41


 471              		.loc 1 435 0
 472 013a 604B     		ldr	r3, .L102
 473 013c 1B68     		ldr	r3, [r3]
 474 013e 13F0020F 		tst	r3, #2
 475 0142 04D0     		beq	.L43
 435:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 476              		.loc 1 435 0 is_stmt 0 discriminator 1
 477 0144 2369     		ldr	r3, [r4, #16]
 478 0146 012B     		cmp	r3, #1
 479 0148 01D0     		beq	.L43
 437:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 480              		.loc 1 437 0 is_stmt 1
 481 014a 0120     		movs	r0, #1
 482 014c 39E1     		b	.L31
 483              	.L43:
 443:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 484              		.loc 1 443 0
 485 014e 5B4A     		ldr	r2, .L102
 486 0150 1368     		ldr	r3, [r2]
 487 0152 23F0F803 		bic	r3, r3, #248
 488 0156 6169     		ldr	r1, [r4, #20]
 489 0158 43EAC103 		orr	r3, r3, r1, lsl #3
 490 015c 1360     		str	r3, [r2]
 491              	.L38:
 489:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 492              		.loc 1 489 0
 493 015e 2368     		ldr	r3, [r4]
 494 0160 13F0080F 		tst	r3, #8
 495 0164 32D0     		beq	.L47
 495:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 496              		.loc 1 495 0
 497 0166 A369     		ldr	r3, [r4, #24]
 498 0168 002B     		cmp	r3, #0
 499 016a 5BD0     		beq	.L48
 498:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 500              		.loc 1 498 0
 501 016c 554B     		ldr	r3, .L102+8
 502 016e 0122     		movs	r2, #1
 503 0170 1A60     		str	r2, [r3]
 501:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 504              		.loc 1 501 0
 505 0172 FFF7FEFF 		bl	HAL_GetTick
 506              	.LVL35:
 507 0176 0546     		mov	r5, r0
 508              	.LVL36:
 509              	.L50:
 504:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 510              		.loc 1 504 0
 511 0178 504B     		ldr	r3, .L102
 512 017a 5B6A     		ldr	r3, [r3, #36]
 513 017c 13F0020F 		tst	r3, #2
 514 0180 21D1     		bne	.L49
 506:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 515              		.loc 1 506 0
 516 0182 FFF7FEFF 		bl	HAL_GetTick
 517              	.LVL37:
 518 0186 401B     		subs	r0, r0, r5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 42


 519 0188 0228     		cmp	r0, #2
 520 018a F5D9     		bls	.L50
 508:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 521              		.loc 1 508 0
 522 018c 0320     		movs	r0, #3
 523 018e 18E1     		b	.L31
 524              	.LVL38:
 525              	.L41:
 452:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 526              		.loc 1 452 0
 527 0190 4B4B     		ldr	r3, .L102+4
 528 0192 0122     		movs	r2, #1
 529 0194 1A60     		str	r2, [r3]
 455:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 530              		.loc 1 455 0
 531 0196 FFF7FEFF 		bl	HAL_GetTick
 532              	.LVL39:
 533 019a 0546     		mov	r5, r0
 534              	.LVL40:
 535              	.L45:
 458:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 536              		.loc 1 458 0
 537 019c 474B     		ldr	r3, .L102
 538 019e 1B68     		ldr	r3, [r3]
 539 01a0 13F0020F 		tst	r3, #2
 540 01a4 06D1     		bne	.L44
 460:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 541              		.loc 1 460 0
 542 01a6 FFF7FEFF 		bl	HAL_GetTick
 543              	.LVL41:
 544 01aa 401B     		subs	r0, r0, r5
 545 01ac 0228     		cmp	r0, #2
 546 01ae F5D9     		bls	.L45
 462:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 547              		.loc 1 462 0
 548 01b0 0320     		movs	r0, #3
 549 01b2 06E1     		b	.L31
 550              	.L44:
 467:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 551              		.loc 1 467 0
 552 01b4 414A     		ldr	r2, .L102
 553 01b6 1368     		ldr	r3, [r2]
 554 01b8 23F0F803 		bic	r3, r3, #248
 555 01bc 6169     		ldr	r1, [r4, #20]
 556 01be 43EAC103 		orr	r3, r3, r1, lsl #3
 557 01c2 1360     		str	r3, [r2]
 558 01c4 CBE7     		b	.L38
 559              	.L49:
 513:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 560              		.loc 1 513 0
 561 01c6 0120     		movs	r0, #1
 562 01c8 FFF7FEFF 		bl	_ZL9RCC_Delaym
 563              	.LVL42:
 564              	.L47:
 565              	.LBB6:
 534:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 566              		.loc 1 534 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 43


 567 01cc 2368     		ldr	r3, [r4]
 568 01ce 13F0040F 		tst	r3, #4
 569 01d2 00F09780 		beq	.L52
 570              	.LVL43:
 571              	.LBB7:
 572              	.LBB8:
 543:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 573              		.loc 1 543 0
 574 01d6 394B     		ldr	r3, .L102
 575 01d8 DB69     		ldr	r3, [r3, #28]
 576 01da 13F0805F 		tst	r3, #268435456
 577 01de 33D1     		bne	.L78
 578              	.LBB9:
 579              	.LBB10:
 545:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       pwrclkchanged = SET;
 580              		.loc 1 545 0
 581 01e0 364B     		ldr	r3, .L102
 582 01e2 DA69     		ldr	r2, [r3, #28]
 583 01e4 42F08052 		orr	r2, r2, #268435456
 584 01e8 DA61     		str	r2, [r3, #28]
 585 01ea DB69     		ldr	r3, [r3, #28]
 586 01ec 03F08053 		and	r3, r3, #268435456
 587 01f0 0193     		str	r3, [sp, #4]
 588 01f2 019B     		ldr	r3, [sp, #4]
 589              	.LVL44:
 590              	.LBE10:
 546:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 591              		.loc 1 546 0
 592 01f4 0125     		movs	r5, #1
 593              	.LVL45:
 594              	.L53:
 595              	.LBE9:
 596              	.LBE8:
 549:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 597              		.loc 1 549 0
 598 01f6 344B     		ldr	r3, .L102+12
 599 01f8 1B68     		ldr	r3, [r3]
 600 01fa 13F4807F 		tst	r3, #256
 601 01fe 25D0     		beq	.L96
 602              	.L54:
 567:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 603              		.loc 1 567 0
 604 0200 E368     		ldr	r3, [r4, #12]
 605 0202 012B     		cmp	r3, #1
 606 0204 36D0     		beq	.L97
 567:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 607              		.loc 1 567 0 is_stmt 0 discriminator 2
 608 0206 002B     		cmp	r3, #0
 609 0208 4CD1     		bne	.L58
 567:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 610              		.loc 1 567 0 discriminator 3
 611 020a 03F18043 		add	r3, r3, #1073741824
 612 020e 03F50433 		add	r3, r3, #135168
 613 0212 1A6A     		ldr	r2, [r3, #32]
 614 0214 22F00102 		bic	r2, r2, #1
 615 0218 1A62     		str	r2, [r3, #32]
 616 021a 1A6A     		ldr	r2, [r3, #32]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 44


 617 021c 22F00402 		bic	r2, r2, #4
 618 0220 1A62     		str	r2, [r3, #32]
 619 0222 2CE0     		b	.L57
 620              	.LVL46:
 621              	.L48:
 622              	.LBE7:
 623              	.LBE6:
 518:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 624              		.loc 1 518 0 is_stmt 1
 625 0224 274B     		ldr	r3, .L102+8
 626 0226 0022     		movs	r2, #0
 627 0228 1A60     		str	r2, [r3]
 521:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 628              		.loc 1 521 0
 629 022a FFF7FEFF 		bl	HAL_GetTick
 630              	.LVL47:
 631 022e 0546     		mov	r5, r0
 632              	.LVL48:
 633              	.L51:
 524:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 634              		.loc 1 524 0
 635 0230 224B     		ldr	r3, .L102
 636 0232 5B6A     		ldr	r3, [r3, #36]
 637 0234 13F0020F 		tst	r3, #2
 638 0238 C8D0     		beq	.L47
 526:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 639              		.loc 1 526 0
 640 023a FFF7FEFF 		bl	HAL_GetTick
 641              	.LVL49:
 642 023e 401B     		subs	r0, r0, r5
 643 0240 0228     		cmp	r0, #2
 644 0242 F5D9     		bls	.L51
 528:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 645              		.loc 1 528 0
 646 0244 0320     		movs	r0, #3
 647 0246 BCE0     		b	.L31
 648              	.LVL50:
 649              	.L78:
 650              	.LBB13:
 651              	.LBB11:
 536:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     
 652              		.loc 1 536 0
 653 0248 0025     		movs	r5, #0
 654 024a D4E7     		b	.L53
 655              	.LVL51:
 656              	.L96:
 552:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 657              		.loc 1 552 0
 658 024c 1E4A     		ldr	r2, .L102+12
 659 024e 1368     		ldr	r3, [r2]
 660 0250 43F48073 		orr	r3, r3, #256
 661 0254 1360     		str	r3, [r2]
 555:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 662              		.loc 1 555 0
 663 0256 FFF7FEFF 		bl	HAL_GetTick
 664              	.LVL52:
 665 025a 0646     		mov	r6, r0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 45


 666              	.LVL53:
 667              	.L55:
 557:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 668              		.loc 1 557 0
 669 025c 1A4B     		ldr	r3, .L102+12
 670 025e 1B68     		ldr	r3, [r3]
 671 0260 13F4807F 		tst	r3, #256
 672 0264 CCD1     		bne	.L54
 559:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 673              		.loc 1 559 0
 674 0266 FFF7FEFF 		bl	HAL_GetTick
 675              	.LVL54:
 676 026a 801B     		subs	r0, r0, r6
 677 026c 6428     		cmp	r0, #100
 678 026e F5D9     		bls	.L55
 561:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 679              		.loc 1 561 0
 680 0270 0320     		movs	r0, #3
 681 0272 A6E0     		b	.L31
 682              	.LVL55:
 683              	.L97:
 567:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 684              		.loc 1 567 0 discriminator 1
 685 0274 114A     		ldr	r2, .L102
 686 0276 136A     		ldr	r3, [r2, #32]
 687 0278 43F00103 		orr	r3, r3, #1
 688 027c 1362     		str	r3, [r2, #32]
 689              	.L57:
 569:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 690              		.loc 1 569 0
 691 027e E368     		ldr	r3, [r4, #12]
 692 0280 73B3     		cbz	r3, .L60
 572:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 693              		.loc 1 572 0
 694 0282 FFF7FEFF 		bl	HAL_GetTick
 695              	.LVL56:
 696 0286 0646     		mov	r6, r0
 697              	.LVL57:
 698              	.L62:
 575:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 699              		.loc 1 575 0
 700 0288 0C4B     		ldr	r3, .L102
 701 028a 1B6A     		ldr	r3, [r3, #32]
 702 028c 13F0020F 		tst	r3, #2
 703 0290 37D1     		bne	.L61
 577:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 704              		.loc 1 577 0
 705 0292 FFF7FEFF 		bl	HAL_GetTick
 706              	.LVL58:
 707 0296 801B     		subs	r0, r0, r6
 708 0298 41F28833 		movw	r3, #5000
 709 029c 9842     		cmp	r0, r3
 710 029e F3D9     		bls	.L62
 579:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 711              		.loc 1 579 0
 712 02a0 0320     		movs	r0, #3
 713 02a2 8EE0     		b	.L31
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 46


 714              	.LVL59:
 715              	.L58:
 567:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 716              		.loc 1 567 0 discriminator 4
 717 02a4 052B     		cmp	r3, #5
 718 02a6 11D0     		beq	.L98
 567:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 719              		.loc 1 567 0 is_stmt 0 discriminator 6
 720 02a8 044B     		ldr	r3, .L102
 721 02aa 1A6A     		ldr	r2, [r3, #32]
 722 02ac 22F00102 		bic	r2, r2, #1
 723 02b0 1A62     		str	r2, [r3, #32]
 724 02b2 1A6A     		ldr	r2, [r3, #32]
 725 02b4 22F00402 		bic	r2, r2, #4
 726 02b8 1A62     		str	r2, [r3, #32]
 727 02ba E0E7     		b	.L57
 728              	.L103:
 729              		.align	2
 730              	.L102:
 731 02bc 00100240 		.word	1073876992
 732 02c0 00004242 		.word	1111621632
 733 02c4 80044242 		.word	1111622784
 734 02c8 00700040 		.word	1073770496
 735              	.L98:
 567:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 736              		.loc 1 567 0 discriminator 5
 737 02cc 414B     		ldr	r3, .L104
 738 02ce 1A6A     		ldr	r2, [r3, #32]
 739 02d0 42F00402 		orr	r2, r2, #4
 740 02d4 1A62     		str	r2, [r3, #32]
 741 02d6 1A6A     		ldr	r2, [r3, #32]
 742 02d8 42F00102 		orr	r2, r2, #1
 743 02dc 1A62     		str	r2, [r3, #32]
 744 02de CEE7     		b	.L57
 745              	.L60:
 586:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       
 746              		.loc 1 586 0 is_stmt 1
 747 02e0 FFF7FEFF 		bl	HAL_GetTick
 748              	.LVL60:
 749 02e4 0646     		mov	r6, r0
 750              	.LVL61:
 751              	.L63:
 589:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 752              		.loc 1 589 0
 753 02e6 3B4B     		ldr	r3, .L104
 754 02e8 1B6A     		ldr	r3, [r3, #32]
 755 02ea 13F0020F 		tst	r3, #2
 756 02ee 08D0     		beq	.L61
 591:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 757              		.loc 1 591 0
 758 02f0 FFF7FEFF 		bl	HAL_GetTick
 759              	.LVL62:
 760 02f4 801B     		subs	r0, r0, r6
 761 02f6 41F28833 		movw	r3, #5000
 762 02fa 9842     		cmp	r0, r3
 763 02fc F3D9     		bls	.L63
 593:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 47


 764              		.loc 1 593 0
 765 02fe 0320     		movs	r0, #3
 766 0300 5FE0     		b	.L31
 767              	.L61:
 599:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 768              		.loc 1 599 0
 769 0302 E5B9     		cbnz	r5, .L99
 770              	.LVL63:
 771              	.L52:
 772              	.LBE11:
 773              	.LBE13:
 698:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 774              		.loc 1 698 0
 775 0304 E369     		ldr	r3, [r4, #28]
 776 0306 002B     		cmp	r3, #0
 777 0308 5AD0     		beq	.L82
 701:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     { 
 778              		.loc 1 701 0
 779 030a 324A     		ldr	r2, .L104
 780 030c 5268     		ldr	r2, [r2, #4]
 781 030e 02F00C02 		and	r2, r2, #12
 782 0312 082A     		cmp	r2, #8
 783 0314 57D0     		beq	.L83
 703:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 784              		.loc 1 703 0
 785 0316 022B     		cmp	r3, #2
 786 0318 17D0     		beq	.L100
 762:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****  
 787              		.loc 1 762 0
 788 031a 2F4B     		ldr	r3, .L104+4
 789 031c 0022     		movs	r2, #0
 790 031e 1A60     		str	r2, [r3]
 765:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 791              		.loc 1 765 0
 792 0320 FFF7FEFF 		bl	HAL_GetTick
 793              	.LVL64:
 794 0324 0446     		mov	r4, r0
 795              	.LVL65:
 796              	.L69:
 768:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 797              		.loc 1 768 0
 798 0326 2B4B     		ldr	r3, .L104
 799 0328 1B68     		ldr	r3, [r3]
 800 032a 13F0007F 		tst	r3, #33554432
 801 032e 4ED0     		beq	.L87
 770:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 802              		.loc 1 770 0
 803 0330 FFF7FEFF 		bl	HAL_GetTick
 804              	.LVL66:
 805 0334 001B     		subs	r0, r0, r4
 806 0336 0228     		cmp	r0, #2
 807 0338 F5D9     		bls	.L69
 772:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 808              		.loc 1 772 0
 809 033a 0320     		movs	r0, #3
 810 033c 41E0     		b	.L31
 811              	.LVL67:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 48


 812              	.L99:
 813              	.LBB14:
 814              	.LBB12:
 601:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 815              		.loc 1 601 0
 816 033e 254A     		ldr	r2, .L104
 817 0340 D369     		ldr	r3, [r2, #28]
 818 0342 23F08053 		bic	r3, r3, #268435456
 819 0346 D361     		str	r3, [r2, #28]
 820 0348 DCE7     		b	.L52
 821              	.LVL68:
 822              	.L100:
 823              	.LBE12:
 824              	.LBE14:
 710:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 825              		.loc 1 710 0
 826 034a 234B     		ldr	r3, .L104+4
 827 034c 0022     		movs	r2, #0
 828 034e 1A60     		str	r2, [r3]
 713:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 829              		.loc 1 713 0
 830 0350 FFF7FEFF 		bl	HAL_GetTick
 831              	.LVL69:
 832 0354 0546     		mov	r5, r0
 833              	.LVL70:
 834              	.L66:
 716:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 835              		.loc 1 716 0
 836 0356 1F4B     		ldr	r3, .L104
 837 0358 1B68     		ldr	r3, [r3]
 838 035a 13F0007F 		tst	r3, #33554432
 839 035e 06D0     		beq	.L65
 718:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 840              		.loc 1 718 0
 841 0360 FFF7FEFF 		bl	HAL_GetTick
 842              	.LVL71:
 843 0364 401B     		subs	r0, r0, r5
 844 0366 0228     		cmp	r0, #2
 845 0368 F5D9     		bls	.L66
 720:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 846              		.loc 1 720 0
 847 036a 0320     		movs	r0, #3
 848 036c 29E0     		b	.L31
 849              	.L65:
 726:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 850              		.loc 1 726 0
 851 036e 236A     		ldr	r3, [r4, #32]
 852 0370 B3F5803F 		cmp	r3, #65536
 853 0374 1AD0     		beq	.L101
 854              	.L67:
 742:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 855              		.loc 1 742 0
 856 0376 1749     		ldr	r1, .L104
 857 0378 4B68     		ldr	r3, [r1, #4]
 858 037a 23F47413 		bic	r3, r3, #3997696
 859 037e 226A     		ldr	r2, [r4, #32]
 860 0380 606A     		ldr	r0, [r4, #36]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 49


 861 0382 0243     		orrs	r2, r2, r0
 862 0384 1343     		orrs	r3, r3, r2
 863 0386 4B60     		str	r3, [r1, #4]
 745:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 864              		.loc 1 745 0
 865 0388 134B     		ldr	r3, .L104+4
 866 038a 0122     		movs	r2, #1
 867 038c 1A60     		str	r2, [r3]
 748:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         
 868              		.loc 1 748 0
 869 038e FFF7FEFF 		bl	HAL_GetTick
 870              	.LVL72:
 871 0392 0446     		mov	r4, r0
 872              	.LVL73:
 873              	.L68:
 751:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 874              		.loc 1 751 0
 875 0394 0F4B     		ldr	r3, .L104
 876 0396 1B68     		ldr	r3, [r3]
 877 0398 13F0007F 		tst	r3, #33554432
 878 039c 15D1     		bne	.L85
 753:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           {
 879              		.loc 1 753 0
 880 039e FFF7FEFF 		bl	HAL_GetTick
 881              	.LVL74:
 882 03a2 001B     		subs	r0, r0, r4
 883 03a4 0228     		cmp	r0, #2
 884 03a6 F5D9     		bls	.L68
 755:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****           }
 885              		.loc 1 755 0
 886 03a8 0320     		movs	r0, #3
 887 03aa 0AE0     		b	.L31
 888              	.LVL75:
 889              	.L101:
 738:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 890              		.loc 1 738 0
 891 03ac 094A     		ldr	r2, .L104
 892 03ae 5368     		ldr	r3, [r2, #4]
 893 03b0 23F40033 		bic	r3, r3, #131072
 894 03b4 A168     		ldr	r1, [r4, #8]
 895 03b6 0B43     		orrs	r3, r3, r1
 896 03b8 5360     		str	r3, [r2, #4]
 897 03ba DCE7     		b	.L67
 898              	.LVL76:
 899              	.L93:
 383:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 900              		.loc 1 383 0
 901 03bc 0120     		movs	r0, #1
 902              	.LVL77:
 903 03be 00E0     		b	.L31
 904              	.LVL78:
 905              	.L82:
 783:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
 906              		.loc 1 783 0
 907 03c0 0020     		movs	r0, #0
 908              	.LVL79:
 909              	.L31:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 50


 784:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 910              		.loc 1 784 0
 911 03c2 02B0     		add	sp, sp, #8
 912              	.LCFI5:
 913              		.cfi_remember_state
 914              		.cfi_def_cfa_offset 16
 915              		@ sp needed
 916 03c4 70BD     		pop	{r4, r5, r6, pc}
 917              	.LVL80:
 918              	.L83:
 919              	.LCFI6:
 920              		.cfi_restore_state
 779:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 921              		.loc 1 779 0
 922 03c6 0120     		movs	r0, #1
 923 03c8 FBE7     		b	.L31
 924              	.LVL81:
 925              	.L85:
 783:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
 926              		.loc 1 783 0
 927 03ca 0020     		movs	r0, #0
 928 03cc F9E7     		b	.L31
 929              	.L87:
 930 03ce 0020     		movs	r0, #0
 931 03d0 F7E7     		b	.L31
 932              	.L105:
 933 03d2 00BF     		.align	2
 934              	.L104:
 935 03d4 00100240 		.word	1073876992
 936 03d8 60004242 		.word	1111621728
 937              		.cfi_endproc
 938              	.LFE65:
 939              		.fnend
 941              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 942              		.align	1
 943              		.global	HAL_RCC_MCOConfig
 944              		.syntax unified
 945              		.thumb
 946              		.thumb_func
 947              		.fpu softvfp
 949              	HAL_RCC_MCOConfig:
 950              		.fnstart
 951              	.LFB67:
1003:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   GPIO_InitTypeDef gpio = {0U};
 952              		.loc 1 1003 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 24
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              	.LVL82:
 957 0000 30B5     		push	{r4, r5, lr}
 958              		.save {r4, r5, lr}
 959              	.LCFI7:
 960              		.cfi_def_cfa_offset 12
 961              		.cfi_offset 4, -12
 962              		.cfi_offset 5, -8
 963              		.cfi_offset 14, -4
 964              		.pad #28
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 51


 965 0002 87B0     		sub	sp, sp, #28
 966              	.LCFI8:
 967              		.cfi_def_cfa_offset 40
 968 0004 0D46     		mov	r5, r1
1004:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 969              		.loc 1 1004 0
 970 0006 0023     		movs	r3, #0
 971 0008 0493     		str	r3, [sp, #16]
1016:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 972              		.loc 1 1016 0
 973 000a 0223     		movs	r3, #2
 974 000c 0393     		str	r3, [sp, #12]
1017:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 975              		.loc 1 1017 0
 976 000e 0323     		movs	r3, #3
 977 0010 0593     		str	r3, [sp, #20]
1019:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 978              		.loc 1 1019 0
 979 0012 4FF48073 		mov	r3, #256
 980 0016 0293     		str	r3, [sp, #8]
 981              	.LBB15:
1022:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 982              		.loc 1 1022 0
 983 0018 0A4C     		ldr	r4, .L108
 984 001a A369     		ldr	r3, [r4, #24]
 985 001c 43F00403 		orr	r3, r3, #4
 986 0020 A361     		str	r3, [r4, #24]
 987 0022 A369     		ldr	r3, [r4, #24]
 988 0024 03F00403 		and	r3, r3, #4
 989 0028 0193     		str	r3, [sp, #4]
 990 002a 019B     		ldr	r3, [sp, #4]
 991              	.LBE15:
1024:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 992              		.loc 1 1024 0
 993 002c 02A9     		add	r1, sp, #8
 994              	.LVL83:
 995 002e 0648     		ldr	r0, .L108+4
 996              	.LVL84:
 997 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 998              	.LVL85:
1027:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
 999              		.loc 1 1027 0
 1000 0034 6168     		ldr	r1, [r4, #4]
 1001 0036 21F0E061 		bic	r1, r1, #117440512
 1002 003a 2943     		orrs	r1, r1, r5
 1003 003c 6160     		str	r1, [r4, #4]
1028:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1004              		.loc 1 1028 0
 1005 003e 07B0     		add	sp, sp, #28
 1006              	.LCFI9:
 1007              		.cfi_def_cfa_offset 12
 1008              		@ sp needed
 1009 0040 30BD     		pop	{r4, r5, pc}
 1010              	.LVL86:
 1011              	.L109:
 1012 0042 00BF     		.align	2
 1013              	.L108:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 52


 1014 0044 00100240 		.word	1073876992
 1015 0048 00080140 		.word	1073809408
 1016              		.cfi_endproc
 1017              	.LFE67:
 1018              		.fnend
 1020              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1021              		.align	1
 1022              		.global	HAL_RCC_EnableCSS
 1023              		.syntax unified
 1024              		.thumb
 1025              		.thumb_func
 1026              		.fpu softvfp
 1028              	HAL_RCC_EnableCSS:
 1029              		.fnstart
 1030              	.LFB68:
1040:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1031              		.loc 1 1040 0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035              		@ link register save eliminated.
1041:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
 1036              		.loc 1 1041 0
 1037 0000 014B     		ldr	r3, .L111
 1038 0002 0122     		movs	r2, #1
 1039 0004 1A60     		str	r2, [r3]
1042:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1040              		.loc 1 1042 0
 1041 0006 7047     		bx	lr
 1042              	.L112:
 1043              		.align	2
 1044              	.L111:
 1045 0008 4C004242 		.word	1111621708
 1046              		.cfi_endproc
 1047              	.LFE68:
 1048              		.cantunwind
 1049              		.fnend
 1051              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1052              		.align	1
 1053              		.global	HAL_RCC_DisableCSS
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu softvfp
 1059              	HAL_RCC_DisableCSS:
 1060              		.fnstart
 1061              	.LFB69:
1049:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1062              		.loc 1 1049 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066              		@ link register save eliminated.
1050:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
 1067              		.loc 1 1050 0
 1068 0000 014B     		ldr	r3, .L114
 1069 0002 0022     		movs	r2, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 53


 1070 0004 1A60     		str	r2, [r3]
1051:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1071              		.loc 1 1051 0
 1072 0006 7047     		bx	lr
 1073              	.L115:
 1074              		.align	2
 1075              	.L114:
 1076 0008 4C004242 		.word	1111621708
 1077              		.cfi_endproc
 1078              	.LFE69:
 1079              		.cantunwind
 1080              		.fnend
 1082              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1083              		.align	1
 1084              		.global	HAL_RCC_GetSysClockFreq
 1085              		.syntax unified
 1086              		.thumb
 1087              		.thumb_func
 1088              		.fpu softvfp
 1090              	HAL_RCC_GetSysClockFreq:
 1091              		.fnstart
 1092              	.LFB70:
1083:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 1093              		.loc 1 1083 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 24
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097              		@ link register save eliminated.
 1098 0000 10B4     		push	{r4}
 1099              	.LCFI10:
 1100              		.cfi_def_cfa_offset 4
 1101              		.cfi_offset 4, -4
 1102 0002 87B0     		sub	sp, sp, #28
 1103              	.LCFI11:
 1104              		.cfi_def_cfa_offset 32
1088:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
 1105              		.loc 1 1088 0
 1106 0004 164C     		ldr	r4, .L124
 1107 0006 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1108 000a 0DF1180C 		add	ip, sp, #24
 1109 000e 0CE90F00 		stmdb	ip, {r0, r1, r2, r3}
1092:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
 1110              		.loc 1 1092 0
 1111 0012 238A     		ldrh	r3, [r4, #16]
 1112 0014 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1113              	.LVL87:
1102:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1114              		.loc 1 1102 0
 1115 0018 124B     		ldr	r3, .L124+4
 1116 001a 5B68     		ldr	r3, [r3, #4]
 1117              	.LVL88:
1105:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 1118              		.loc 1 1105 0
 1119 001c 03F00C02 		and	r2, r3, #12
 1120 0020 082A     		cmp	r2, #8
 1121 0022 1AD1     		bne	.L121
1114:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 54


 1122              		.loc 1 1114 0
 1123 0024 C3F38342 		ubfx	r2, r3, #18, #4
 1124 0028 6244     		add	r2, r2, ip
 1125 002a 12F8102C 		ldrb	r2, [r2, #-16]	@ zero_extendqisi2
 1126              	.LVL89:
1115:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 1127              		.loc 1 1115 0
 1128 002e 13F4803F 		tst	r3, #65536
 1129 0032 05D1     		bne	.L123
1152:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 1130              		.loc 1 1152 0
 1131 0034 0C48     		ldr	r0, .L124+8
 1132 0036 00FB02F0 		mul	r0, r0, r2
 1133              	.LVL90:
 1134              	.L116:
1165:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1135              		.loc 1 1165 0
 1136 003a 07B0     		add	sp, sp, #28
 1137              	.LCFI12:
 1138              		.cfi_remember_state
 1139              		.cfi_def_cfa_offset 4
 1140              		@ sp needed
 1141 003c 10BC     		pop	{r4}
 1142              	.LCFI13:
 1143              		.cfi_restore 4
 1144              		.cfi_def_cfa_offset 0
 1145 003e 7047     		bx	lr
 1146              	.LVL91:
 1147              	.L123:
 1148              	.LCFI14:
 1149              		.cfi_restore_state
1120:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
 1150              		.loc 1 1120 0
 1151 0040 084B     		ldr	r3, .L124+4
 1152              	.LVL92:
 1153 0042 5B68     		ldr	r3, [r3, #4]
 1154 0044 C3F34043 		ubfx	r3, r3, #17, #1
 1155 0048 6344     		add	r3, r3, ip
 1156 004a 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 1157              	.LVL93:
1146:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 1158              		.loc 1 1146 0
 1159 004e 0748     		ldr	r0, .L124+12
 1160 0050 00FB02F0 		mul	r0, r0, r2
 1161 0054 B0FBF3F0 		udiv	r0, r0, r3
 1162              	.LVL94:
 1163 0058 EFE7     		b	.L116
 1164              	.LVL95:
 1165              	.L121:
1109:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       break;
 1166              		.loc 1 1109 0
 1167 005a 0448     		ldr	r0, .L124+12
 1168              	.LVL96:
1164:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
 1169              		.loc 1 1164 0
 1170 005c EDE7     		b	.L116
 1171              	.L125:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 55


 1172 005e 00BF     		.align	2
 1173              	.L124:
 1174 0060 00000000 		.word	.LANCHOR0
 1175 0064 00100240 		.word	1073876992
 1176 0068 00093D00 		.word	4000000
 1177 006c 00127A00 		.word	8000000
 1178              		.cfi_endproc
 1179              	.LFE70:
 1180              		.cantunwind
 1181              		.fnend
 1183              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1184              		.align	1
 1185              		.global	HAL_RCC_ClockConfig
 1186              		.syntax unified
 1187              		.thumb
 1188              		.thumb_func
 1189              		.fpu softvfp
 1191              	HAL_RCC_ClockConfig:
 1192              		.fnstart
 1193              	.LFB66:
 810:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1194              		.loc 1 810 0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 0
 1197              		@ frame_needed = 0, uses_anonymous_args = 0
 1198              	.LVL97:
 824:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {    
 1199              		.loc 1 824 0
 1200 0000 594B     		ldr	r3, .L154
 1201 0002 1B68     		ldr	r3, [r3]
 1202 0004 03F00703 		and	r3, r3, #7
 1203 0008 8B42     		cmp	r3, r1
 1204 000a 0CD2     		bcs	.L127
 827:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     
 1205              		.loc 1 827 0
 1206 000c 564A     		ldr	r2, .L154
 1207 000e 1368     		ldr	r3, [r2]
 1208 0010 23F00703 		bic	r3, r3, #7
 1209 0014 0B43     		orrs	r3, r3, r1
 1210 0016 1360     		str	r3, [r2]
 831:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 1211              		.loc 1 831 0
 1212 0018 1368     		ldr	r3, [r2]
 1213 001a 03F00703 		and	r3, r3, #7
 1214 001e 8B42     		cmp	r3, r1
 1215 0020 01D0     		beq	.L127
 833:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 1216              		.loc 1 833 0
 1217 0022 0120     		movs	r0, #1
 1218              	.LVL98:
 950:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1219              		.loc 1 950 0
 1220 0024 7047     		bx	lr
 1221              	.LVL99:
 1222              	.L127:
 810:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1223              		.loc 1 810 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 56


 1224 0026 70B5     		push	{r4, r5, r6, lr}
 1225              		.save {r4, r5, r6, lr}
 1226              	.LCFI15:
 1227              		.cfi_def_cfa_offset 16
 1228              		.cfi_offset 4, -16
 1229              		.cfi_offset 5, -12
 1230              		.cfi_offset 6, -8
 1231              		.cfi_offset 14, -4
 839:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 1232              		.loc 1 839 0
 1233 0028 0368     		ldr	r3, [r0]
 1234 002a 13F0020F 		tst	r3, #2
 1235 002e 06D0     		beq	.L129
 842:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1236              		.loc 1 842 0
 1237 0030 4E4A     		ldr	r2, .L154+4
 1238 0032 5368     		ldr	r3, [r2, #4]
 1239 0034 23F0F003 		bic	r3, r3, #240
 1240 0038 8468     		ldr	r4, [r0, #8]
 1241 003a 2343     		orrs	r3, r3, r4
 1242 003c 5360     		str	r3, [r2, #4]
 1243              	.L129:
 1244 003e 0C46     		mov	r4, r1
 1245 0040 0546     		mov	r5, r0
 846:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {    
 1246              		.loc 1 846 0
 1247 0042 0368     		ldr	r3, [r0]
 1248 0044 13F0010F 		tst	r3, #1
 1249 0048 52D0     		beq	.L130
 851:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 1250              		.loc 1 851 0
 1251 004a 4368     		ldr	r3, [r0, #4]
 1252 004c 012B     		cmp	r3, #1
 1253 004e 23D0     		beq	.L152
 860:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 1254              		.loc 1 860 0
 1255 0050 022B     		cmp	r3, #2
 1256 0052 28D0     		beq	.L153
 872:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 1257              		.loc 1 872 0
 1258 0054 454A     		ldr	r2, .L154+4
 1259 0056 1268     		ldr	r2, [r2]
 1260 0058 12F0020F 		tst	r2, #2
 1261 005c 00F08280 		beq	.L144
 1262              	.L132:
 877:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1263              		.loc 1 877 0
 1264 0060 4249     		ldr	r1, .L154+4
 1265              	.LVL100:
 1266 0062 4A68     		ldr	r2, [r1, #4]
 1267 0064 22F00302 		bic	r2, r2, #3
 1268 0068 1343     		orrs	r3, r3, r2
 1269 006a 4B60     		str	r3, [r1, #4]
 880:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     
 1270              		.loc 1 880 0
 1271 006c FFF7FEFF 		bl	HAL_GetTick
 1272              	.LVL101:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 57


 1273 0070 0646     		mov	r6, r0
 1274              	.LVL102:
 882:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 1275              		.loc 1 882 0
 1276 0072 6B68     		ldr	r3, [r5, #4]
 1277 0074 012B     		cmp	r3, #1
 1278 0076 1DD0     		beq	.L135
 892:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 1279              		.loc 1 892 0
 1280 0078 022B     		cmp	r3, #2
 1281 007a 2AD0     		beq	.L137
 1282              	.LVL103:
 1283              	.L136:
 904:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 1284              		.loc 1 904 0
 1285 007c 3B4B     		ldr	r3, .L154+4
 1286 007e 5B68     		ldr	r3, [r3, #4]
 1287 0080 13F00C0F 		tst	r3, #12
 1288 0084 34D0     		beq	.L130
 906:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 1289              		.loc 1 906 0
 1290 0086 FFF7FEFF 		bl	HAL_GetTick
 1291              	.LVL104:
 1292 008a 801B     		subs	r0, r0, r6
 1293 008c 41F28833 		movw	r3, #5000
 1294 0090 9842     		cmp	r0, r3
 1295 0092 F3D9     		bls	.L136
 908:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 1296              		.loc 1 908 0
 1297 0094 0320     		movs	r0, #3
 1298 0096 64E0     		b	.L128
 1299              	.LVL105:
 1300              	.L152:
 854:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 1301              		.loc 1 854 0
 1302 0098 344A     		ldr	r2, .L154+4
 1303 009a 1268     		ldr	r2, [r2]
 1304 009c 12F4003F 		tst	r2, #131072
 1305 00a0 DED1     		bne	.L132
 856:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 1306              		.loc 1 856 0
 1307 00a2 0120     		movs	r0, #1
 1308              	.LVL106:
 1309 00a4 5DE0     		b	.L128
 1310              	.LVL107:
 1311              	.L153:
 863:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 1312              		.loc 1 863 0
 1313 00a6 314A     		ldr	r2, .L154+4
 1314 00a8 1268     		ldr	r2, [r2]
 1315 00aa 12F0007F 		tst	r2, #33554432
 1316 00ae D7D1     		bne	.L132
 865:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 1317              		.loc 1 865 0
 1318 00b0 0120     		movs	r0, #1
 1319              	.LVL108:
 1320 00b2 56E0     		b	.L128
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 58


 1321              	.LVL109:
 1322              	.L135:
 884:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 1323              		.loc 1 884 0
 1324 00b4 2D4B     		ldr	r3, .L154+4
 1325 00b6 5B68     		ldr	r3, [r3, #4]
 1326 00b8 03F00C03 		and	r3, r3, #12
 1327 00bc 042B     		cmp	r3, #4
 1328 00be 17D0     		beq	.L130
 886:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 1329              		.loc 1 886 0
 1330 00c0 FFF7FEFF 		bl	HAL_GetTick
 1331              	.LVL110:
 1332 00c4 801B     		subs	r0, r0, r6
 1333 00c6 41F28833 		movw	r3, #5000
 1334 00ca 9842     		cmp	r0, r3
 1335 00cc F2D9     		bls	.L135
 888:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 1336              		.loc 1 888 0
 1337 00ce 0320     		movs	r0, #3
 1338 00d0 47E0     		b	.L128
 1339              	.L137:
 894:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       {
 1340              		.loc 1 894 0
 1341 00d2 264B     		ldr	r3, .L154+4
 1342 00d4 5B68     		ldr	r3, [r3, #4]
 1343 00d6 03F00C03 		and	r3, r3, #12
 1344 00da 082B     		cmp	r3, #8
 1345 00dc 08D0     		beq	.L130
 896:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         {
 1346              		.loc 1 896 0
 1347 00de FFF7FEFF 		bl	HAL_GetTick
 1348              	.LVL111:
 1349 00e2 801B     		subs	r0, r0, r6
 1350 00e4 41F28833 		movw	r3, #5000
 1351 00e8 9842     		cmp	r0, r3
 1352 00ea F2D9     		bls	.L137
 898:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****         }
 1353              		.loc 1 898 0
 1354 00ec 0320     		movs	r0, #3
 1355 00ee 38E0     		b	.L128
 1356              	.LVL112:
 1357              	.L130:
 915:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {    
 1358              		.loc 1 915 0
 1359 00f0 1D4B     		ldr	r3, .L154
 1360 00f2 1B68     		ldr	r3, [r3]
 1361 00f4 03F00703 		and	r3, r3, #7
 1362 00f8 A342     		cmp	r3, r4
 1363 00fa 0CD9     		bls	.L138
 918:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     
 1364              		.loc 1 918 0
 1365 00fc 1A4A     		ldr	r2, .L154
 1366 00fe 1368     		ldr	r3, [r2]
 1367 0100 23F00703 		bic	r3, r3, #7
 1368 0104 2343     		orrs	r3, r3, r4
 1369 0106 1360     		str	r3, [r2]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 59


 922:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     {
 1370              		.loc 1 922 0
 1371 0108 1368     		ldr	r3, [r2]
 1372 010a 03F00703 		and	r3, r3, #7
 1373 010e A342     		cmp	r3, r4
 1374 0110 01D0     		beq	.L138
 924:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     }
 1375              		.loc 1 924 0
 1376 0112 0120     		movs	r0, #1
 1377 0114 25E0     		b	.L128
 1378              	.L138:
 930:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 1379              		.loc 1 930 0
 1380 0116 2B68     		ldr	r3, [r5]
 1381 0118 13F0040F 		tst	r3, #4
 1382 011c 06D0     		beq	.L139
 933:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1383              		.loc 1 933 0
 1384 011e 134A     		ldr	r2, .L154+4
 1385 0120 5368     		ldr	r3, [r2, #4]
 1386 0122 23F4E063 		bic	r3, r3, #1792
 1387 0126 E968     		ldr	r1, [r5, #12]
 1388 0128 0B43     		orrs	r3, r3, r1
 1389 012a 5360     		str	r3, [r2, #4]
 1390              	.L139:
 937:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 1391              		.loc 1 937 0
 1392 012c 2B68     		ldr	r3, [r5]
 1393 012e 13F0080F 		tst	r3, #8
 1394 0132 07D0     		beq	.L140
 940:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1395              		.loc 1 940 0
 1396 0134 0D4A     		ldr	r2, .L154+4
 1397 0136 5368     		ldr	r3, [r2, #4]
 1398 0138 23F46053 		bic	r3, r3, #14336
 1399 013c 2969     		ldr	r1, [r5, #16]
 1400 013e 43EAC103 		orr	r3, r3, r1, lsl #3
 1401 0142 5360     		str	r3, [r2, #4]
 1402              	.L140:
 944:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1403              		.loc 1 944 0
 1404 0144 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1405              	.LVL113:
 1406 0148 084B     		ldr	r3, .L154+4
 1407 014a 5B68     		ldr	r3, [r3, #4]
 1408 014c C3F30313 		ubfx	r3, r3, #4, #4
 1409 0150 074A     		ldr	r2, .L154+8
 1410 0152 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1411 0154 D840     		lsrs	r0, r0, r3
 1412 0156 074B     		ldr	r3, .L154+12
 1413 0158 1860     		str	r0, [r3]
 947:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
 1414              		.loc 1 947 0
 1415 015a 0020     		movs	r0, #0
 1416 015c FFF7FEFF 		bl	HAL_InitTick
 1417              	.LVL114:
 949:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 60


 1418              		.loc 1 949 0
 1419 0160 0020     		movs	r0, #0
 1420              	.L128:
 950:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1421              		.loc 1 950 0
 1422 0162 70BD     		pop	{r4, r5, r6, pc}
 1423              	.LVL115:
 1424              	.L144:
 874:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****       }
 1425              		.loc 1 874 0
 1426 0164 0120     		movs	r0, #1
 1427              	.LVL116:
 1428 0166 FCE7     		b	.L128
 1429              	.L155:
 1430              		.align	2
 1431              	.L154:
 1432 0168 00200240 		.word	1073881088
 1433 016c 00100240 		.word	1073876992
 1434 0170 00000000 		.word	AHBPrescTable
 1435 0174 00000000 		.word	SystemCoreClock
 1436              		.cfi_endproc
 1437              	.LFE66:
 1438              		.fnend
 1440              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1441              		.align	1
 1442              		.global	HAL_RCC_GetHCLKFreq
 1443              		.syntax unified
 1444              		.thumb
 1445              		.thumb_func
 1446              		.fpu softvfp
 1448              	HAL_RCC_GetHCLKFreq:
 1449              		.fnstart
 1450              	.LFB71:
1177:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   return SystemCoreClock;
 1451              		.loc 1 1177 0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 0
 1454              		@ frame_needed = 0, uses_anonymous_args = 0
 1455              		@ link register save eliminated.
1179:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1456              		.loc 1 1179 0
 1457 0000 014B     		ldr	r3, .L157
 1458 0002 1868     		ldr	r0, [r3]
 1459 0004 7047     		bx	lr
 1460              	.L158:
 1461 0006 00BF     		.align	2
 1462              	.L157:
 1463 0008 00000000 		.word	SystemCoreClock
 1464              		.cfi_endproc
 1465              	.LFE71:
 1466              		.cantunwind
 1467              		.fnend
 1469              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1470              		.align	1
 1471              		.global	HAL_RCC_GetPCLK1Freq
 1472              		.syntax unified
 1473              		.thumb
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 61


 1474              		.thumb_func
 1475              		.fpu softvfp
 1477              	HAL_RCC_GetPCLK1Freq:
 1478              		.fnstart
 1479              	.LFB72:
1188:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 1480              		.loc 1 1188 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
 1484 0000 08B5     		push	{r3, lr}
 1485              	.LCFI16:
 1486              		.cfi_def_cfa_offset 8
 1487              		.cfi_offset 3, -8
 1488              		.cfi_offset 14, -4
1190:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }    
 1489              		.loc 1 1190 0
 1490 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1491              	.LVL117:
 1492 0006 044B     		ldr	r3, .L161
 1493 0008 5B68     		ldr	r3, [r3, #4]
 1494 000a C3F30223 		ubfx	r3, r3, #8, #3
 1495 000e 034A     		ldr	r2, .L161+4
 1496 0010 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1191:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1497              		.loc 1 1191 0
 1498 0012 D840     		lsrs	r0, r0, r3
 1499 0014 08BD     		pop	{r3, pc}
 1500              	.L162:
 1501 0016 00BF     		.align	2
 1502              	.L161:
 1503 0018 00100240 		.word	1073876992
 1504 001c 00000000 		.word	APBPrescTable
 1505              		.cfi_endproc
 1506              	.LFE72:
 1507              		.cantunwind
 1508              		.fnend
 1510              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1511              		.align	1
 1512              		.global	HAL_RCC_GetPCLK2Freq
 1513              		.syntax unified
 1514              		.thumb
 1515              		.thumb_func
 1516              		.fpu softvfp
 1518              	HAL_RCC_GetPCLK2Freq:
 1519              		.fnstart
 1520              	.LFB73:
1200:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 1521              		.loc 1 1200 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 1525 0000 08B5     		push	{r3, lr}
 1526              	.LCFI17:
 1527              		.cfi_def_cfa_offset 8
 1528              		.cfi_offset 3, -8
 1529              		.cfi_offset 14, -4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 62


1202:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** } 
 1530              		.loc 1 1202 0
 1531 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1532              	.LVL118:
 1533 0006 044B     		ldr	r3, .L165
 1534 0008 5B68     		ldr	r3, [r3, #4]
 1535 000a C3F3C223 		ubfx	r3, r3, #11, #3
 1536 000e 034A     		ldr	r2, .L165+4
 1537 0010 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1203:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1538              		.loc 1 1203 0
 1539 0012 D840     		lsrs	r0, r0, r3
 1540 0014 08BD     		pop	{r3, pc}
 1541              	.L166:
 1542 0016 00BF     		.align	2
 1543              	.L165:
 1544 0018 00100240 		.word	1073876992
 1545 001c 00000000 		.word	APBPrescTable
 1546              		.cfi_endproc
 1547              	.LFE73:
 1548              		.cantunwind
 1549              		.fnend
 1551              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1552              		.align	1
 1553              		.global	HAL_RCC_GetOscConfig
 1554              		.syntax unified
 1555              		.thumb
 1556              		.thumb_func
 1557              		.fpu softvfp
 1559              	HAL_RCC_GetOscConfig:
 1560              		.fnstart
 1561              	.LFB74:
1213:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 1562              		.loc 1 1213 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566              		@ link register save eliminated.
 1567              	.LVL119:
1218:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
 1568              		.loc 1 1218 0
 1569 0000 0F23     		movs	r3, #15
 1570 0002 0360     		str	r3, [r0]
1227:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 1571              		.loc 1 1227 0
 1572 0004 2A4B     		ldr	r3, .L181
 1573 0006 1B68     		ldr	r3, [r3]
 1574 0008 13F4802F 		tst	r3, #262144
 1575 000c 30D0     		beq	.L168
1229:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1576              		.loc 1 1229 0
 1577 000e 4FF4A023 		mov	r3, #327680
 1578 0012 4360     		str	r3, [r0, #4]
 1579              	.L169:
1239:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1580              		.loc 1 1239 0
 1581 0014 264A     		ldr	r2, .L181
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 63


 1582 0016 5368     		ldr	r3, [r2, #4]
 1583 0018 03F40033 		and	r3, r3, #131072
 1584 001c 8360     		str	r3, [r0, #8]
1242:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 1585              		.loc 1 1242 0
 1586 001e 1368     		ldr	r3, [r2]
 1587 0020 13F0010F 		tst	r3, #1
 1588 0024 30D0     		beq	.L171
1244:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1589              		.loc 1 1244 0
 1590 0026 0123     		movs	r3, #1
 1591 0028 0361     		str	r3, [r0, #16]
 1592              	.L172:
1251:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
 1593              		.loc 1 1251 0
 1594 002a 214A     		ldr	r2, .L181
 1595 002c 1368     		ldr	r3, [r2]
 1596 002e C3F3C403 		ubfx	r3, r3, #3, #5
 1597 0032 4361     		str	r3, [r0, #20]
1254:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 1598              		.loc 1 1254 0
 1599 0034 136A     		ldr	r3, [r2, #32]
 1600 0036 13F0040F 		tst	r3, #4
 1601 003a 28D0     		beq	.L173
1256:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1602              		.loc 1 1256 0
 1603 003c 0523     		movs	r3, #5
 1604 003e C360     		str	r3, [r0, #12]
 1605              	.L174:
1268:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 1606              		.loc 1 1268 0
 1607 0040 1B4B     		ldr	r3, .L181
 1608 0042 5B6A     		ldr	r3, [r3, #36]
 1609 0044 13F0010F 		tst	r3, #1
 1610 0048 2CD0     		beq	.L176
1270:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1611              		.loc 1 1270 0
 1612 004a 0123     		movs	r3, #1
 1613 004c 8361     		str	r3, [r0, #24]
 1614              	.L177:
1279:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 1615              		.loc 1 1279 0
 1616 004e 184B     		ldr	r3, .L181
 1617 0050 1B68     		ldr	r3, [r3]
 1618 0052 13F0807F 		tst	r3, #16777216
 1619 0056 28D1     		bne	.L180
1285:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1620              		.loc 1 1285 0
 1621 0058 0123     		movs	r3, #1
 1622 005a C361     		str	r3, [r0, #28]
 1623              	.L179:
1287:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMULL);
 1624              		.loc 1 1287 0
 1625 005c 144A     		ldr	r2, .L181
 1626 005e 5368     		ldr	r3, [r2, #4]
 1627 0060 03F48033 		and	r3, r3, #65536
 1628 0064 0362     		str	r3, [r0, #32]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 64


1288:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
 1629              		.loc 1 1288 0
 1630 0066 5368     		ldr	r3, [r2, #4]
 1631 0068 03F47013 		and	r3, r3, #3932160
 1632 006c 4362     		str	r3, [r0, #36]
1302:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1633              		.loc 1 1302 0
 1634 006e 7047     		bx	lr
 1635              	.L168:
1231:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 1636              		.loc 1 1231 0
 1637 0070 0F4B     		ldr	r3, .L181
 1638 0072 1B68     		ldr	r3, [r3]
 1639 0074 13F4803F 		tst	r3, #65536
 1640 0078 03D0     		beq	.L170
1233:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1641              		.loc 1 1233 0
 1642 007a 4FF48033 		mov	r3, #65536
 1643 007e 4360     		str	r3, [r0, #4]
 1644 0080 C8E7     		b	.L169
 1645              	.L170:
1237:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1646              		.loc 1 1237 0
 1647 0082 0023     		movs	r3, #0
 1648 0084 4360     		str	r3, [r0, #4]
 1649 0086 C5E7     		b	.L169
 1650              	.L171:
1248:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1651              		.loc 1 1248 0
 1652 0088 0023     		movs	r3, #0
 1653 008a 0361     		str	r3, [r0, #16]
 1654 008c CDE7     		b	.L172
 1655              	.L173:
1258:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 1656              		.loc 1 1258 0
 1657 008e 084B     		ldr	r3, .L181
 1658 0090 1B6A     		ldr	r3, [r3, #32]
 1659 0092 13F0010F 		tst	r3, #1
 1660 0096 02D0     		beq	.L175
1260:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1661              		.loc 1 1260 0
 1662 0098 0123     		movs	r3, #1
 1663 009a C360     		str	r3, [r0, #12]
 1664 009c D0E7     		b	.L174
 1665              	.L175:
1264:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1666              		.loc 1 1264 0
 1667 009e 0023     		movs	r3, #0
 1668 00a0 C360     		str	r3, [r0, #12]
 1669 00a2 CDE7     		b	.L174
 1670              	.L176:
1274:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1671              		.loc 1 1274 0
 1672 00a4 0023     		movs	r3, #0
 1673 00a6 8361     		str	r3, [r0, #24]
 1674 00a8 D1E7     		b	.L177
 1675              	.L180:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 65


1281:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1676              		.loc 1 1281 0
 1677 00aa 0223     		movs	r3, #2
 1678 00ac C361     		str	r3, [r0, #28]
 1679 00ae D5E7     		b	.L179
 1680              	.L182:
 1681              		.align	2
 1682              	.L181:
 1683 00b0 00100240 		.word	1073876992
 1684              		.cfi_endproc
 1685              	.LFE74:
 1686              		.cantunwind
 1687              		.fnend
 1689              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 1690              		.align	1
 1691              		.global	HAL_RCC_GetClockConfig
 1692              		.syntax unified
 1693              		.thumb
 1694              		.thumb_func
 1695              		.fpu softvfp
 1697              	HAL_RCC_GetClockConfig:
 1698              		.fnstart
 1699              	.LFB75:
1313:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 1700              		.loc 1 1313 0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 0
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
 1704              		@ link register save eliminated.
 1705              	.LVL120:
1319:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
 1706              		.loc 1 1319 0
 1707 0000 0F23     		movs	r3, #15
 1708 0002 0360     		str	r3, [r0]
1322:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
 1709              		.loc 1 1322 0
 1710 0004 0B4B     		ldr	r3, .L184
 1711 0006 5A68     		ldr	r2, [r3, #4]
 1712 0008 02F00302 		and	r2, r2, #3
 1713 000c 4260     		str	r2, [r0, #4]
1325:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
 1714              		.loc 1 1325 0
 1715 000e 5A68     		ldr	r2, [r3, #4]
 1716 0010 02F0F002 		and	r2, r2, #240
 1717 0014 8260     		str	r2, [r0, #8]
1328:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
 1718              		.loc 1 1328 0
 1719 0016 5A68     		ldr	r2, [r3, #4]
 1720 0018 02F4E062 		and	r2, r2, #1792
 1721 001c C260     		str	r2, [r0, #12]
1331:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   
 1722              		.loc 1 1331 0
 1723 001e 5B68     		ldr	r3, [r3, #4]
 1724 0020 DB08     		lsrs	r3, r3, #3
 1725 0022 03F4E063 		and	r3, r3, #1792
 1726 0026 0361     		str	r3, [r0, #16]
1335:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** #else
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 66


 1727              		.loc 1 1335 0
 1728 0028 034B     		ldr	r3, .L184+4
 1729 002a 1B68     		ldr	r3, [r3]
 1730 002c 03F00703 		and	r3, r3, #7
 1731 0030 0B60     		str	r3, [r1]
1340:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1732              		.loc 1 1340 0
 1733 0032 7047     		bx	lr
 1734              	.L185:
 1735              		.align	2
 1736              	.L184:
 1737 0034 00100240 		.word	1073876992
 1738 0038 00200240 		.word	1073881088
 1739              		.cfi_endproc
 1740              	.LFE75:
 1741              		.cantunwind
 1742              		.fnend
 1744              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 1745              		.align	1
 1746              		.weak	HAL_RCC_CSSCallback
 1747              		.syntax unified
 1748              		.thumb
 1749              		.thumb_func
 1750              		.fpu softvfp
 1752              	HAL_RCC_CSSCallback:
 1753              		.fnstart
 1754              	.LFB78:
1374:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
1375:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** /**
1376:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1377:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   * @retval none
1378:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   */
1379:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1380:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** {
 1755              		.loc 1 1380 0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 0
 1758              		@ frame_needed = 0, uses_anonymous_args = 0
 1759              		@ link register save eliminated.
1381:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1382:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1383:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     */ 
1384:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** }
 1760              		.loc 1 1384 0
 1761 0000 7047     		bx	lr
 1762              		.cfi_endproc
 1763              	.LFE78:
 1764              		.cantunwind
 1765              		.fnend
 1767              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 1768              		.align	1
 1769              		.global	HAL_RCC_NMI_IRQHandler
 1770              		.syntax unified
 1771              		.thumb
 1772              		.thumb_func
 1773              		.fpu softvfp
 1775              	HAL_RCC_NMI_IRQHandler:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 67


 1776              		.fnstart
 1777              	.LFB76:
1348:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 1778              		.loc 1 1348 0
 1779              		.cfi_startproc
 1780              		@ args = 0, pretend = 0, frame = 0
 1781              		@ frame_needed = 0, uses_anonymous_args = 0
 1782 0000 08B5     		push	{r3, lr}
 1783              		.save {r3, lr}
 1784              	.LCFI18:
 1785              		.cfi_def_cfa_offset 8
 1786              		.cfi_offset 3, -8
 1787              		.cfi_offset 14, -4
1350:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   {
 1788              		.loc 1 1350 0
 1789 0002 064B     		ldr	r3, .L191
 1790 0004 9B68     		ldr	r3, [r3, #8]
 1791 0006 13F0800F 		tst	r3, #128
 1792 000a 00D1     		bne	.L190
 1793              	.L187:
1358:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1794              		.loc 1 1358 0
 1795 000c 08BD     		pop	{r3, pc}
 1796              	.L190:
1353:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****     
 1797              		.loc 1 1353 0
 1798 000e FFF7FEFF 		bl	HAL_RCC_CSSCallback
 1799              	.LVL121:
1356:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c ****   }
 1800              		.loc 1 1356 0
 1801 0012 034B     		ldr	r3, .L191+4
 1802 0014 8022     		movs	r2, #128
 1803 0016 1A70     		strb	r2, [r3]
1358:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal_rcc.c **** 
 1804              		.loc 1 1358 0
 1805 0018 F8E7     		b	.L187
 1806              	.L192:
 1807 001a 00BF     		.align	2
 1808              	.L191:
 1809 001c 00100240 		.word	1073876992
 1810 0020 0A100240 		.word	1073877002
 1811              		.cfi_endproc
 1812              	.LFE76:
 1813              		.fnend
 1815              		.section	.rodata
 1816              		.align	2
 1817              		.set	.LANCHOR0,. + 0
 1818              	.LC0:
 1819 0000 02       		.byte	2
 1820 0001 03       		.byte	3
 1821 0002 04       		.byte	4
 1822 0003 05       		.byte	5
 1823 0004 06       		.byte	6
 1824 0005 07       		.byte	7
 1825 0006 08       		.byte	8
 1826 0007 09       		.byte	9
 1827 0008 0A       		.byte	10
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 68


 1828 0009 0B       		.byte	11
 1829 000a 0C       		.byte	12
 1830 000b 0D       		.byte	13
 1831 000c 0E       		.byte	14
 1832 000d 0F       		.byte	15
 1833 000e 10       		.byte	16
 1834 000f 10       		.byte	16
 1835              	.LC1:
 1836 0010 01       		.byte	1
 1837 0011 02       		.byte	2
 1838              		.text
 1839              	.Letext0:
 1840              		.file 3 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.
 1841              		.file 4 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 1842              		.file 5 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include/core_cm3.h"
 1843              		.file 6 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1x
 1844              		.file 7 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1845              		.file 8 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1846              		.file 9 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\lock.h"
 1847              		.file 10 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_types.h"
 1848              		.file 11 "e:\\visualstudiocode\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\7.2.1\\include\\stddef
 1849              		.file 12 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\reent.h"
 1850              		.file 13 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1851              		.file 14 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1852              		.file 15 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1853              		.file 16 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1854              		.file 17 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 69


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal_rcc.c
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:16     .text._ZL9RCC_Delaym:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:22     .text._ZL9RCC_Delaym:00000000 _ZL9RCC_Delaym
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:72     .text._ZL9RCC_Delaym:00000024 $d
   .ARM.exidx.text._ZL9RCC_Delaym:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:80     .text.HAL_RCC_DeInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:87     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:251    .text.HAL_RCC_DeInit:000000dc $d
   .ARM.exidx.text.HAL_RCC_DeInit:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:259    .text.HAL_RCC_OscConfig:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:266    .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:731    .text.HAL_RCC_OscConfig:000002bc $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:737    .text.HAL_RCC_OscConfig:000002cc $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:935    .text.HAL_RCC_OscConfig:000003d4 $d
.ARM.exidx.text.HAL_RCC_OscConfig:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:942    .text.HAL_RCC_MCOConfig:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:949    .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1014   .text.HAL_RCC_MCOConfig:00000044 $d
.ARM.exidx.text.HAL_RCC_MCOConfig:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1021   .text.HAL_RCC_EnableCSS:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1028   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1045   .text.HAL_RCC_EnableCSS:00000008 $d
.ARM.exidx.text.HAL_RCC_EnableCSS:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1052   .text.HAL_RCC_DisableCSS:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1059   .text.HAL_RCC_DisableCSS:00000000 HAL_RCC_DisableCSS
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1076   .text.HAL_RCC_DisableCSS:00000008 $d
.ARM.exidx.text.HAL_RCC_DisableCSS:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1083   .text.HAL_RCC_GetSysClockFreq:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1090   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1174   .text.HAL_RCC_GetSysClockFreq:00000060 $d
.ARM.exidx.text.HAL_RCC_GetSysClockFreq:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1184   .text.HAL_RCC_ClockConfig:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1191   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1432   .text.HAL_RCC_ClockConfig:00000168 $d
.ARM.exidx.text.HAL_RCC_ClockConfig:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1441   .text.HAL_RCC_GetHCLKFreq:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1448   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1463   .text.HAL_RCC_GetHCLKFreq:00000008 $d
.ARM.exidx.text.HAL_RCC_GetHCLKFreq:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1470   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1477   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1503   .text.HAL_RCC_GetPCLK1Freq:00000018 $d
.ARM.exidx.text.HAL_RCC_GetPCLK1Freq:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1511   .text.HAL_RCC_GetPCLK2Freq:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1518   .text.HAL_RCC_GetPCLK2Freq:00000000 HAL_RCC_GetPCLK2Freq
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1544   .text.HAL_RCC_GetPCLK2Freq:00000018 $d
.ARM.exidx.text.HAL_RCC_GetPCLK2Freq:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1552   .text.HAL_RCC_GetOscConfig:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1559   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1683   .text.HAL_RCC_GetOscConfig:000000b0 $d
.ARM.exidx.text.HAL_RCC_GetOscConfig:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1690   .text.HAL_RCC_GetClockConfig:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1697   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1737   .text.HAL_RCC_GetClockConfig:00000034 $d
.ARM.exidx.text.HAL_RCC_GetClockConfig:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1745   .text.HAL_RCC_CSSCallback:00000000 $t
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s 			page 70


C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1752   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
.ARM.exidx.text.HAL_RCC_CSSCallback:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1768   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1775   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1809   .text.HAL_RCC_NMI_IRQHandler:0000001c $d
.ARM.extab.text.HAL_RCC_NMI_IRQHandler:00000000 $d
.ARM.exidx.text.HAL_RCC_NMI_IRQHandler:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccagJQxh.s:1816   .rodata:00000000 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_InitTick
__aeabi_unwind_cpp_pr0
HAL_GPIO_Init
AHBPrescTable
APBPrescTable
__aeabi_unwind_cpp_pr1
