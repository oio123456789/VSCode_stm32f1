ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32f1xx.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemInit,"ax",%progbits
  16              		.align	1
  17              		.global	SystemInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	SystemInit:
  24              		.fnstart
  25              	.LFB64:
  26              		.file 1 "E:/VisualStudioCode/STM32F1_HAL/Src/system_stm32f1xx.c"
   1:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /**
   2:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   ******************************************************************************
   3:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @file    system_stm32f1xx.c
   4:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @author  MCD Application Team
   5:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @version V4.2.0
   6:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @date    31-March-2017
   7:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * 
   9:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  10:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *     user application:
  11:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  12:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  13:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *                      This function is called at startup just after reset and 
  14:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *                      before branch to main program. This call is made inside
  15:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *                      the "startup_stm32f1xx_xx.s" file.
  16:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *
  17:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  18:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *                                  by the user application to setup the SysTick 
  19:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *                                  timer or configure other parameters.
  20:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *                                     
  21:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  22:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *                                 be called whenever the core clock is changed
  23:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *                                 during program execution.
  24:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *
  25:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  26:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f1xx_xx.s" file, to
  27:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *    configure the system clock before to branch to main program.
  28:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *
  29:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depending on
  30:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *    the product used), refer to "HSE_VALUE". 
  31:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  32:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *    are using different crystal you have to adapt the HSE value to your own
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s 			page 2


  33:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *    configuration.
  34:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *        
  35:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   ******************************************************************************
  36:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @attention
  37:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *
  38:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  39:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *
  40:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  41:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * are permitted provided that the following conditions are met:
  42:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  43:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *      this list of conditions and the following disclaimer.
  44:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  45:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  46:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *      and/or other materials provided with the distribution.
  47:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  48:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *      may be used to endorse or promote products derived from this software
  49:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *      without specific prior written permission.
  50:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *
  51:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  52:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  53:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  54:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  55:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  56:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  57:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  58:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  59:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  60:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  61:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *
  62:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   ******************************************************************************
  63:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
  64:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
  65:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /** @addtogroup CMSIS
  66:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @{
  67:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
  68:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
  69:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /** @addtogroup stm32f1xx_system
  70:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @{
  71:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */  
  72:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   
  73:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Includes
  74:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @{
  75:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
  76:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
  77:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #include "stm32f1xx.h"
  78:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
  79:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /**
  80:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @}
  81:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
  82:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
  83:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_TypesDefinitions
  84:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @{
  85:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
  86:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
  87:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /**
  88:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @}
  89:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s 			page 3


  90:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
  91:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Defines
  92:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @{
  93:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
  94:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
  95:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #if !defined  (HSE_VALUE) 
  96:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   #define HSE_VALUE               8000000U /*!< Default value of the External oscillator in Hz.
  97:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
  98:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #endif /* HSE_VALUE */
  99:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 100:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #if !defined  (HSI_VALUE)
 101:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   #define HSI_VALUE               8000000U /*!< Default value of the Internal oscillator in Hz.
 102:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
 103:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #endif /* HSI_VALUE */
 104:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 105:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /*!< Uncomment the following line if you need to use external SRAM  */ 
 106:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 107:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /* #define DATA_IN_ExtSRAM */
 108:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
 109:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 110:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 111:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****      Internal SRAM. */ 
 112:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /* #define VECT_TAB_SRAM */
 113:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #define VECT_TAB_OFFSET  0x00000000U /*!< Vector Table base offset field. 
 114:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****                                   This value must be a multiple of 0x200. */
 115:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 116:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 117:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /**
 118:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @}
 119:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
 120:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 121:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Macros
 122:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @{
 123:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
 124:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 125:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /**
 126:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @}
 127:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
 128:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 129:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Variables
 130:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @{
 131:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
 132:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 133:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /*******************************************************************************
 134:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** *  Clock Definitions
 135:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** *******************************************************************************/
 136:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #if defined(STM32F100xB) ||defined(STM32F100xE)
 137:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   uint32_t SystemCoreClock         = 24000000U;        /*!< System Clock Frequency (Core Clock) */
 138:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #else /*!< HSI Selected as System Clock source */
 139:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   uint32_t SystemCoreClock         = 72000000U;        /*!< System Clock Frequency (Core Clock) */
 140:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #endif
 141:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 142:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** const uint8_t AHBPrescTable[16U] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 143:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** const uint8_t APBPrescTable[8U] =  {0, 0, 0, 0, 1, 2, 3, 4};
 144:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 145:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /**
 146:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s 			page 4


 147:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
 148:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 149:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_FunctionPrototypes
 150:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @{
 151:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
 152:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 153:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 154:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #ifdef DATA_IN_ExtSRAM
 155:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   static void SystemInit_ExtMemCtl(void); 
 156:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #endif /* DATA_IN_ExtSRAM */
 157:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
 158:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 159:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /**
 160:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @}
 161:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
 162:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 163:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Functions
 164:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @{
 165:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
 166:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 167:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /**
 168:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @brief  Setup the microcontroller system
 169:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 170:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *         SystemCoreClock variable.
 171:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @note   This function should be used only after reset.
 172:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @param  None
 173:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @retval None
 174:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
 175:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** void SystemInit (void)
 176:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** {
  27              		.loc 1 176 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 177:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 178:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* Set HSION bit */
 179:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   RCC->CR |= 0x00000001U;
  32              		.loc 1 179 0
  33 0000 0F4B     		ldr	r3, .L2
  34 0002 1A68     		ldr	r2, [r3]
  35 0004 42F00102 		orr	r2, r2, #1
  36 0008 1A60     		str	r2, [r3]
 180:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 181:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 182:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #if !defined(STM32F105xC) && !defined(STM32F107xC)
 183:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   RCC->CFGR &= 0xF8FF0000U;
  37              		.loc 1 183 0
  38 000a 5968     		ldr	r1, [r3, #4]
  39 000c 0D4A     		ldr	r2, .L2+4
  40 000e 0A40     		ands	r2, r2, r1
  41 0010 5A60     		str	r2, [r3, #4]
 184:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #else
 185:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   RCC->CFGR &= 0xF0FF0000U;
 186:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #endif /* STM32F105xC */   
 187:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   
 188:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s 			page 5


 189:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   RCC->CR &= 0xFEF6FFFFU;
  42              		.loc 1 189 0
  43 0012 1A68     		ldr	r2, [r3]
  44 0014 22F08472 		bic	r2, r2, #17301504
  45 0018 22F48032 		bic	r2, r2, #65536
  46 001c 1A60     		str	r2, [r3]
 190:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 191:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* Reset HSEBYP bit */
 192:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   RCC->CR &= 0xFFFBFFFFU;
  47              		.loc 1 192 0
  48 001e 1A68     		ldr	r2, [r3]
  49 0020 22F48022 		bic	r2, r2, #262144
  50 0024 1A60     		str	r2, [r3]
 193:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 194:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 195:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   RCC->CFGR &= 0xFF80FFFFU;
  51              		.loc 1 195 0
  52 0026 5A68     		ldr	r2, [r3, #4]
  53 0028 22F4FE02 		bic	r2, r2, #8323072
  54 002c 5A60     		str	r2, [r3, #4]
 196:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 197:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 198:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* Reset PLL2ON and PLL3ON bits */
 199:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   RCC->CR &= 0xEBFFFFFFU;
 200:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 201:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* Disable all interrupts and clear pending bits  */
 202:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   RCC->CIR = 0x00FF0000U;
 203:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 204:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* Reset CFGR2 register */
 205:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   RCC->CFGR2 = 0x00000000U;
 206:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #elif defined(STM32F100xB) || defined(STM32F100xE)
 207:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* Disable all interrupts and clear pending bits  */
 208:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   RCC->CIR = 0x009F0000U;
 209:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 210:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* Reset CFGR2 register */
 211:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   RCC->CFGR2 = 0x00000000U;      
 212:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #else
 213:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* Disable all interrupts and clear pending bits  */
 214:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   RCC->CIR = 0x009F0000U;
  55              		.loc 1 214 0
  56 002e 4FF41F02 		mov	r2, #10420224
  57 0032 9A60     		str	r2, [r3, #8]
 215:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #endif /* STM32F105xC */
 216:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****     
 217:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 218:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   #ifdef DATA_IN_ExtSRAM
 219:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****     SystemInit_ExtMemCtl(); 
 220:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   #endif /* DATA_IN_ExtSRAM */
 221:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #endif 
 222:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 223:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #ifdef VECT_TAB_SRAM
 224:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 225:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #else
 226:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
  58              		.loc 1 226 0
  59 0034 044B     		ldr	r3, .L2+8
  60 0036 4FF00062 		mov	r2, #134217728
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s 			page 6


  61 003a 9A60     		str	r2, [r3, #8]
 227:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #endif 
 228:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** }
  62              		.loc 1 228 0
  63 003c 7047     		bx	lr
  64              	.L3:
  65 003e 00BF     		.align	2
  66              	.L2:
  67 0040 00100240 		.word	1073876992
  68 0044 0000FFF8 		.word	-117506048
  69 0048 00ED00E0 		.word	-536810240
  70              		.cfi_endproc
  71              	.LFE64:
  72              		.cantunwind
  73              		.fnend
  75              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  76              		.align	1
  77              		.global	SystemCoreClockUpdate
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu softvfp
  83              	SystemCoreClockUpdate:
  84              		.fnstart
  85              	.LFB65:
 229:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 230:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** /**
 231:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 232:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 233:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 234:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *         other parameters.
 235:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *           
 236:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 237:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 238:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *         based on this variable will be incorrect.         
 239:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *     
 240:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @note   - The system frequency computed by this function is not the real 
 241:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 242:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *           constant and the selected clock source:
 243:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *             
 244:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 245:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *                                              
 246:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 247:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *                          
 248:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 249:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 250:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *         
 251:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 252:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 253:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *             in voltage and temperature.   
 254:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *    
 255:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 256:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *              8 MHz or 25 MHz, depending on the product used), user has to ensure
 257:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 258:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *              Otherwise, this function may have wrong result.
 259:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *                
 260:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *         - The result of this function could be not correct when using fractional
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s 			page 7


 261:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   *           value for HSE crystal.
 262:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @param  None
 263:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   * @retval None
 264:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   */
 265:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** void SystemCoreClockUpdate (void)
 266:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** {
  86              		.loc 1 266 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91              	.LVL0:
 267:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   uint32_t tmp = 0U, pllmull = 0U, pllsource = 0U;
 268:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 269:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 270:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   uint32_t prediv1source = 0U, prediv1factor = 0U, prediv2factor = 0U, pll2mull = 0U;
 271:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #endif /* STM32F105xC */
 272:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 273:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #if defined(STM32F100xB) || defined(STM32F100xE)
 274:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   uint32_t prediv1factor = 0U;
 275:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #endif /* STM32F100xB or STM32F100xE */
 276:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****     
 277:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 278:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
  92              		.loc 1 278 0
  93 0000 1F4B     		ldr	r3, .L15
  94 0002 5B68     		ldr	r3, [r3, #4]
  95 0004 03F00C03 		and	r3, r3, #12
  96              	.LVL1:
 279:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   
 280:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   switch (tmp)
  97              		.loc 1 280 0
  98 0008 042B     		cmp	r3, #4
  99 000a 14D0     		beq	.L6
 100 000c 082B     		cmp	r3, #8
 101 000e 16D0     		beq	.L7
 102 0010 1BB1     		cbz	r3, .L13
 281:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   {
 282:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****     case 0x00U:  /* HSI used as system clock */
 283:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
 284:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       break;
 285:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****     case 0x04U:  /* HSE used as system clock */
 286:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       SystemCoreClock = HSE_VALUE;
 287:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       break;
 288:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****     case 0x08U:  /* PLL used as system clock */
 289:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 290:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 291:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 292:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 293:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       
 294:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #if !defined(STM32F105xC) && !defined(STM32F107xC)      
 295:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       pllmull = ( pllmull >> 18U) + 2U;
 296:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       
 297:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       if (pllsource == 0x00U)
 298:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       {
 299:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 300:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s 			page 8


 301:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       }
 302:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       else
 303:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       {
 304:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****  #if defined(STM32F100xB) || defined(STM32F100xE)
 305:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 306:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 307:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 308:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****  #else
 309:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         /* HSE selected as PLL clock entry */
 310:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 311:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 312:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
 313:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         }
 314:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         else
 315:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         {
 316:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 317:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         }
 318:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****  #endif
 319:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       }
 320:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #else
 321:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       pllmull = pllmull >> 18U;
 322:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       
 323:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       if (pllmull != 0x0DU)
 324:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       {
 325:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****          pllmull += 2U;
 326:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       }
 327:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       else
 328:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 329:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         pllmull = 13U / 2U; 
 330:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       }
 331:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****             
 332:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       if (pllsource == 0x00U)
 333:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       {
 334:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 335:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 336:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       }
 337:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       else
 338:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       {/* PREDIV1 selected as PLL clock entry */
 339:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         
 340:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         /* Get PREDIV1 clock source and division factor */
 341:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 342:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 343:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         
 344:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         if (prediv1source == 0U)
 345:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         { 
 346:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 347:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 348:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         }
 349:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         else
 350:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 351:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****           
 352:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 353:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4U) + 1U;
 354:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; 
 355:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 356:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         }
 357:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s 			page 9


 358:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** #endif /* STM32F105xC */ 
 359:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       break;
 360:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** 
 361:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****     default:
 362:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
 103              		.loc 1 362 0
 104 0012 1C4B     		ldr	r3, .L15+4
 105              	.LVL2:
 106 0014 1C4A     		ldr	r2, .L15+8
 107 0016 1A60     		str	r2, [r3]
 363:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       break;
 108              		.loc 1 363 0
 109 0018 02E0     		b	.L9
 110              	.LVL3:
 111              	.L13:
 283:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       break;
 112              		.loc 1 283 0
 113 001a 1A4B     		ldr	r3, .L15+4
 114              	.LVL4:
 115 001c 1A4A     		ldr	r2, .L15+8
 116 001e 1A60     		str	r2, [r3]
 117              	.LVL5:
 118              	.L9:
 364:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   }
 365:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   
 366:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* Compute HCLK clock frequency ----------------*/
 367:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* Get HCLK prescaler */
 368:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 119              		.loc 1 368 0
 120 0020 174B     		ldr	r3, .L15
 121 0022 5B68     		ldr	r3, [r3, #4]
 122 0024 C3F30313 		ubfx	r3, r3, #4, #4
 123 0028 184A     		ldr	r2, .L15+12
 124 002a D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 125              	.LVL6:
 369:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   /* HCLK clock frequency */
 370:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****   SystemCoreClock >>= tmp;  
 126              		.loc 1 370 0
 127 002c 154A     		ldr	r2, .L15+4
 128 002e 1368     		ldr	r3, [r2]
 129 0030 CB40     		lsrs	r3, r3, r1
 130 0032 1360     		str	r3, [r2]
 371:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c **** }
 131              		.loc 1 371 0
 132 0034 7047     		bx	lr
 133              	.LVL7:
 134              	.L6:
 286:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       break;
 135              		.loc 1 286 0
 136 0036 134B     		ldr	r3, .L15+4
 137              	.LVL8:
 138 0038 134A     		ldr	r2, .L15+8
 139 003a 1A60     		str	r2, [r3]
 287:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****     case 0x08U:  /* PLL used as system clock */
 140              		.loc 1 287 0
 141 003c F0E7     		b	.L9
 142              	.LVL9:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s 			page 10


 143              	.L7:
 291:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 144              		.loc 1 291 0
 145 003e 104A     		ldr	r2, .L15
 146 0040 5368     		ldr	r3, [r2, #4]
 147              	.LVL10:
 292:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       
 148              		.loc 1 292 0
 149 0042 5268     		ldr	r2, [r2, #4]
 150              	.LVL11:
 295:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       
 151              		.loc 1 295 0
 152 0044 C3F38343 		ubfx	r3, r3, #18, #4
 153              	.LVL12:
 154 0048 0233     		adds	r3, r3, #2
 155              	.LVL13:
 297:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       {
 156              		.loc 1 297 0
 157 004a 12F4803F 		tst	r2, #65536
 158 004e 0AD0     		beq	.L14
 310:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 159              		.loc 1 310 0
 160 0050 0B4A     		ldr	r2, .L15
 161              	.LVL14:
 162 0052 5268     		ldr	r2, [r2, #4]
 163 0054 12F4003F 		tst	r2, #131072
 164 0058 0BD0     		beq	.L11
 312:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         }
 165              		.loc 1 312 0
 166 005a 0D4A     		ldr	r2, .L15+16
 167 005c 02FB03F3 		mul	r3, r2, r3
 168              	.LVL15:
 169 0060 084A     		ldr	r2, .L15+4
 170 0062 1360     		str	r3, [r2]
 171 0064 DCE7     		b	.L9
 172              	.LVL16:
 173              	.L14:
 300:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****       }
 174              		.loc 1 300 0
 175 0066 0A4A     		ldr	r2, .L15+16
 176              	.LVL17:
 177 0068 02FB03F3 		mul	r3, r2, r3
 178              	.LVL18:
 179 006c 054A     		ldr	r2, .L15+4
 180 006e 1360     		str	r3, [r2]
 181 0070 D6E7     		b	.L9
 182              	.LVL19:
 183              	.L11:
 316:E:/VisualStudioCode/STM32F1_HAL/Src\system_stm32f1xx.c ****         }
 184              		.loc 1 316 0
 185 0072 054A     		ldr	r2, .L15+8
 186 0074 02FB03F3 		mul	r3, r2, r3
 187              	.LVL20:
 188 0078 024A     		ldr	r2, .L15+4
 189 007a 1360     		str	r3, [r2]
 190 007c D0E7     		b	.L9
 191              	.L16:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s 			page 11


 192 007e 00BF     		.align	2
 193              	.L15:
 194 0080 00100240 		.word	1073876992
 195 0084 00000000 		.word	.LANCHOR0
 196 0088 00127A00 		.word	8000000
 197 008c 00000000 		.word	.LANCHOR1
 198 0090 00093D00 		.word	4000000
 199              		.cfi_endproc
 200              	.LFE65:
 201              		.cantunwind
 202              		.fnend
 204              		.global	APBPrescTable
 205              		.global	AHBPrescTable
 206              		.global	SystemCoreClock
 207              		.section	.data.SystemCoreClock,"aw",%progbits
 208              		.align	2
 209              		.set	.LANCHOR0,. + 0
 212              	SystemCoreClock:
 213 0000 00A24A04 		.word	72000000
 214              		.section	.rodata.AHBPrescTable,"a",%progbits
 215              		.align	2
 216              		.set	.LANCHOR1,. + 0
 219              	AHBPrescTable:
 220 0000 00       		.byte	0
 221 0001 00       		.byte	0
 222 0002 00       		.byte	0
 223 0003 00       		.byte	0
 224 0004 00       		.byte	0
 225 0005 00       		.byte	0
 226 0006 00       		.byte	0
 227 0007 00       		.byte	0
 228 0008 01       		.byte	1
 229 0009 02       		.byte	2
 230 000a 03       		.byte	3
 231 000b 04       		.byte	4
 232 000c 06       		.byte	6
 233 000d 07       		.byte	7
 234 000e 08       		.byte	8
 235 000f 09       		.byte	9
 236              		.section	.rodata.APBPrescTable,"a",%progbits
 237              		.align	2
 240              	APBPrescTable:
 241 0000 00       		.byte	0
 242 0001 00       		.byte	0
 243 0002 00       		.byte	0
 244 0003 00       		.byte	0
 245 0004 01       		.byte	1
 246 0005 02       		.byte	2
 247 0006 03       		.byte	3
 248 0007 04       		.byte	4
 249              		.text
 250              	.Letext0:
 251              		.file 2 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.
 252              		.file 3 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 253              		.file 4 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include/core_cm3.h"
 254              		.file 5 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1x
 255              		.file 6 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s 			page 12


 256              		.file 7 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 257              		.file 8 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\lock.h"
 258              		.file 9 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_types.h"
 259              		.file 10 "e:\\visualstudiocode\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\7.2.1\\include\\stddef
 260              		.file 11 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\reent.h"
 261              		.file 12 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f1xx.c
C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s:16     .text.SystemInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s:23     .text.SystemInit:00000000 SystemInit
C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s:67     .text.SystemInit:00000040 $d
       .ARM.exidx.text.SystemInit:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s:76     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s:83     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s:194    .text.SystemCoreClockUpdate:00000080 $d
.ARM.exidx.text.SystemCoreClockUpdate:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s:240    .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s:219    .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s:212    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s:208    .data.SystemCoreClock:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s:215    .rodata.AHBPrescTable:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccuPxRvT.s:237    .rodata.APBPrescTable:00000000 $d

NO UNDEFINED SYMBOLS
