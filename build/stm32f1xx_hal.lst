ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_MspInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              		.fnstart
  25              	.LFB66:
  26              		.file 1 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c"
   1:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
   2:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   ******************************************************************************
   3:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @file    stm32f1xx_hal.c
   4:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @author  MCD Application Team
   5:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief   HAL module driver.
   6:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *          This is the common part of the HAL initialization
   7:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *
   8:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   @verbatim
   9:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   ==============================================================================
  10:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****                      ##### How to use this driver #####
  11:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   ==============================================================================
  12:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     [..]
  13:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     [..]
  16:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     The HAL contains two APIs' categories:
  17:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****          (+) Common HAL APIs
  18:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****          (+) Services HAL APIs
  19:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
  20:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   @endverbatim
  21:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   ******************************************************************************
  22:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @attention
  23:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *
  24:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  25:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *
  26:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  31:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  32:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *      and/or other materials provided with the distribution.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 2


  33:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  34:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *      without specific prior written permission.
  36:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *
  37:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *
  48:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   ******************************************************************************
  49:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
  50:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
  51:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** #include "stm32f1xx_hal.h"
  53:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
  54:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /** @addtogroup STM32F1xx_HAL_Driver
  55:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @{
  56:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
  57:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
  58:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /** @defgroup HAL HAL
  59:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief HAL module driver.
  60:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @{
  61:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
  62:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
  63:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  64:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
  65:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  66:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /* Private define ------------------------------------------------------------*/
  67:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
  68:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  69:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @{
  70:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
  71:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
  72:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****  * @brief STM32F1xx HAL Driver version number V1.1.2
  73:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****    */
  74:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  75:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB1   (0x01U) /*!< [23:16] sub1 version */
  76:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB2   (0x02U) /*!< [15:8]  sub2 version */
  77:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  78:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION         ((__STM32F1xx_HAL_VERSION_MAIN << 24)\
  79:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB1 << 16)\
  80:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB2 << 8 )\
  81:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_RC))
  82:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
  83:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  84:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
  85:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
  86:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @}
  87:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
  88:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
  89:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 3


  90:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  91:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
  92:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  93:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @{
  94:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
  95:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** __IO uint32_t uwTick;
  96:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  97:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  98:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
  99:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @}
 100:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 101:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 102:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 103:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 104:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 105:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @{
 106:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 107:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 108:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions
 109:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 110:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****  *
 111:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** @verbatim
 112:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****  ===============================================================================
 113:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****               ##### Initialization and de-initialization functions #####
 114:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****  ===============================================================================
 115:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****    [..]  This section provides functions allowing to:
 116:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock
 117:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 118:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****           and the backup domain when enabled.
 119:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****       (+) de-Initializes common part of the HAL.
 120:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
 121:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****           Tick interrupt priority.
 122:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 123:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 124:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 125:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 126:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****              handled in milliseconds basis.
 127:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 128:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 129:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 130:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 131:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 132:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 133:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 134:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****             ISR process will be blocked.
 135:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 136:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 137:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** @endverbatim
 138:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @{
 139:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 140:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 141:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 142:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first
 143:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 144:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *         HAL function), it performs the following:
 145:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *           Configure the Flash prefetch.
 146:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 4


 147:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 148:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 149:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *           Set NVIC Group Priority to 4.
 150:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file
 151:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *           "stm32f1xx_hal_msp.c" to do the global low level hardware initialization
 152:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *
 153:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 154:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 155:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *         to have correct HAL operation.
 156:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval HAL status
 157:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 158:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 159:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 160:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 161:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 162:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** #if defined(STM32F101x6) || defined(STM32F101xB) || defined(STM32F101xE) || defined(STM32F101xG) ||
 163:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     defined(STM32F102x6) || defined(STM32F102xB) || \
 164:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) ||
 165:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     defined(STM32F105xC) || defined(STM32F107xC)
 166:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 167:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Prefetch buffer is not available on value line devices */
 168:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 169:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** #endif
 170:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** #endif /* PREFETCH_ENABLE */
 171:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 172:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Set Interrupt Group Priority */
 173:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 174:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 175:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 176:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 177:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 178:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Init the low level hardware */
 179:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   HAL_MspInit();
 180:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 181:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Return function status */
 182:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   return HAL_OK;
 183:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 184:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 185:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 186:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the systick.
 187:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *        of time base.
 188:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @note This function is optional.
 189:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval HAL status
 190:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 191:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 192:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 193:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Reset of all peripherals */
 194:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 195:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 196:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 197:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 198:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 199:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 200:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 201:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 202:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 203:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** #endif
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 5


 204:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 205:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* De-Init the low level hardware */
 206:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   HAL_MspDeInit();
 207:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 208:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Return function status */
 209:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   return HAL_OK;
 210:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 211:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 212:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 213:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief  Initialize the MSP.
 214:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval None
 215:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 216:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** __weak void HAL_MspInit(void)
 217:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
  27              		.loc 1 217 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 218:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 219:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 220:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****    */
 221:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
  32              		.loc 1 221 0
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE66:
  36              		.cantunwind
  37              		.fnend
  39              		.section	.text.HAL_MspDeInit,"ax",%progbits
  40              		.align	1
  41              		.weak	HAL_MspDeInit
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu softvfp
  47              	HAL_MspDeInit:
  48              		.fnstart
  49              	.LFB67:
 222:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 223:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 224:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief  DeInitializes the MSP.
 225:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval None
 226:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 227:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** __weak void HAL_MspDeInit(void)
 228:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
  50              		.loc 1 228 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
 229:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 230:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 231:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****    */
 232:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
  55              		.loc 1 232 0
  56 0000 7047     		bx	lr
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 6


  57              		.cfi_endproc
  58              	.LFE67:
  59              		.cantunwind
  60              		.fnend
  62              		.section	.text.HAL_DeInit,"ax",%progbits
  63              		.align	1
  64              		.global	HAL_DeInit
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu softvfp
  70              	HAL_DeInit:
  71              		.fnstart
  72              	.LFB65:
 192:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Reset of all peripherals */
  73              		.loc 1 192 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77 0000 10B5     		push	{r4, lr}
  78              		.save {r4, lr}
  79              	.LCFI0:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 4, -8
  82              		.cfi_offset 14, -4
 194:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  83              		.loc 1 194 0
  84 0002 064B     		ldr	r3, .L5
  85 0004 4FF0FF32 		mov	r2, #-1
  86 0008 DA60     		str	r2, [r3, #12]
 195:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
  87              		.loc 1 195 0
  88 000a 0024     		movs	r4, #0
  89 000c 1C61     		str	r4, [r3, #16]
 197:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  90              		.loc 1 197 0
  91 000e DA60     		str	r2, [r3, #12]
 198:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
  92              		.loc 1 198 0
  93 0010 DC60     		str	r4, [r3, #12]
 206:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
  94              		.loc 1 206 0
  95 0012 FFF7FEFF 		bl	HAL_MspDeInit
  96              	.LVL0:
 210:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
  97              		.loc 1 210 0
  98 0016 2046     		mov	r0, r4
  99 0018 10BD     		pop	{r4, pc}
 100              	.L6:
 101 001a 00BF     		.align	2
 102              	.L5:
 103 001c 00100240 		.word	1073876992
 104              		.cfi_endproc
 105              	.LFE65:
 106              		.fnend
 108              		.section	.text.HAL_InitTick,"ax",%progbits
 109              		.align	1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 7


 110              		.weak	HAL_InitTick
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu softvfp
 116              	HAL_InitTick:
 117              		.fnstart
 118              	.LFB68:
 233:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 234:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 235:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief This function configures the source of the time base.
 236:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated
 237:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *        Tick interrupt priority.
 238:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 239:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 240:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 241:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 242:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 243:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 244:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 245:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 246:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       implementation  in user file.
 247:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 248:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval HAL status
 249:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 250:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 251:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 119              		.loc 1 251 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              	.LVL1:
 124 0000 10B5     		push	{r4, lr}
 125              		.save {r4, lr}
 126              	.LCFI1:
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 4, -8
 129              		.cfi_offset 14, -4
 130 0002 0446     		mov	r4, r0
 252:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 253:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 131              		.loc 1 253 0
 132 0004 0E4B     		ldr	r3, .L13
 133 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 134              	.LVL2:
 135 0008 4FF47A73 		mov	r3, #1000
 136 000c B3FBF0F3 		udiv	r3, r3, r0
 137 0010 0C4A     		ldr	r2, .L13+4
 138 0012 1068     		ldr	r0, [r2]
 139 0014 B0FBF3F0 		udiv	r0, r0, r3
 140 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 141              	.LVL3:
 142 001c 68B9     		cbnz	r0, .L9
 254:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   {
 255:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     return HAL_ERROR;
 256:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   }
 257:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 8


 258:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Configure the SysTick IRQ priority */
 259:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 143              		.loc 1 259 0
 144 001e 0F2C     		cmp	r4, #15
 145 0020 01D9     		bls	.L12
 260:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   {
 261:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 262:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     uwTickPrio = TickPriority;
 263:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   }
 264:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   else
 265:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   {
 266:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     return HAL_ERROR;
 146              		.loc 1 266 0
 147 0022 0120     		movs	r0, #1
 148 0024 0AE0     		b	.L8
 149              	.L12:
 261:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     uwTickPrio = TickPriority;
 150              		.loc 1 261 0
 151 0026 0022     		movs	r2, #0
 152 0028 2146     		mov	r1, r4
 153 002a 4FF0FF30 		mov	r0, #-1
 154 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 155              	.LVL4:
 262:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   }
 156              		.loc 1 262 0
 157 0032 054B     		ldr	r3, .L13+8
 158 0034 1C60     		str	r4, [r3]
 267:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   }
 268:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 269:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Return function status */
 270:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   return HAL_OK;
 159              		.loc 1 270 0
 160 0036 0020     		movs	r0, #0
 161 0038 00E0     		b	.L8
 162              	.L9:
 255:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   }
 163              		.loc 1 255 0
 164 003a 0120     		movs	r0, #1
 165              	.L8:
 271:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 166              		.loc 1 271 0
 167 003c 10BD     		pop	{r4, pc}
 168              	.LVL5:
 169              	.L14:
 170 003e 00BF     		.align	2
 171              	.L13:
 172 0040 00000000 		.word	.LANCHOR0
 173 0044 00000000 		.word	SystemCoreClock
 174 0048 00000000 		.word	.LANCHOR1
 175              		.cfi_endproc
 176              	.LFE68:
 177              		.fnend
 179              		.section	.text.HAL_Init,"ax",%progbits
 180              		.align	1
 181              		.global	HAL_Init
 182              		.syntax unified
 183              		.thumb
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 9


 184              		.thumb_func
 185              		.fpu softvfp
 187              	HAL_Init:
 188              		.fnstart
 189              	.LFB64:
 159:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 190              		.loc 1 159 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194 0000 08B5     		push	{r3, lr}
 195              		.save {r3, lr}
 196              	.LCFI2:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 3, -8
 199              		.cfi_offset 14, -4
 168:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** #endif
 200              		.loc 1 168 0
 201 0002 074A     		ldr	r2, .L17
 202 0004 1368     		ldr	r3, [r2]
 203 0006 43F01003 		orr	r3, r3, #16
 204 000a 1360     		str	r3, [r2]
 173:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 205              		.loc 1 173 0
 206 000c 0320     		movs	r0, #3
 207 000e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 208              	.LVL6:
 176:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 209              		.loc 1 176 0
 210 0012 0020     		movs	r0, #0
 211 0014 FFF7FEFF 		bl	HAL_InitTick
 212              	.LVL7:
 179:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 213              		.loc 1 179 0
 214 0018 FFF7FEFF 		bl	HAL_MspInit
 215              	.LVL8:
 183:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 216              		.loc 1 183 0
 217 001c 0020     		movs	r0, #0
 218 001e 08BD     		pop	{r3, pc}
 219              	.L18:
 220              		.align	2
 221              	.L17:
 222 0020 00200240 		.word	1073881088
 223              		.cfi_endproc
 224              	.LFE64:
 225              		.fnend
 227              		.section	.text.HAL_IncTick,"ax",%progbits
 228              		.align	1
 229              		.weak	HAL_IncTick
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu softvfp
 235              	HAL_IncTick:
 236              		.fnstart
 237              	.LFB69:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 10


 272:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 273:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 274:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @}
 275:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 276:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 277:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions
 278:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *  @brief    HAL Control functions
 279:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *
 280:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** @verbatim
 281:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****  ===============================================================================
 282:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****                       ##### HAL Control functions #####
 283:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****  ===============================================================================
 284:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     [..]  This section provides functions allowing to:
 285:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****       (+) Provide a tick value in millisecond
 286:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****       (+) Provide a blocking delay in millisecond
 287:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****       (+) Suspend the time base source interrupt
 288:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****       (+) Resume the time base source interrupt
 289:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****       (+) Get the HAL API driver version
 290:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****       (+) Get the device identifier
 291:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****       (+) Get the device revision identifier
 292:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 293:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 294:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 295:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 296:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** @endverbatim
 297:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @{
 298:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 299:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 300:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 301:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 302:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *        used as application time base.
 303:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 304:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       in SysTick ISR.
 305:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 306:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *      implementations in user file.
 307:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval None
 308:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 309:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** __weak void HAL_IncTick(void)
 310:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 238              		.loc 1 310 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 311:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   uwTick += uwTickFreq;
 243              		.loc 1 311 0
 244 0000 034A     		ldr	r2, .L20
 245 0002 1168     		ldr	r1, [r2]
 246 0004 034B     		ldr	r3, .L20+4
 247 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 248 0008 0B44     		add	r3, r3, r1
 249 000a 1360     		str	r3, [r2]
 312:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 250              		.loc 1 312 0
 251 000c 7047     		bx	lr
 252              	.L21:
 253 000e 00BF     		.align	2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 11


 254              	.L20:
 255 0010 00000000 		.word	.LANCHOR2
 256 0014 00000000 		.word	.LANCHOR0
 257              		.cfi_endproc
 258              	.LFE69:
 259              		.cantunwind
 260              		.fnend
 262              		.section	.text.HAL_GetTick,"ax",%progbits
 263              		.align	1
 264              		.weak	HAL_GetTick
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu softvfp
 270              	HAL_GetTick:
 271              		.fnstart
 272              	.LFB70:
 313:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 314:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 315:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief Provides a tick value in millisecond.
 316:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @note  This function is declared as __weak to be overwritten in case of other
 317:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       implementations in user file.
 318:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval tick value
 319:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 320:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 321:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 273              		.loc 1 321 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 322:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   return uwTick;
 278              		.loc 1 322 0
 279 0000 014B     		ldr	r3, .L23
 280 0002 1868     		ldr	r0, [r3]
 323:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 281              		.loc 1 323 0
 282 0004 7047     		bx	lr
 283              	.L24:
 284 0006 00BF     		.align	2
 285              	.L23:
 286 0008 00000000 		.word	.LANCHOR2
 287              		.cfi_endproc
 288              	.LFE70:
 289              		.cantunwind
 290              		.fnend
 292              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 293              		.align	1
 294              		.global	HAL_GetTickPrio
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 298              		.fpu softvfp
 300              	HAL_GetTickPrio:
 301              		.fnstart
 302              	.LFB71:
 324:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 12


 325:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 326:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief This function returns a tick priority.
 327:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval tick priority
 328:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 329:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 330:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 303              		.loc 1 330 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 331:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   return uwTickPrio;
 332:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 308              		.loc 1 332 0
 309 0000 014B     		ldr	r3, .L26
 310 0002 1868     		ldr	r0, [r3]
 311 0004 7047     		bx	lr
 312              	.L27:
 313 0006 00BF     		.align	2
 314              	.L26:
 315 0008 00000000 		.word	.LANCHOR1
 316              		.cfi_endproc
 317              	.LFE71:
 318              		.cantunwind
 319              		.fnend
 321              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 322              		.align	1
 323              		.global	HAL_SetTickFreq
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 327              		.fpu softvfp
 329              	HAL_SetTickFreq:
 330              		.fnstart
 331              	.LFB72:
 333:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 334:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 335:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief Set new tick Freq.
 336:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval Status
 337:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 338:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 339:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 332              		.loc 1 339 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              	.LVL9:
 337 0000 08B5     		push	{r3, lr}
 338              		.save {r3, lr}
 339              	.LCFI3:
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 3, -8
 342              		.cfi_offset 14, -4
 343              	.LVL10:
 340:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 341:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 342:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 13


 343:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   if (uwTickFreq != Freq)
 344              		.loc 1 343 0
 345 0002 064B     		ldr	r3, .L32
 346 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 347 0006 8342     		cmp	r3, r0
 348 0008 06D0     		beq	.L30
 344:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   {
 345:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     uwTickFreq = Freq;
 349              		.loc 1 345 0
 350 000a 044B     		ldr	r3, .L32
 351 000c 1870     		strb	r0, [r3]
 346:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 347:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     /* Apply the new tick Freq  */
 348:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 352              		.loc 1 348 0
 353 000e 044B     		ldr	r3, .L32+4
 354 0010 1868     		ldr	r0, [r3]
 355              	.LVL11:
 356 0012 FFF7FEFF 		bl	HAL_InitTick
 357              	.LVL12:
 358              	.L29:
 349:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   }
 350:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 351:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   return status;
 352:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 359              		.loc 1 352 0
 360 0016 08BD     		pop	{r3, pc}
 361              	.LVL13:
 362              	.L30:
 340:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 363              		.loc 1 340 0
 364 0018 0020     		movs	r0, #0
 365              	.LVL14:
 366 001a FCE7     		b	.L29
 367              	.L33:
 368              		.align	2
 369              	.L32:
 370 001c 00000000 		.word	.LANCHOR0
 371 0020 00000000 		.word	.LANCHOR1
 372              		.cfi_endproc
 373              	.LFE72:
 374              		.fnend
 376              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 377              		.align	1
 378              		.global	HAL_GetTickFreq
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu softvfp
 384              	HAL_GetTickFreq:
 385              		.fnstart
 386              	.LFB73:
 353:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 354:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 355:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief Return tick frequency.
 356:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval tick period in Hz
 357:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 14


 358:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 359:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 387              		.loc 1 359 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 360:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   return uwTickFreq;
 361:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 392              		.loc 1 361 0
 393 0000 014B     		ldr	r3, .L35
 394 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 395 0004 7047     		bx	lr
 396              	.L36:
 397 0006 00BF     		.align	2
 398              	.L35:
 399 0008 00000000 		.word	.LANCHOR0
 400              		.cfi_endproc
 401              	.LFE73:
 402              		.cantunwind
 403              		.fnend
 405              		.section	.text.HAL_Delay,"ax",%progbits
 406              		.align	1
 407              		.weak	HAL_Delay
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 411              		.fpu softvfp
 413              	HAL_Delay:
 414              		.fnstart
 415              	.LFB74:
 362:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 363:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 364:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 365:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *        on variable incremented.
 366:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 367:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 368:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       is incremented.
 369:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 370:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       implementations in user file.
 371:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 372:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval None
 373:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 374:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 375:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 416              		.loc 1 375 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              	.LVL15:
 421 0000 38B5     		push	{r3, r4, r5, lr}
 422              		.save {r3, r4, r5, lr}
 423              	.LCFI4:
 424              		.cfi_def_cfa_offset 16
 425              		.cfi_offset 3, -16
 426              		.cfi_offset 4, -12
 427              		.cfi_offset 5, -8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 15


 428              		.cfi_offset 14, -4
 429 0002 0446     		mov	r4, r0
 376:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 430              		.loc 1 376 0
 431 0004 FFF7FEFF 		bl	HAL_GetTick
 432              	.LVL16:
 433 0008 0546     		mov	r5, r0
 434              	.LVL17:
 377:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   uint32_t wait = Delay;
 378:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 379:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 380:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 435              		.loc 1 380 0
 436 000a B4F1FF3F 		cmp	r4, #-1
 437 000e 02D0     		beq	.L39
 381:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   {
 382:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 438              		.loc 1 382 0
 439 0010 044B     		ldr	r3, .L41
 440 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 441 0014 1C44     		add	r4, r4, r3
 442              	.LVL18:
 443              	.L39:
 383:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   }
 384:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 385:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 444              		.loc 1 385 0
 445 0016 FFF7FEFF 		bl	HAL_GetTick
 446              	.LVL19:
 447 001a 401B     		subs	r0, r0, r5
 448 001c A042     		cmp	r0, r4
 449 001e FAD3     		bcc	.L39
 386:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   {
 387:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   }
 388:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 450              		.loc 1 388 0
 451 0020 38BD     		pop	{r3, r4, r5, pc}
 452              	.LVL20:
 453              	.L42:
 454 0022 00BF     		.align	2
 455              	.L41:
 456 0024 00000000 		.word	.LANCHOR0
 457              		.cfi_endproc
 458              	.LFE74:
 459              		.fnend
 461              		.section	.text.HAL_SuspendTick,"ax",%progbits
 462              		.align	1
 463              		.weak	HAL_SuspendTick
 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 467              		.fpu softvfp
 469              	HAL_SuspendTick:
 470              		.fnstart
 471              	.LFB75:
 389:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 390:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 16


 391:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief Suspend Tick increment.
 392:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 393:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 394:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 395:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       is suspended.
 396:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 397:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       implementations in user file.
 398:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval None
 399:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 400:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** __weak void HAL_SuspendTick(void)
 401:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 472              		.loc 1 401 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 402:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Disable SysTick Interrupt */
 403:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 477              		.loc 1 403 0
 478 0000 024A     		ldr	r2, .L44
 479 0002 1368     		ldr	r3, [r2]
 480 0004 23F00203 		bic	r3, r3, #2
 481 0008 1360     		str	r3, [r2]
 404:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 482              		.loc 1 404 0
 483 000a 7047     		bx	lr
 484              	.L45:
 485              		.align	2
 486              	.L44:
 487 000c 10E000E0 		.word	-536813552
 488              		.cfi_endproc
 489              	.LFE75:
 490              		.cantunwind
 491              		.fnend
 493              		.section	.text.HAL_ResumeTick,"ax",%progbits
 494              		.align	1
 495              		.weak	HAL_ResumeTick
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu softvfp
 501              	HAL_ResumeTick:
 502              		.fnstart
 503              	.LFB76:
 405:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 406:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 407:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief Resume Tick increment.
 408:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 409:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 410:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 411:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       is resumed.
 412:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 413:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       implementations in user file.
 414:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval None
 415:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 416:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** __weak void HAL_ResumeTick(void)
 417:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 17


 504              		.loc 1 417 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 418:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   /* Enable SysTick Interrupt */
 419:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   SET_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 509              		.loc 1 419 0
 510 0000 024A     		ldr	r2, .L47
 511 0002 1368     		ldr	r3, [r2]
 512 0004 43F00203 		orr	r3, r3, #2
 513 0008 1360     		str	r3, [r2]
 420:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 514              		.loc 1 420 0
 515 000a 7047     		bx	lr
 516              	.L48:
 517              		.align	2
 518              	.L47:
 519 000c 10E000E0 		.word	-536813552
 520              		.cfi_endproc
 521              	.LFE76:
 522              		.cantunwind
 523              		.fnend
 525              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 526              		.align	1
 527              		.global	HAL_GetHalVersion
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 531              		.fpu softvfp
 533              	HAL_GetHalVersion:
 534              		.fnstart
 535              	.LFB77:
 421:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 422:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 423:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief  Returns the HAL revision
 424:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval version 0xXYZR (8bits for each decimal, R for RC)
 425:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 426:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 427:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 536              		.loc 1 427 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 428:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   return __STM32F1xx_HAL_VERSION;
 429:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 541              		.loc 1 429 0
 542 0000 0048     		ldr	r0, .L50
 543 0002 7047     		bx	lr
 544              	.L51:
 545              		.align	2
 546              	.L50:
 547 0004 00020101 		.word	16843264
 548              		.cfi_endproc
 549              	.LFE77:
 550              		.cantunwind
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 18


 551              		.fnend
 553              		.section	.text.HAL_GetREVID,"ax",%progbits
 554              		.align	1
 555              		.global	HAL_GetREVID
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu softvfp
 561              	HAL_GetREVID:
 562              		.fnstart
 563              	.LFB78:
 430:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 431:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 432:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief Returns the device revision identifier.
 433:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 434:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 435:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 436:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 437:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 438:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 439:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 440:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval Device revision identifier
 441:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 442:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** uint32_t HAL_GetREVID(void)
 443:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 564              		.loc 1 443 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 444:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   return ((DBGMCU->IDCODE) >> DBGMCU_IDCODE_REV_ID_Pos);
 569              		.loc 1 444 0
 570 0000 014B     		ldr	r3, .L53
 571 0002 1868     		ldr	r0, [r3]
 445:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 572              		.loc 1 445 0
 573 0004 000C     		lsrs	r0, r0, #16
 574 0006 7047     		bx	lr
 575              	.L54:
 576              		.align	2
 577              	.L53:
 578 0008 002004E0 		.word	-536600576
 579              		.cfi_endproc
 580              	.LFE78:
 581              		.cantunwind
 582              		.fnend
 584              		.section	.text.HAL_GetDEVID,"ax",%progbits
 585              		.align	1
 586              		.global	HAL_GetDEVID
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu softvfp
 592              	HAL_GetDEVID:
 593              		.fnstart
 594              	.LFB79:
 446:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 19


 447:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 448:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief  Returns the device identifier.
 449:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 450:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 451:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 452:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 453:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 454:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 455:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 456:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval Device identifier
 457:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 458:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** uint32_t HAL_GetDEVID(void)
 459:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 595              		.loc 1 459 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 460:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   return ((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 600              		.loc 1 460 0
 601 0000 024B     		ldr	r3, .L56
 602 0002 1868     		ldr	r0, [r3]
 461:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 603              		.loc 1 461 0
 604 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 605 0008 7047     		bx	lr
 606              	.L57:
 607 000a 00BF     		.align	2
 608              	.L56:
 609 000c 002004E0 		.word	-536600576
 610              		.cfi_endproc
 611              	.LFE79:
 612              		.cantunwind
 613              		.fnend
 615              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 616              		.align	1
 617              		.global	HAL_DBGMCU_EnableDBGSleepMode
 618              		.syntax unified
 619              		.thumb
 620              		.thumb_func
 621              		.fpu softvfp
 623              	HAL_DBGMCU_EnableDBGSleepMode:
 624              		.fnstart
 625              	.LFB80:
 462:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 463:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 464:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 465:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval None
 466:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 467:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 468:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 626              		.loc 1 468 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              		@ link register save eliminated.
 469:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 20


 631              		.loc 1 469 0
 632 0000 024A     		ldr	r2, .L59
 633 0002 5368     		ldr	r3, [r2, #4]
 634 0004 43F00103 		orr	r3, r3, #1
 635 0008 5360     		str	r3, [r2, #4]
 470:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 636              		.loc 1 470 0
 637 000a 7047     		bx	lr
 638              	.L60:
 639              		.align	2
 640              	.L59:
 641 000c 002004E0 		.word	-536600576
 642              		.cfi_endproc
 643              	.LFE80:
 644              		.cantunwind
 645              		.fnend
 647              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 648              		.align	1
 649              		.global	HAL_DBGMCU_DisableDBGSleepMode
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 653              		.fpu softvfp
 655              	HAL_DBGMCU_DisableDBGSleepMode:
 656              		.fnstart
 657              	.LFB81:
 471:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 472:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 473:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 474:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 475:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 476:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 477:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 478:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 479:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 480:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 481:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval None
 482:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 483:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 484:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 658              		.loc 1 484 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 485:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 663              		.loc 1 485 0
 664 0000 024A     		ldr	r2, .L62
 665 0002 5368     		ldr	r3, [r2, #4]
 666 0004 23F00103 		bic	r3, r3, #1
 667 0008 5360     		str	r3, [r2, #4]
 486:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 668              		.loc 1 486 0
 669 000a 7047     		bx	lr
 670              	.L63:
 671              		.align	2
 672              	.L62:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 21


 673 000c 002004E0 		.word	-536600576
 674              		.cfi_endproc
 675              	.LFE81:
 676              		.cantunwind
 677              		.fnend
 679              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 680              		.align	1
 681              		.global	HAL_DBGMCU_EnableDBGStopMode
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
 685              		.fpu softvfp
 687              	HAL_DBGMCU_EnableDBGStopMode:
 688              		.fnstart
 689              	.LFB82:
 487:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 488:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 489:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 490:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 491:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 492:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 493:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 494:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 495:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 496:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 497:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 498:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode
 499:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 500:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       the system from Stop mode.
 501:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 502:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       interrupt.
 503:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 504:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 505:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode
 506:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 507:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       the system from Stop mode.
 508:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 509:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       interrupt.
 510:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 511:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval None
 512:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 513:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 514:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 690              		.loc 1 514 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694              		@ link register save eliminated.
 515:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 695              		.loc 1 515 0
 696 0000 024A     		ldr	r2, .L65
 697 0002 5368     		ldr	r3, [r2, #4]
 698 0004 43F00203 		orr	r3, r3, #2
 699 0008 5360     		str	r3, [r2, #4]
 516:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 700              		.loc 1 516 0
 701 000a 7047     		bx	lr
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 22


 702              	.L66:
 703              		.align	2
 704              	.L65:
 705 000c 002004E0 		.word	-536600576
 706              		.cfi_endproc
 707              	.LFE82:
 708              		.cantunwind
 709              		.fnend
 711              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 712              		.align	1
 713              		.global	HAL_DBGMCU_DisableDBGStopMode
 714              		.syntax unified
 715              		.thumb
 716              		.thumb_func
 717              		.fpu softvfp
 719              	HAL_DBGMCU_DisableDBGStopMode:
 720              		.fnstart
 721              	.LFB83:
 517:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 518:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 519:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 520:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 521:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 522:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 523:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 524:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 525:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 526:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 527:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval None
 528:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 529:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 530:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 722              		.loc 1 530 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726              		@ link register save eliminated.
 531:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 727              		.loc 1 531 0
 728 0000 024A     		ldr	r2, .L68
 729 0002 5368     		ldr	r3, [r2, #4]
 730 0004 23F00203 		bic	r3, r3, #2
 731 0008 5360     		str	r3, [r2, #4]
 532:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 732              		.loc 1 532 0
 733 000a 7047     		bx	lr
 734              	.L69:
 735              		.align	2
 736              	.L68:
 737 000c 002004E0 		.word	-536600576
 738              		.cfi_endproc
 739              	.LFE83:
 740              		.cantunwind
 741              		.fnend
 743              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 744              		.align	1
 745              		.global	HAL_DBGMCU_EnableDBGStandbyMode
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 23


 746              		.syntax unified
 747              		.thumb
 748              		.thumb_func
 749              		.fpu softvfp
 751              	HAL_DBGMCU_EnableDBGStandbyMode:
 752              		.fnstart
 753              	.LFB84:
 533:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 534:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 535:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 536:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 537:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 538:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 539:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 540:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 541:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 542:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 543:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval None
 544:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 545:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 546:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 754              		.loc 1 546 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              		@ link register save eliminated.
 547:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 759              		.loc 1 547 0
 760 0000 024A     		ldr	r2, .L71
 761 0002 5368     		ldr	r3, [r2, #4]
 762 0004 43F00403 		orr	r3, r3, #4
 763 0008 5360     		str	r3, [r2, #4]
 548:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 764              		.loc 1 548 0
 765 000a 7047     		bx	lr
 766              	.L72:
 767              		.align	2
 768              	.L71:
 769 000c 002004E0 		.word	-536600576
 770              		.cfi_endproc
 771              	.LFE84:
 772              		.cantunwind
 773              		.fnend
 775              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 776              		.align	1
 777              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 781              		.fpu softvfp
 783              	HAL_DBGMCU_DisableDBGStandbyMode:
 784              		.fnstart
 785              	.LFB85:
 549:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 550:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 551:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 552:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 24


 553:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 554:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 555:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 556:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 557:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 558:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 559:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval None
 560:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 561:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 562:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 786              		.loc 1 562 0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790              		@ link register save eliminated.
 563:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 791              		.loc 1 563 0
 792 0000 024A     		ldr	r2, .L74
 793 0002 5368     		ldr	r3, [r2, #4]
 794 0004 23F00403 		bic	r3, r3, #4
 795 0008 5360     		str	r3, [r2, #4]
 564:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 796              		.loc 1 564 0
 797 000a 7047     		bx	lr
 798              	.L75:
 799              		.align	2
 800              	.L74:
 801 000c 002004E0 		.word	-536600576
 802              		.cfi_endproc
 803              	.LFE85:
 804              		.cantunwind
 805              		.fnend
 807              		.section	.text.HAL_GetUID,"ax",%progbits
 808              		.align	1
 809              		.global	HAL_GetUID
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 813              		.fpu softvfp
 815              	HAL_GetUID:
 816              		.fnstart
 817              	.LFB86:
 565:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** 
 566:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** /**
 567:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @brief Return the unique device identifier (UID based on 96 bits)
 568:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @param UID pointer to 3 words array.
 569:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   * @retval Device identifier
 570:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   */
 571:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** void HAL_GetUID(uint32_t *UID)
 572:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** {
 818              		.loc 1 572 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 823              	.LVL21:
 573:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   UID[0] = (uint32_t)(READ_REG(*((uint32_t *)UID_BASE)));
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 25


 824              		.loc 1 573 0
 825 0000 044B     		ldr	r3, .L77
 826 0002 1B68     		ldr	r3, [r3]
 827 0004 0360     		str	r3, [r0]
 574:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   UID[1] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 828              		.loc 1 574 0
 829 0006 044B     		ldr	r3, .L77+4
 830 0008 1B68     		ldr	r3, [r3]
 831 000a 4360     		str	r3, [r0, #4]
 575:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c ****   UID[2] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 832              		.loc 1 575 0
 833 000c 034B     		ldr	r3, .L77+8
 834 000e 1B68     		ldr	r3, [r3]
 835 0010 8360     		str	r3, [r0, #8]
 576:E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Src\stm32f1xx_hal.c **** }
 836              		.loc 1 576 0
 837 0012 7047     		bx	lr
 838              	.L78:
 839              		.align	2
 840              	.L77:
 841 0014 E8F7FF1F 		.word	536868840
 842 0018 ECF7FF1F 		.word	536868844
 843 001c F0F7FF1F 		.word	536868848
 844              		.cfi_endproc
 845              	.LFE86:
 846              		.cantunwind
 847              		.fnend
 849              		.global	uwTickFreq
 850              		.global	uwTickPrio
 851              		.global	uwTick
 852              		.section	.bss.uwTick,"aw",%nobits
 853              		.align	2
 854              		.set	.LANCHOR2,. + 0
 857              	uwTick:
 858 0000 00000000 		.space	4
 859              		.section	.data.uwTickFreq,"aw",%progbits
 860              		.set	.LANCHOR0,. + 0
 863              	uwTickFreq:
 864 0000 01       		.byte	1
 865              		.section	.data.uwTickPrio,"aw",%progbits
 866              		.align	2
 867              		.set	.LANCHOR1,. + 0
 870              	uwTickPrio:
 871 0000 10000000 		.word	16
 872              		.text
 873              	.Letext0:
 874              		.file 2 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 875              		.file 3 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.
 876              		.file 4 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 877              		.file 5 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Include/core_cm3.h"
 878              		.file 6 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1x
 879              		.file 7 "E:/VisualStudioCode/STM32F1_HAL/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 880              		.file 8 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\lock.h"
 881              		.file 9 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_types.h"
 882              		.file 10 "e:\\visualstudiocode\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\7.2.1\\include\\stddef
 883              		.file 11 "e:\\visualstudiocode\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\reent.h"
 884              		.file 12 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 26


 885              		.file 13 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 886              		.file 14 "E:/VisualStudioCode/STM32F1_HAL/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 27


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal.c
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:16     .text.HAL_MspInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:23     .text.HAL_MspInit:00000000 HAL_MspInit
      .ARM.exidx.text.HAL_MspInit:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:40     .text.HAL_MspDeInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:47     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
    .ARM.exidx.text.HAL_MspDeInit:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:63     .text.HAL_DeInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:70     .text.HAL_DeInit:00000000 HAL_DeInit
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:103    .text.HAL_DeInit:0000001c $d
       .ARM.exidx.text.HAL_DeInit:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:109    .text.HAL_InitTick:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:116    .text.HAL_InitTick:00000000 HAL_InitTick
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:172    .text.HAL_InitTick:00000040 $d
     .ARM.exidx.text.HAL_InitTick:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:180    .text.HAL_Init:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:187    .text.HAL_Init:00000000 HAL_Init
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:222    .text.HAL_Init:00000020 $d
         .ARM.extab.text.HAL_Init:00000000 $d
         .ARM.exidx.text.HAL_Init:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:228    .text.HAL_IncTick:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:235    .text.HAL_IncTick:00000000 HAL_IncTick
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:255    .text.HAL_IncTick:00000010 $d
      .ARM.exidx.text.HAL_IncTick:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:263    .text.HAL_GetTick:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:270    .text.HAL_GetTick:00000000 HAL_GetTick
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:286    .text.HAL_GetTick:00000008 $d
      .ARM.exidx.text.HAL_GetTick:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:293    .text.HAL_GetTickPrio:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:300    .text.HAL_GetTickPrio:00000000 HAL_GetTickPrio
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:315    .text.HAL_GetTickPrio:00000008 $d
  .ARM.exidx.text.HAL_GetTickPrio:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:322    .text.HAL_SetTickFreq:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:329    .text.HAL_SetTickFreq:00000000 HAL_SetTickFreq
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:370    .text.HAL_SetTickFreq:0000001c $d
  .ARM.extab.text.HAL_SetTickFreq:00000000 $d
  .ARM.exidx.text.HAL_SetTickFreq:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:377    .text.HAL_GetTickFreq:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:384    .text.HAL_GetTickFreq:00000000 HAL_GetTickFreq
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:399    .text.HAL_GetTickFreq:00000008 $d
  .ARM.exidx.text.HAL_GetTickFreq:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:406    .text.HAL_Delay:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:413    .text.HAL_Delay:00000000 HAL_Delay
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:456    .text.HAL_Delay:00000024 $d
        .ARM.exidx.text.HAL_Delay:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:462    .text.HAL_SuspendTick:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:469    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:487    .text.HAL_SuspendTick:0000000c $d
  .ARM.exidx.text.HAL_SuspendTick:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:494    .text.HAL_ResumeTick:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:501    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:519    .text.HAL_ResumeTick:0000000c $d
   .ARM.exidx.text.HAL_ResumeTick:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:526    .text.HAL_GetHalVersion:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:533    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:547    .text.HAL_GetHalVersion:00000004 $d
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s 			page 28


.ARM.exidx.text.HAL_GetHalVersion:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:554    .text.HAL_GetREVID:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:561    .text.HAL_GetREVID:00000000 HAL_GetREVID
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:578    .text.HAL_GetREVID:00000008 $d
     .ARM.exidx.text.HAL_GetREVID:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:585    .text.HAL_GetDEVID:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:592    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:609    .text.HAL_GetDEVID:0000000c $d
     .ARM.exidx.text.HAL_GetDEVID:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:616    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:623    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 HAL_DBGMCU_EnableDBGSleepMode
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:641    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000c $d
.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:648    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:655    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 HAL_DBGMCU_DisableDBGSleepMode
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:673    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000c $d
.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:680    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:687    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:705    .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:712    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:719    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:737    .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:744    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:751    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:769    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:776    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:783    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:801    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:808    .text.HAL_GetUID:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:815    .text.HAL_GetUID:00000000 HAL_GetUID
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:841    .text.HAL_GetUID:00000014 $d
       .ARM.exidx.text.HAL_GetUID:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:863    .data.uwTickFreq:00000000 uwTickFreq
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:870    .data.uwTickPrio:00000000 uwTickPrio
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:857    .bss.uwTick:00000000 uwTick
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:853    .bss.uwTick:00000000 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccHYbk9a.s:866    .data.uwTickPrio:00000000 $d

UNDEFINED SYMBOLS
__aeabi_unwind_cpp_pr0
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
__aeabi_unwind_cpp_pr1
